{
  "info": {
    "_postman_id": "34936b8e-82cd-4912-b9cc-c7adcf415a1b",
    "name": "Commvault Rest API - Public 2",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "CVPowerShellSDK",
      "item": [
        {
          "name": "Get-CVBlackoutWindow",
          "item": [],
          "_postman_id": "07b28845-60d9-44fa-a61f-e2d6555f561d",
          "description": "SYNTAX\n\n    Get-CVBlackoutWindow [-CommcellId <Int32>] [-ClientId <Int32>] [-AppTypeId <Int32>] [-InstanceId <Int32>] [-BackupsetId <Int32>][-SubclientId <Int32>] [-ClientgroupId <Int32>] [-CompanyId <Int32>] [-SchedulePolicyId <Int32>] [<CommonParameters>]\n\n    Get-CVBlackoutWindow [-Name <String>] [-CommcellId <Int32>] [-ClientId <Int32>] [-AppTypeId <Int32>] [-InstanceId <Int32>] [-BackupsetId <Int32>] [-SubclientId <Int32>] [-ClientgroupId <Int32>] [-CompanyId <Int32>] [-SchedulePolicyId <Int32>] [<CommonParameters>]\n\n    Get-CVBlackoutWindow [-Id <Int32>] [-CommcellId <Int32>] [-ClientId <Int32>] [-AppTypeId <Int32>] [-InstanceId <Int32>] [-BackupsetId <Int32>] [-SubclientId <Int32>] [-ClientgroupId <Int32>] [-CompanyId <Int32>] [-SchedulePolicyId <Int32>] [<CommonParameters>]\n\nDESCRIPTION\n\n    Method to retrieve blackout window rules from the CommServe.\n    Output can be filtered by rule Id, Name, CommcellId, ClientId, AppTypeId, InstanceId, BackupsetId, SubclientId, ClientgroupId, CompanyId, or SchedulePolicyId.\n\nPARAMETERS\n\n    -Name <String>\n        Specify blackout window rules to be output by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Specify blackout window rule to be output by Id.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -CommcellId <Int32>\n        Specify blackout window rule subset by CommcellId (default = 2).\n\n        Required?                    false\n        Position?                    named\n        Default value                2\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -ClientId <Int32>\n        Specify blackout window rule subset by ClientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AppTypeId <Int32>\n        Specify blackout window rule subset by AppTypeId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -InstanceId <Int32>\n        Specify blackout window rule subset by InstanceId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupsetId <Int32>\n        Specify blackout window rule subset by BackupsetId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientId <Int32>\n        Specify blackout window rule subset by SubclientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -ClientgroupId <Int32>\n        Specify blackout window rule subset by ClientgroupId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -CompanyId <Int32>\n        Specify blackout window rule subset by CompanyId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SchedulePolicyId <Int32>\n        Specify blackout window rule subset by SchedulePolicyId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing blackout window rules.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVBlackoutWindow\n    \nEXAMPLE 2\n\n    PS C:\\>Get-CVBlackoutWindow -Name CommCell-BWR-1\n   \nEXAMPLE 3\n \n    PS C:\\>Get-CVBlackoutWindow -Id 3\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVBlackoutWindow -ClientgroupId 4\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVBlackoutWindow -ClientId 2\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVBlackoutWindow -AppTypeId 81\n\nEXAMPLE 7\n\n    PS C:\\>Get-CVBlackoutWindow -InstanceId 9",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "id": "4b37d78a-8b1a-48fa-ac6a-4d76bd58c415"
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "id": "44f28407-2e8a-4736-853e-b00c8199906c"
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Set-CVBlackoutWindow",
          "item": [],
          "_postman_id": "1bc175b1-6f63-4440-bab9-6925783b31b6",
          "description": "SYNTAX\n\n    Set-CVBlackoutWindow [-Properties] <Object> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n    \n    \nDESCRIPTION\n\n    Method to set/update a blackout window rule.\n\nPARAMETERS\n\n    -Properties <Object>\n        Piped-in Properties set.\n\n        Required?                    true\n        Position?                    1\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n    \n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>$props = Get-CVBlackoutWindow -Name 'My Blackout Rule'\n\n    PS C:\\>$props.name = 'Your Blackout Rule'\n    PS C:\\>$props | Set-CVBlackoutWindow -Force\n\nEXAMPLE 2\n\n    PS C:\\>$props = Get-CVBlackoutWindow -Id 7\n\n    PS C:\\>$props.operations = @(8, 512, 524888)\n    PS C:\\>$props | Set-CVBlackoutWindow -Force\n\n",
          "_postman_isSubFolder": true
        },
        {
          "name": "Enable-CVBlackoutWindowIgnoreHigherLevelRules",
          "item": [],
          "_postman_id": "a4d6a99a-5205-44ac-9edc-d13db7d49f8d",
          "description": "SYNTAX\n\n    Enable-CVBlackoutWindowIgnoreHigherLevelRules [[-ClientId] <Int32>] [[-AppTypeId] <Int32>] [[-InstanceId] <Int32>] [[-BackupsetId]\n    <Int32>] [[-SubclientId] <Int32>] [-Force] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to enable 'ignore CommCell higher-level blackout window rules' by entity.\n\n\nPARAMETERS\n\n    -ClientId <Int32>\n        Specify entity by ClientId.\n\n        Required?                    false\n        Position?                    1\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AppTypeId <Int32>\n        Specify entity by AppTypeId.\n\n        Required?                    false\n        Position?                    2\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -InstanceId <Int32>\n        Specify entity by InstanceId.\n\n        Required?                    false\n        Position?                    3\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupsetId <Int32>\n        Specify entity by BackupsetId.\n\n        Required?                    false\n        Position?                    4\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientId <Int32>\n        Specify entity by SubclientId.\n\n        Required?                    false\n        Position?                    5\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing result code.\n\nEXAMPLE 1\n\n    PS C:\\>Enable-CVBlackoutWindowIgnoreHigherLevelRules -SubclientId 4",
          "_postman_isSubFolder": true
        },
        {
          "name": "Disable-CVBlackoutWindowIgnoreHigherLevelRules",
          "item": [],
          "_postman_id": "eef4a1cd-76fd-49f7-b4f4-c98b11347b8d",
          "description": "SYNTAX\n\n    Disable-CVBlackoutWindowIgnoreHigherLevelRules [[-ClientId] <Int32>] [[-AppTypeId] <Int32>] [[-InstanceId] <Int32>] [[-BackupsetId]\n    <Int32>] [[-SubclientId] <Int32>] [-Force] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to disable 'ignore CommCell higher-level blackout window rules' by entity.\n\n\nPARAMETERS\n\n    -ClientId <Int32>\n        Specify entity by ClientId.\n\n        Required?                    false\n        Position?                    1\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AppTypeId <Int32>\n        Specify entity by AppTypeId.\n\n        Required?                    false\n        Position?                    2\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -InstanceId <Int32>\n        Specify entity by InstanceId.\n\n        Required?                    false\n        Position?                    3\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupsetId <Int32>\n        Specify entity by BackupsetId.\n\n        Required?                    false\n        Position?                    4\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientId <Int32>\n        Specify entity by SubclientId.\n\n        Required?                    false\n        Position?                    5\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing result code.\n\nEXAMPLE 1\n\n    PS C:\\>Disable-CVBlackoutWindowIgnoreHigherLevelRules -SubclientId 4",
          "_postman_isSubFolder": true
        },
        {
          "name": "Add-CVBlackoutWindow",
          "item": [],
          "_postman_id": "c43f595b-0e8b-4095-b539-91ba39983845",
          "description": "SYNTAX\n\n    Add-CVBlackoutWindow [-Properties] <Object> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to add/create an blackout window rule.\n\n\nPARAMETERS\n\n    -Properties <Object>\n        Piped-in Properties set.\n\n        Required?                    true\n        Position?                    1\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>$props = Get-CVBlackoutWindow -Name 'My Blackout Rule'\n\n    PS C:\\>$props.name='Your Blackout Rule'\n    PS C:\\>$props | Add-CVBlackoutWindow -Force",
          "_postman_isSubFolder": true
        },
        {
          "name": "Remove-CVBlackoutWindow",
          "item": [],
          "_postman_id": "4890e88a-1473-45b5-9e3c-296b9f553a95",
          "description": "SYNTAX\n\n    Remove-CVBlackoutWindow [-Id] <Int32> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to remove/delete an blackout window rule from the CommServe.\n\n\nPARAMETERS\n\n    -Id <Int32>\n        Specify blackout window rule to be removed by Id.\n\n        Required?                    true\n        Position?                    1\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing remove rule result.\n\nEXAMPLE 1\n\n    PS C:\\>Remove-CVBlackoutWindow -Id 42",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVClient",
          "item": [],
          "_postman_id": "a97b5db6-45e6-4ee0-9e15-bf2eb5d659c5",
          "description": "SYNTAX\n\n    Get-CVClient [-AdditionalSettings] [-Version] [-TimeZone] [-AllProperties] [<CommonParameters>]\n\n    Get-CVClient [-Name <String>] [-AdditionalSettings] [-Version] [-TimeZone] [-AllProperties] [<CommonParameters>]\n\n    Get-CVClient [-Id <Int32>] [-AdditionalSettings] [-Version] [-TimeZone] [-AllProperties] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    If the Name parameter is not provided, this method will output a list of clients from the CommServe.\n    If the Name parameter is provided, a default subset of client properties will be output for the specified client.\n\n\nPARAMETERS\n\n    -Name <String>\n        Get detail properties for client specified by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Get detail properties for client specified by Id.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -AdditionalSettings [<SwitchParameter>]\n        Retrieves additional setting properties for each client in the list.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Version [<SwitchParameter>]\n        Retrieves package version properties for the specified client.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -TimeZone [<SwitchParameter>]\n        Retrieves timezone properties for the specified client.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Retrieves all properties for the specified client.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing list of CommServe clients or client properties.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVClient\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVClient -Name ProdTest1\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVClient -Name ProdTest1 -AllProperties\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient -Id 2\n\nEXAMPLE5\n\n    PS C:\\>Get-CVClient -Id 2 -AllProperties\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVClient -Name ProdTest1 -AllProperties | Select-Object -ExpandProperty client\n\nEXAMPLE 7\n\n    PS C:\\>Get-CVClient -Name ProdTest1 -AllProperties | Select-Object -ExpandProperty client | Select-Object jobResulsDir\n\nEXAMPLE 8\n\n    PS C:\\>Get-CVClient -Name ProdTest1 -Version -TimeZone\n\nEXAMPLE 9\n\n    PS C:\\>Get-CVClient -AdditionalSettings\n\nEXAMPLE 10\n\n    PS C:\\>Get-CVClient -Name SNOWSQL1 -AdditionalSettings\n\nEXAMPLE 11\n\n    PS C:\\>Get-CVClient -Name ProdTest1 | Get-CVSubclient\n\nEXAMPLE 12\n\n    PS C:\\>Get-CVClient | Get-CVSubclient",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVClientGroup",
          "item": [],
          "_postman_id": "71bf85fd-8527-4435-aabb-2e5e8c63a374",
          "description": "SYNTAX\n\n    Get-CVClientGroup [-AllProperties] [<CommonParameters>]\n\n    Get-CVClientGroup [-Name <String>] [-AllProperties] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve client groups or a single specified group from the CommServe.\n\n\nPARAMETERS\n\n    -Name <String>\n        Get a client group by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Get detail properties for each client group.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing client group properties.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVClientGroup\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVClientGroup -Name Snow-Test\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVClientGroup -Name Snow-Test -AllProperties\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClientGroup -Name Snow-Test -AllProperties | Select-Object -ExpandProperty firewallConfiguration\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVClientGroup -Name Snow-Test -AllProperties | Select-Object -ExpandProperty firewallConfiguration | Select-Object\n    -ExpandProperty firewallOptions",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVVersionInfo",
          "item": [],
          "_postman_id": "a078949f-3e3d-43ac-87ff-79128e86c0f4",
          "description": "SYNTAX\n\n    Get-CVVersionInfo [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve the current version, service pack level, and time zone settings on the CommServe.\n\n\nPARAMETERS\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing CommServe configuration data.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVVersionInfo",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVAlert",
          "item": [],
          "_postman_id": "88491ec2-994d-43e6-a3cd-eb7d2d592d96",
          "description": "SYNTAX\n\n    Get-CVAlert [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve the list of alerts from the CommServe.\n    This method is implemented with Powershell paging support.\n\n\nPARAMETERS\n\n    -IncludeTotalCount [<SwitchParameter>]\n        Include total count of result record set.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Skip <UInt64>\n        Get alerts with paging support -First 20 -Skip 5 (20 per page, skip first 5 pages).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -First <UInt64>\n        Get alerts with paging support -First 20 (20 per page).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing CommServe alert data.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVAlert\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVAlert -IncludeTotalCount -First 5 -Skip 0 (5 per page, skip none)",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSubclient",
          "item": [],
          "_postman_id": "6e82324f-e325-465e-9503-e66c455b80b0",
          "description": "SYNTAX\n\n    Get-CVSubclient [-Name <String>] [-Id <Int32>] -ClientName <String> [-AllProperties] [<CommonParameters>]\n\n    Get-CVSubclient [-Name <String>] [-Id <Int32>] -ClientObject <Object> [-AllProperties] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve the list of subclients or a named subclient for a given client from the CommServe.\n\n\nPARAMETERS\n\n    -Name <String>\n        Get properties for the subclient specified by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Get list of subclient properties for ClientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Retrieves all properties for subclients.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug, ErrorAction, ErrorVariable, WarningAction, WarningVariable, OutBuffer, PipelineVariable, and OutVariable. For more information, see about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] all subclients of the specified client, or the specified single subclient.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSubclient\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSubclient -ClientName clientName\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSubclient -ClientName clientName -Name subclientName\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSubclient -ClientName clientName -Name subclientName -AllProperties\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVClient -Name clientName | Get-CVSubclient -AllProperties | Select-Object -ExpandProperty subClientProperties | Select-Object -ExpandProperty fsSubClientProp",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVId",
          "item": [],
          "_postman_id": "56fee55f-b7df-483d-9e5a-8781fe397cf5",
          "description": "SYNTAX\n\n    Get-CVId [-ClientName] <String> [[-AgentName] <String>] [[-BackupSetName] <String>] [[-InstanceName] <String>] [[-SubclientName]\n    <String>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve the Id for a given Entity from the CommServe.\n\n\nPARAMETERS\n\n    -ClientName <String>\n        Get Client Id for ClientName.\n\n        Required?                    true\n        Position?                    1\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AgentName <String>\n        Get Application Id for AgentName. Example 'File System', 'Active Directory Agent'\n\n        Required?                    false\n        Position?                    2\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupSetName <String>\n        Get BackupSet Id for BackupSetName.\n\n        Required?                    false\n        Position?                    3\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -InstanceName <String>\n        Get Instance Id for InstanceName.\n\n        Required?                    false\n        Position?                    4\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Get Subclient Id for SubclientName.\n\n        Required?                    false\n        Position?                    5\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] Id of the specified client\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVId -ClientName 'YashClient'\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVId -ClientName 'YashClient' -AgentName 'File System'\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVId -ClientName 'YashClient' -AgentName 'File System'  -BackupSetName 'defaultBackupSet'\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVId -ClientName 'YashClient' -AgentName 'File System'  -InstanceName 'DefaultInstanceName'\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVId -ClientName 'YashClient' -AgentName 'File System'  -BackupSetName 'defaultBackupSet' -SubclientName 'default'",
          "_postman_isSubFolder": true
        },
        {
          "name": "Set-CVClient",
          "item": [],
          "_postman_id": "e214925f-41ed-4f7a-8381-772fba7fa89e",
          "description": "SYNTAX\n\n    Set-CVClient -Name <String> -Properties <Object> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Set-CVClient -Id <Int32> -Properties <Object> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to set client properties.\n\n\nPARAMETERS\n\n    -Name <String>\n        Set properties on client specified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Set properties on client specified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Properties <Object>\n        Piped-in Properties set.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>$clientProps = Get-CVClient -Name 'carbonwincs1' -AllProperties\n\n    PS C:\\>$clientProps.client.displayName='carbonwincs1-1'\n    PS C:\\>$clientProps.client.clientDescription = 'carbonwincs1-1 description modified with REST API Post request'\n    PS C:\\>$clientProps.client | Set-CVClient -Name 'carbonwincs1' -Force\n\nEXAMPLE 2\n\n    PS C:\\>$clientId = (Get-CVVirtualMachine -Name INSIELVM-92-pl).client.clientId\n\n    PS C:\\>$clientProps = Get-CVClient -Id $clientId -AllProperties\n    PS C:\\>$clientProps.client.displayName='INSIELVM-92-pl'\n    PS C:\\>$clientProps.client.clientDescription = 'INSIELVM-92-pl description modified with REST API Post request'\n    PS C:\\>$clientProps.client | Set-CVClient -Id $clientId",
          "_postman_isSubFolder": true
        },
        {
          "name": "Set-CVClientGroup",
          "item": [],
          "_postman_id": "eb52cfd4-c4d8-4fc1-8c74-dbcf04fd775d",
          "description": "SYNTAX\n\n    Set-CVClientGroup [-Name] <String> [-Properties] <Object> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to set client group properties.\n\n\nPARAMETERS\n\n    -Name <String>\n        Set properties on client group specified by Name.\n\n        Required?                    true\n        Position?                    1\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Properties <Object>\n        Piped Properties set.\n\n        Required?                    true\n        Position?                    2\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>1. Get current props: $props = Get-CVClientGroup -Name 'Media Agents'\n\n    2. Modify props: $props.description = 'Selects Clients which have media agents installed' etc.\n    3. Set props: $props | Set-CVClientGroup -Name 'Media Agents'",
          "_postman_isSubFolder": true
        },
        {
          "name": "Backup-CVClientFileSystem",
          "item": [],
          "_postman_id": "1674bc59-ab31-4b39-9a7c-09de4e2570d1",
          "description": "SYNTAX\n\n    Backup-CVClientFileSystem -Name <String> [-SubclientName <String>] [-SubclientId <Int32>] [-BackupType {Full | Incremental |\n    Differential | Synthetic_Full}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVClientFileSystem -Id <Int32> [-SubclientName <String>] [-SubclientId <Int32>] [-BackupType {Full | Incremental | Differential |\n    Synthetic_Full}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVClientFileSystem -ClientObject <Object> [-SubclientName <String>] [-SubclientId <Int32>] [-BackupType {Full | Incremental |\n    Differential | Synthetic_Full}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Create backup task for specific or default subclient of client file system.\n\n\nPARAMETERS\n\n    -Name <String>\n        Create a file system backup task for client specified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Create a file system backup task for client specified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Create a file system backup task for client specified by piped ClientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Create a file system backup task for subclient specified by SubclientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientId <Int32>\n        Create a file system backup task for subclient specified by SubclientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -BackupType\n        The BackupType: full, incremental (default), differential, synthFull.\n\n        Required?                    false\n        Position?                    named\n        Default value                incremental\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Backup-CVClientFileSystem\n\nEXAMPLE 2\n\n    PS C:\\>Backup-CVClientFileSystem -Name carbonwincs1 -SubclientName ExportTest\n\nEXAMPLE 3\n\n    PS C:\\>Backup-CVClientFileSystem -Id 2 -SubclientId 9\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient | Backup-CVClientFileSystem",
          "_postman_isSubFolder": true
        },
        {
          "name": "Restore-CVClientFileSystem",
          "item": [],
          "_postman_id": "4e1044a9-313a-4dab-863f-0d256ccfecd4",
          "description": "SYNTAX\n\n    Restore-CVClientFileSystem -Name <String> [-SubclientName <String>] [-SubclientId <Int32>] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n    Restore-CVClientFileSystem -Id <Int32> [-SubclientName <String>] [-SubclientId <Int32>] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n    Restore-CVClientFileSystem -ClientObject <Object> [-SubclientName <String>] [-SubclientId <Int32>] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Create restore task for specific or default subclient of client file system.\n\n\nPARAMETERS\n\n    -Name <String>\n        Create a file system restore task for client specified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Create a file system restore task for client specified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Create a file system restore task for client specified by piped ClientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Create a file system restore task for subclient specified by SubclientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientId <Int32>\n        Create a file system restore task for subclient specified by SubclientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Restore-CVClientFileSystem\n\nEXAMPLE 2\n\n    PS C:\\>Restore-CVClientFileSystem -Name carbonwincs1 -SubclientName ExportTest\n\nEXAMPLE 3\n\n    PS C:\\>Restore-CVClientFileSystem -Id 2 -SubclientId 9\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient | Restore-CVClientFileSystem",
          "_postman_isSubFolder": true
        },
        {
          "name": "Select-CVClientFileSystem",
          "item": [],
          "_postman_id": "3cfda355-c33d-402e-88b9-b84afe5269af",
          "description": "SYNTAX\n\n    Select-CVClientFileSystem -Name <String> -FilePattern <String> [<CommonParameters>]\n\n    Select-CVClientFileSystem -Id <Int32> -FilePattern <String> [<CommonParameters>]\n\n    Select-CVClientFileSystem -ClientObject <Object> -FilePattern <String> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Retrieve list of protected files in client file system by search pattern.\n\n\nPARAMETERS\n\n    -Name <String>\n        Retrieve file list for client specified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Retrieve file list for client specified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Retrieve file list for client specified by piped ClientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -FilePattern <String>\n        Provide file pattern for search e.g. '*.txt'.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing list of files matching the pattern.\n\nEXAMPLE 1\n\n    PS C:\\>Select-CVClientFileSystem\n\nEXAMPLE 2\n\n    PS C:\\>Select-CVClientFileSystem -Name carbonwincs1 -FilePattern *.txt\n\nEXAMPLE 3\n\n    PS C:\\>Select-CVClientFileSystem -Id 2 -FilePattern *.txt\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient | Select-Object-CVClientFileSystem -FilePattern *.txt",
          "_postman_isSubFolder": true
        },
        {
          "name": "Search-CVClientFileSystem",
          "item": [],
          "_postman_id": "82f16582-e8ff-4312-bf0b-c82ddb2301b2",
          "description": "SYNTAX\n\n    Search-CVClientFileSystem -Name <String> [-SubclientName <String>] [-Path <String>] [-BackupSetId <String>] [-CopyPrecedence <Int32>]\n    [-JobId <String>] [-Proxy <String>] [-MediaAgent <String>] [<CommonParameters>]\n\n    Search-CVClientFileSystem -Id <Int32> [-SubclientName <String>] [-Path <String>] [-BackupSetId <String>] [-CopyPrecedence <Int32>]\n    [-JobId <String>] [-Proxy <String>] [-MediaAgent <String>] [<CommonParameters>]\n\n    Search-CVClientFileSystem -ClientObject <Object> [-SubclientName <String>] [-Path <String>] [-BackupSetId <String>] [-CopyPrecedence\n    <Int32>] [-JobId <String>] [-Proxy <String>] [-MediaAgent <String>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to create a client file system browse query.\n\n\nPARAMETERS\n\n    -Name <String>\n        Create a browse query for client specified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Create a browse query for client specified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Create a browse query for client specified by piped ClientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Specify SubclientName for browse query.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Path <String>\n        Specify Path for browse query.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -BackupSetId <String>\n        Specify BackupSetId for browse query.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -CopyPrecedence <Int32>\n        Specify CopyPrecedence for browse query: Primary (default), Secondary, Cloud.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -JobId <String>\n        Specify JobId for browse query.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Proxy <String>\n        Specify Proxy for browse query.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -MediaAgent <String>\n        Specify MediaAgent for browse query.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Search-CVClientFileSystem -Name carbonwincs1\n\nEXAMPLE 2\n\n    PS C:\\>Search-CVClientFileSystem -Id 2\n\nEXAMPLE 3\n\n    PS C:\\>Search-CVClientFileSystem -Name carbonwincs1 -SubclientName ExportTest\n\nEXAMPLE 4\n\n    PS C:\\>Search-CVClientFileSystem -Name carbonwincs1 -SubclientName ExportTest -Path C:\\ExportTest\n\nEXAMPLE 5\n\n    PS C:\\>Search-CVClientFileSystem -Name carbonwincs1 -SubclientName ExportTest -Path C:\\ExportTest | Select-Object --ExpandProperty\n    dataResultSet",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSLAReport",
          "item": [],
          "_postman_id": "9c3f4a71-93a5-4c28-9be2-9d4db1aff622",
          "description": "SYNTAX\n\n    Get-CVSLAReport [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>] [-AllProperties] [<CommonParameters>]\n\n    Get-CVSLAReport [-ClientName <String>] [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>] [-AllProperties]\n    [<CommonParameters>]\n\n    Get-CVSLAReport [-ClientId <Int32>] [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>] [-AllProperties]\n    [<CommonParameters>]\n\n    Get-CVSLAReport [-ClientObject <Object>] [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>] [-AllProperties]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Gets SLA report for specific client or entire CommCell.\n\n\nPARAMETERS\n\n    -ClientName <String>\n        Filter SLA report by ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientId <Int32>\n        Filter SLA report by ClientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Filter SLA report by piped ClientObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -EmailAddr <String>\n        EmailAddr for notification purpose.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Type <Int32>\n        Client = 1 (default), Agent = 2.\n\n        Required?                    false\n        Position?                    named\n        Default value                1\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Category <Int32>\n        Any = 0 (default), Protected = 1, Failed = 2, NoJobFound = 3, NoSchedule = 4.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Status <Int32>\n        Any = 0 (default), Protected = 1, Unprotected = 2, Excluded = 3.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Use this switch for extended detail.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SLA report.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSLAReport\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSLAReport -ClientName carbonwincs1 -EmailAddr admin@testlab.commvault.com\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSLAReport -ClientId 57 -AllProperties\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient | Get-CVSLAReport",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVJobDetail",
          "item": [],
          "_postman_id": "d7901700-e9ae-4716-8904-514c10159989",
          "description": "SYNTAX\n\n    Get-CVJobDetail -Id <Int32> [<CommonParameters>]\n\n    Get-CVJobDetail -JobObject <Object> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Gets extended details for a job. JobId must be valid.\n\n\nPARAMETERS\n\n    -Id <Int32>\n        Gets extended details for the job specified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -JobObject <Object>\n        Gets extended details for the job specified by piped JobObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing result.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVJobDetail\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVJobDetail -Id 175\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVJob | Get-CVJobDetail\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVJobDetail -Id 175 | Select-Object -ExpandProperty detailInfo\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVJobDetail -Id 175 | Select-Object -ExpandProperty generalInfo\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVJobDetail -Id 175 | Select-Object -ExpandProperty progressInfo",
          "_postman_isSubFolder": true
        },
        {
          "name": "Stop-CVJob",
          "item": [],
          "_postman_id": "40ca228b-b2fe-4b1e-b295-e1b923c12ea4",
          "description": "SYNTAX\n\n    Stop-CVJob [-JobId] <Int32> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Stops/kills the job specified by job Id. If the job cannot be killed, this command has no effect.\n\n\nPARAMETERS\n\n    -JobId <Int32>\n        Stop/kill the job specified by JobId.\n\n        Required?                    true\n        Position?                    1\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing result.\n\nEXAMPLE 1\n\n    PS C:\\>Stop-CVJob -JobId 78",
          "_postman_isSubFolder": true
        },
        {
          "name": "Suspend-CVJob",
          "item": [],
          "_postman_id": "e8116048-fa0b-4123-9632-5b5c62aa20e0",
          "description": "SYNTAX\n\n    Suspend-CVJob [-JobId] <Int32> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Suspends the job specified by job Id. If the job cannot be suspended, this command has no effect.\n\n\nPARAMETERS\n\n    -JobId <Int32>\n        Suspend the job specified by JobId.\n\n        Required?                    true\n        Position?                    1\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing result.\n\nEXAMPLE 1\n\n    PS C:\\>Suspend-CVJob -JobId 78",
          "_postman_isSubFolder": true
        },
        {
          "name": "Send-CVLogFile",
          "item": [],
          "_postman_id": "99b83045-ec0d-45a7-bb2d-8a3e761b053d",
          "description": "SYNTAX\n\n    Send-CVLogFile -JobId <Int32> [-EmailAddr <String>] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Send-CVLogFile -ClientName <String> [-EmailAddr <String>] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Create Send Log Files task for client or specific job.\n\n\nPARAMETERS\n\n    -JobId <Int32>\n        Create Send Log Files task for job identified by JobId.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Create Send Log Files task for client identified by ClientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -EmailAddr <String>\n        Specify EmailAddr for notification purpose.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Send-CVLogFile\n\nEXAMPLE 2\n\n    PS C:\\>Send-CVLogFile -ClientName carbonwincs1\n\nEXAMPLE 3\n\n    PS C:\\>Send-CVLogFile -JobId 175 -EmailAddr admin@testlab.commvault.com",
          "_postman_isSubFolder": true
        },
        {
          "name": "Update-CVMissedSLA",
          "item": [],
          "_postman_id": "2b03f822-da90-4443-969c-e38866b60f01",
          "description": "SYNTAX\n\n    Update-CVMissedSLA [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>] [<CommonParameters>]\n\n    Update-CVMissedSLA [-ClientName <String>] [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>]\n    [<CommonParameters>]\n\n    Update-CVMissedSLA [-ClientId <Int32>] [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>] [<CommonParameters>]\n\n    Update-CVMissedSLA [-ClientObject <Object>] [-EmailAddr <String>] [-Type <Int32>] [-Category <Int32>] [-Status <Int32>]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Initiates backup job for subclients with missed SLA.\n\n\nPARAMETERS\n\n    -ClientName <String>\n        Filter SLA report by ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientId <Int32>\n        Filter SLA report by ClientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Filter SLA report by piped ClientObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -EmailAddr <String>\n        EmailAddr for notification purpose.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Type <Int32>\n        Client = 1 (default), Agent = 2.\n\n        Required?                    false\n        Position?                    named\n        Default value                1\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Category <Int32>\n        Any = 0, Protected = 1, Failed = 2 (default), NoJobFound = 3, NoSchedule = 4.\n\n        Required?                    false\n        Position?                    named\n        Default value                2\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Status <Int32>\n        Any = 0, Protected = 1, Unprotected = 2 (default), Excluded = 3.\n\n        Required?                    false\n        Position?                    named\n        Default value                2\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] for each subclient with missed SLA, containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Update-CVMissedSLA\n\nEXAMPLE 2\n\n    PS C:\\>Update-CVMissedSLA -ClientName carbonwincs1 -EmailAddr admin@testlab.commvault.com\n\nEXAMPLE 3\n\n    PS C:\\>Update-CVMissedSLA -ClientId 57\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient | Update-CVMissedSLA",
          "_postman_isSubFolder": true
        },
        {
          "name": "Resume-CVJob",
          "item": [],
          "_postman_id": "2649670c-ffc4-42eb-84d6-5fe1588f102d",
          "description": "SYNTAX\n\n    Resume-CVJob [-JobId] <Int32> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Resumes the job specified by job Id. If the job cannot be resumed, this command has no effect.\n\n\nPARAMETERS\n\n    -JobId <Int32>\n        Resume the job specified by JobId.\n\n        Required?                    true\n        Position?                    1\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing result.\n\nEXAMPLE 1\n\n    PS C:\\>Resume-CVJob -JobId 78",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVJob",
          "item": [],
          "_postman_id": "a735a085-a377-4d62-95ca-07c004eee645",
          "description": "SYNTAX\n\n    Get-CVJob [-ClientName <String>] [-SubclientName <String>] [-JobFilter <String>] [-JobCategory <String>] [-CompletedTime <Int32>]\n    [-Details] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVJob [-Id <Int32>] [-Details] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Get the list of all jobs. Based on parameters this commandlet filters the output.\n    This method is implemented with Powershell paging support.\n\n\nPARAMETERS\n\n    -Id <Int32>\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Filter output based on ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Filter output based on SubclientName: requires ClientName parameter.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -JobFilter <String>\n        Filter output based on JobFilter. Example Snapbackup, DATA_VERIFICATION or SYNTHFULL etc.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -JobCategory <String>\n        Filter output based on JobCategory. Example Active, Finished, All.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -CompletedTime <Int32>\n        Filter output based on completed job lookup time expressed in hours.\n\n        Required?                    false\n        Position?                    named\n        Default value                24\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Details [<SwitchParameter>]\n        Retrieves the details for a job.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -IncludeTotalCount [<SwitchParameter>]\n        Include total count of result record set.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Skip <UInt64>\n        Get list of jobs with paging support -First 20 -Skip 5 (20 per page, skip first 5 jobs).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -First <UInt64>\n        Get list of jobs with paging support -First 20 (20 per page).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job details.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVJob\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVJob -CompletedTime 8 -IncludeTotalCount\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVJob -CompletedTime 72 -IncludeTotalCount -First 5\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVJob -CompletedTime 240 -IncludeTotalCount -First 10 -Skip 0\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVJob -CompletedTime 240 -IncludeTotalCount -First 10 -Skip 20\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVJob -Details\n\nEXAMPLE 7\n\n    PS C:\\>Get-CVJob -ClientName VC2KR2\n\nEXAMPLE 8\n\n    PS C:\\>Get-CVJob -ClientName VC2KR2 -SubclientName snap_backup2 -CompletedTime 72\n\nEXAMPLE 9 \n\n    PS C:\\>Get-CVJob | Where-Object { $_.Status -like 'Running' }\n\nEXAMPLE 10\n\n    PS C:\\>Get-CVJob | Where-Object { $_.Status -like 'Pending' }\n\nEXAMPLE 11\n\n    PS C:\\>Get-CVJob | Where-Object { $_.Status -like 'Waiting' }\n\nEXAMPLE 12\n\n    PS C:\\>Get-CVJob | Where-Object { $_.Status -like 'Completed' }",
          "_postman_isSubFolder": true
        },
        {
          "name": "Backup-CVDisasterRecovery",
          "item": [],
          "_postman_id": "8b14e194-545f-4f6b-ac1d-4be70655f820",
          "description": "SYNTAX\n\n    Backup-CVDisasterRecovery [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Initiates the CommServe disaster recovery (DR) backup.\n\n\nPARAMETERS\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Backup-CVDisasterRecovery",
          "_postman_isSubFolder": true
        },
        {
          "name": "Backup-CVSubclient",
          "item": [],
          "_postman_id": "82806320-eb87-46d6-956b-30b2fecafce5",
          "description": "SYNTAX\n\n    Backup-CVSubclient -Name <String> -ClientName <String> [-BackupType {Full | Incremental | Differential | Synthetic_Full}] [-Force]\n    [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVSubclient -ClientName <String> -Id <Int32> [-BackupType {Full | Incremental | Differential | Synthetic_Full}] [-Force]\n    [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVSubclient -SubclientObject <Object> [-BackupType {Full | Incremental | Differential | Synthetic_Full}] [-Force] [-WhatIf]\n    [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Create backup task for specific subclient.\n\n\nPARAMETERS\n\n    -Name <String>\n        Create backup task for subclient identified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Provide ClientName for subclient lookup.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Create backup task for subclient identified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientObject <Object>\n        Create backup task for subclient identified by SubclientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupType\n        The BackupType: full, incremental (default), differential, synthFull.\n\n        Required?                    false\n        Position?                    named\n        Default value                Incremental\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Backup-CVSubclient\n\nEXAMPLE 2\n\n    PS C:\\>Backup-CVSubclient -Name AuditDB -ClientName carbonwincs1\n\nEXAMPLE 3\n\n    PS C:\\>Backup-CVSubclient -Id 7\n\nEXAMPLE 4\n\n    PS C:\\>Backup-CVSubclient -Id 7 -BackupType Full\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSubclient -ClientName carbonwincs1 | Backup-CVSubclient (initiates backup of all subclients of ClientName)",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVStoragePolicy",
          "item": [],
          "_postman_id": "ec6711c3-0cb5-45fd-aef8-51e6f33f30a1",
          "description": "SYNTAX\n\n    Get-CVStoragePolicy [-Name <String>] [-AllProperties] [<CommonParameters>]\n\n    Get-CVStoragePolicy [-Name <String>] [-MediaAgentName <String>] [-AllProperties] [<CommonParameters>]\n\n    Get-CVStoragePolicy [-Name <String>] [-MediaAgentObject <Object>] [-AllProperties] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve storage policies from the CommServe. Output can be filtered by media agent and policy Name.\n    Note: detail information is\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify storage policy instances to be output by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -MediaAgentName <String>\n        Specify storage policy instances to be output by MediaAgentName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -MediaAgentObject <Object>\n        Specify storage policy instances to be output pipeline input of MediaAgentObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Output AllProperties for each schedule policy.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing storage policy instances.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVStoragePolicy\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVStoragePolicy -AllProperties | Select-Object -ExpandProperty copy\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVStoragePolicy -Name ACPLAN\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVStoragePolicy -Name ACPLAN -MediaAgentName carbonwincs1 -AllProperties\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVMediaAgent | Get-CVStoragePolicy\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVMediaAgent | Get-CVStoragePolicy -Name ACPLAN",
          "_postman_isSubFolder": true
        },
        {
          "name": "Enable-CVSchedulePolicy",
          "item": [],
          "_postman_id": "d61c98b8-13e2-4e2c-9a83-bfe6b40f5976",
          "description": "SYNTAX\n\n    Enable-CVSchedulePolicy -Name <String> [<CommonParameters>]\n\n    Enable-CVSchedulePolicy -Id <Int32> [<CommonParameters>]\n\n    Enable-CVSchedulePolicy -PolicyObject <Object> [<CommonParameters>]\n\n    Enable-CVSchedulePolicy -ClientName <String> -SubclientName <String> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to enable a schedule policy on the CommServe.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify the schedule policy to be enabled by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Specify the schedule policy to be enabled by Id (taskId).\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -PolicyObject <Object>\n        Specify the schedule policy to be enabled by piping the PolicyObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Specify the ClientName associated with SubclientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Specify the SubclientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing task submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Enable-CVSchedulePolicy (This will prompt for Name)\n\nEXAMPLE 2\n\n    PS C:\\>Enable-CVSchedulePolicy -Name AuditDB-SchedulePolicy\n\nEXAMPLE 3\n\n    PS C:\\>Enable-CVSchedulePolicy -Id 229\n\nEXAMPLE 4\n\n    PS C:\\>Enable-CVSchedulePolicy -ClientName carbonWinCS1 -SubclientName AuditDB (Enables all schedule policies associated with the\n    subclient AuditDB)\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSchedulePolicy | Enable-CVSchedulePolicy (Enables all schedule policies on the CommServe)",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSchedulePolicy",
          "item": [],
          "_postman_id": "b1f228c1-5f14-4ebc-b09f-27bd3250de72",
          "description": "SYNTAX\n\n    Get-CVSchedulePolicy [-ScheduleType {DataProtection | AuxiliaryCopy | BackupCopy | OfflineContentIndexing | DDBVerification |\n    ContentIndexing | Workflow | All}] [<CommonParameters>]\n\n    Get-CVSchedulePolicy -ClientName <String> -SubclientName <String> [-ScheduleType {DataProtection | AuxiliaryCopy | BackupCopy |\n    OfflineContentIndexing | DDBVerification | ContentIndexing | Workflow | All}] [<CommonParameters>]\n\n    Get-CVSchedulePolicy [-Name <String>] [-ScheduleType {DataProtection | AuxiliaryCopy | BackupCopy | OfflineContentIndexing |\n    DDBVerification | ContentIndexing | Workflow | All}] [<CommonParameters>]\n\n    Get-CVSchedulePolicy [-Id <Int32>] [-ScheduleType {DataProtection | AuxiliaryCopy | BackupCopy | OfflineContentIndexing |\n    DDBVerification | ContentIndexing | Workflow | All}] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve schedule policies from the CommServe. Output can be filtered by client/subclient or by policy name or id.\n\n\nPARAMETERS\n\n    -ClientName <String>\n        Filter output by ClientName associated with SubclientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Filter output by SubclientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Name <String>\n        Filter output by policy Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Filter output by policy Id.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ScheduleType\n        Filter by ScheduleType: All (default), DataProtection, AuxiliaryCopy, BackupCopy, OfflineContentIndexing, DDBVerification,\n        ContentIndexing, or Workflow.\n\n        Required?                    false\n        Position?                    named\n        Default value                All\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing schedule policy instances.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSchedulePolicy\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSchedulePolicy -ScheduleType All | Select-Object -ExpandProperty task\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSchedulePolicy -ScheduleType Workflow | Select-Object -ExpandProperty task\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSchedulePolicy -Name AuditDB-3\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSchedulePolicy -Id 238\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVSchedulePolicy -SubclientName AuditDB -ClientName carbonwincs1\n\nEXAMPLE 7\n\n    PS C:\\>Get-CVSchedulePolicy -ClientName carbonWinCS1 -SubclientName AuditDB | Format-List\n\nEXAMPLE 8\n\n    PS C:\\>Get-CVSchedulePolicy -ClientName carbonWinCS1 -SubclientName AuditDB | Select-Object -ExpandProperty associations\n\nEXAMPLE 9\n\n    PS C:\\>Get-CVSchedulePolicy -ClientName carbonWinCS1 -SubclientName AuditDB | Select-Object -ExpandProperty task\n\nEXAMPLE 10\n\n    PS C:\\>Get-CVSchedulePolicy -ClientName carbonWinCS1 -SubclientName AuditDB | Select-Object -ExpandProperty appGroup\n\nEXAMPLE 11\n\n    PS C:\\>Get-CVSchedulePolicy -ClientName carbonWinCS1 -SubclientName AuditDB | Select-Object -ExpandProperty subTasks",
          "_postman_isSubFolder": true
        },
        {
          "name": "Disable-CVSchedulePolicy",
          "item": [],
          "_postman_id": "f6e2977a-49a6-4bf6-831f-fcbe2dcba0a5",
          "description": "SYNTAX\n\n    Disable-CVSchedulePolicy -Name <String> [<CommonParameters>]\n\n    Disable-CVSchedulePolicy -Id <Int32> [<CommonParameters>]\n\n    Disable-CVSchedulePolicy -PolicyObject <Object> [<CommonParameters>]\n\n    Disable-CVSchedulePolicy -ClientName <String> -SubclientName <String> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to disable a schedule policy on the CommServe.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify the schedule policy to be disabled by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Specify the schedule policy to be disabled by Id (taskId).\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -PolicyObject <Object>\n        Specify the schedule policy to be disabled by piping the PolicyObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Specify the ClientName associated with SubclientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Specify the SubclientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing task submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Disable-CVSchedulePolicy (This will prompt for Name)\n\nEXAMPLE 2\n\n    PS C:\\>Disable-CVSchedulePolicy -Name AuditDB-SchedulePolicy\n\nEXAMPLE 3\n\n    PS C:\\>Disable-CVSchedulePolicy -Id 229\n\nEXAMPLE 4\n\n    PS C:\\>Disable-CVSchedulePolicy -ClientName carbonWinCS1 -SubclientName AuditDB (Disables all schedule policies associated with the\n    subclient AuditDB)\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSchedulePolicy | Disable-CVSchedulePolicy (Disables all schedule policies on the CommServe)",
          "_postman_isSubFolder": true
        },
        {
          "name": "Connect-CVServer",
          "item": [],
          "_postman_id": "a92841bb-1ab7-4c89-8690-f0818ec17e4f",
          "description": "SYNTAX\n\n    Connect-CVServer -Server <String> [-Port <String>] [-User <String>] [-Password <SecureString>] [<CommonParameters>]\n\n    Connect-CVServer -Server <String> [-Port <String>] [-Credential <PSCredential>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to get CommServe authorization token.\n\n\nPARAMETERS\n\n    -Server <String>\n        The CommServe to connect to.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Port <String>\n        Optional port specification if non-default has been configured (default: 81)\n\n        Required?                    false\n        Position?                    named\n        Default value                $REST_DEFAULT_PORT\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -User <String>\n        User name for login.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Password <SecureString>\n        Secure password for login.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Credential <PSCredential>\n        Powershell credential object. Used as alternative to -User <user> -Password <password>\n\n        Required?                    false\n        Position?                    named\n        Default value                [PSCredential]::Empty\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs <String> indicating success or failure of login attempt.\n\nEXAMPLE 1\n\n    Connect-CVServer -Server <CVWebserver name>-User <admin>\n\nEXAMPLE 2\n\n    Connect-CVServer -Server <CVWebserver name>-User <admin> -Password (ConvertTo-SecureString 'password' -AsPlainText -Force)\n\nEXAMPLE 3\n\n    Connect-CVServer -Server <CVWebserver name>-User <admin> -Password (ConvertTo-SecureString 'password' -AsPlainText -Force) -Port [port]\n\nEXAMPLE 4\n\n    PS C:\\>$Credential= New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList 'admin',('plainTextPassword' |\n    ConvertTo-SecureString -AsPlainText -Force)\n\n    Connect-CVServer -Credential $Credential -Server <CVWebserver name>",
          "_postman_isSubFolder": true
        },
        {
          "name": "Disconnect-CVServer",
          "item": [],
          "_postman_id": "2eafa0ef-e0e7-43ff-82ec-b84b32d854c9",
          "description": "SYNTAX\n\n    Disconnect-CVServer [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to release CommServe session authorization token.\n\n\nPARAMETERS\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    If -Verbose switch used, outputs <String> response returned from webservice logout request.\n\nEXAMPLE 1\n\n    PS C:\\>Disconnect-CVServer\n\nEXAMPLE 2\n\n    PS C:\\>Disconnect-CVServer -Verbose",
          "_postman_isSubFolder": true
        },
        {
          "name": "Submit-CVRESTRequest",
          "item": [],
          "_postman_id": "d07b7183-9945-4a87-b11d-54a0429ab45c",
          "description": "SYNTAX\n\n    Submit-CVRESTRequest [-Payload] <hashtable> [[-ValidateProperty] <string>] [-DryRun]  [<CommonParameters>]\n\n\nPARAMETERS\n    -DryRun\n\n        Required?                    false\n        Position?                    Named\n        Accept pipeline input?       false\n        Parameter set name           (All)\n        Aliases                      None\n        Dynamic?                     false\n\n    -Payload <hashtable>\n\n        Required?                    true\n        Position?                    0\n        Accept pipeline input?       false\n        Parameter set name           (All)\n        Aliases                      None\n        Dynamic?                     false\n\n    -ValidateProperty <string>\n\n        Required?                    false\n        Position?                    1\n        Accept pipeline input?       false\n        Parameter set name           (All)\n        Aliases                      None\n        Dynamic?                     false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\n    None\n\nOUTPUTS\n\n    System.Management.Automation.PSObject",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVRESTHeader",
          "item": [],
          "_postman_id": "0ab0b4a0-b273-46e2-8de6-d7cae50b4b26",
          "description": "SYNTAX\n\n    Get-CVRESTHeader [-SessionObject] <hashtable>  [<CommonParameters>]\n\n    Get-CVRESTHeader [-SessionObject] <hashtable> [-PagingInfo <string>]  [<CommonParameters>]\n\n    Get-CVRESTHeader [-SessionObject] <hashtable> [-Limit <uint64>] [-Offset <uint64>]  [<CommonParameters>]\n\n\nPARAMETERS\n\n    -Limit <uint64>\n\n        Required?                    false\n        Position?                    Named\n        Accept pipeline input?       false\n        Parameter set name           ByLimit\n        Aliases                      None\n        Dynamic?                     false\n\n    -Offset <uint64>\n\n        Required?                    false\n        Position?                    Named\n        Accept pipeline input?       false\n        Parameter set name           ByLimit\n        Aliases                      None\n        Dynamic?                     false\n\n    -PagingInfo <string>\n\n        Required?                    false\n        Position?                    Named\n        Accept pipeline input?       false\n        Parameter set name           ByPagingInfo\n        Aliases                      None\n        Dynamic?                     false\n\n    -SessionObject <hashtable>\n\n        Required?                    true\n        Position?                    0\n        Accept pipeline input?       false\n        Parameter set name           (All)\n        Aliases                      None\n        Dynamic?                     false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\n\nINPUTS\n\n    None\n\n\nOUTPUTS\n\n    System.Collections.Hashtable",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSessionDetail",
          "item": [],
          "_postman_id": "e7c27671-5fc6-4eed-9dcb-625fe58302b1",
          "description": "SYNTAX\n\n    Get-CVSessionDetail [[-MethodName] <string>]  [<CommonParameters>]\n\n\nPARAMETERS\n\n    -MethodName <string>\n\n        Required?                    false\n        Position?                    0\n        Accept pipeline input?       false\n        Parameter set name           (All)\n        Aliases                      None\n        Dynamic?                     false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\n\nINPUTS\n\n    None\n\n\nOUTPUTS\n\n    System.Collections.Hashtable\n\n\nALIASES\n\n    Get-CVSessionDetails\n\n\nREMARKS\n\n    None",
          "_postman_isSubFolder": true
        },
        {
          "name": "Backup-CVSQLDatabase",
          "item": [],
          "_postman_id": "8e24003a-8ac4-40b6-bf08-b1921ec22182",
          "description": "SYNTAX\n\n    Backup-CVSQLDatabase -Name <String> [-BackupType {full | incremental | differential}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVSQLDatabase -Id <Int32> [-BackupType {full | incremental | differential}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVSQLDatabase -DatabaseObject <Object> [-BackupType {full | incremental | differential}] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to submit backup job for specific SQL database.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify the database by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Specify the database by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DatabaseObject <Object>\n        Specify the database by piped DatabaseObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupType\n        The BackupType: full, incremental (default), differential.\n\n        Required?                    false\n        Position?                    named\n        Default value                incremental\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Backup-CVSQLDatabase\n\nEXAMPLE 2\n\n    PS C:\\>Backup-CVSQLDatabase -Name AuditDB -BackupType full\n\nEXAMPLE 3\n\n    PS C:\\>Backup-CVSQLDatabase -Id 228 -BackupType full\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSQLDatabase -Name AuditDB | Backup-CVSQLDatabase",
          "_postman_isSubFolder": true
        },
        {
          "name": "Restore-CVSQLDatabase",
          "item": [],
          "_postman_id": "4601717e-3a53-4bba-ac08-d1a4cc4cad01",
          "description": "SYNTAX\n\n    Restore-CVSQLDatabase -Name <String> [-PointInTime <Int32>] [-CopyPrecedence <Int32>] [-OutofPlace] [-OverwriteExisting] [-Force]\n    [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Restore-CVSQLDatabase -DatabaseObject <Object> [-PointInTime <Int32>] [-CopyPrecedence <Int32>] [-OutofPlace] [-OverwriteExisting]\n    [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to submit SQL database in-place or out-of-place restore job.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify the database files to be restored by database Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DatabaseObject <Object>\n        Specify the database files to be restored by piping DatabaseObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -PointInTime <Int32>\n        Specify the database files to be restored by PointInTime.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -CopyPrecedence <Int32>\n        Specify the database files to be restored by the CopyPrecedence applicable to your environment.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OutofPlace [<SwitchParameter>]\n        Switch to initiate an out-of-place restore.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OverwriteExisting [<SwitchParameter>]\n        Switch to control OverwriteExisting of the database files.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Restore-CVSQLDatabase\n\nEXAMPLE 2\n\n    PS C:\\>Restore-CVSQLDatabase -Name AuditDB -OverwriteExisting\n\nEXAMPLE 3\n\n    PS C:\\>Restore-CVSQLDatabase -Name AuditDB -OverwriteExisting -OutofPlace",
          "_postman_isSubFolder": true
        },
        {
          "name": "Backup-CVSQLInstance",
          "item": [],
          "_postman_id": "f00f26da-c6e5-4b14-bd61-9e777244b87c",
          "description": "SYNTAX\n\n    Backup-CVSQLInstance -Name <String> [-BackupType {full | incremental | differential}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVSQLInstance -InstanceObject <Object> [-BackupType {full | incremental | differential}] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to submit backup job for SQL instance.\n\n\nPARAMETERS\n\n    -Name <String>\n        The SQL instance Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceObject <Object>\n        The SQL InstanceObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupType\n        The BackupType: full, incremental (default), differential.\n\n        Required?                    false\n        Position?                    named\n        Default value                Incremental\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Backup-CVSQLInstance\n\nEXAMPLE 2\n\n    PS C:\\>Backup-CVSQLInstance -Name CARBONWINCS1\\COMMVAULT -BackupType full\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSQLInstance -Name CARBONWINCS1\\COMMVAULT | Backup-CVSQLInstance",
          "_postman_isSubFolder": true
        },
        {
          "name": "Mount-CVSQLDatabase",
          "item": [],
          "_postman_id": "13f7fd20-d7f9-4ae9-9073-531b15d16fa6",
          "description": "SYNTAX\n\n    Mount-CVSQLDatabase -Name <String> [-DestDatabaseName <String>] [-ExpireDays <Int32>] [-OverwriteDatabase] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n    Mount-CVSQLDatabase -DatabaseObject <Object> [-DestDatabaseName <String>] [-ExpireDays <Int32>] [-OverwriteDatabase] [-Force] [-WhatIf]\n    [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to submit SQL database mount job.\n\n\nPARAMETERS\n\n    -Name <String>\n        Mount the SQL database identified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DatabaseObject <Object>\n        Mount the SQL database identified by DatabaseObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -DestDatabaseName <String>\n        Mount the SQL database with DestDatabaseName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ExpireDays <Int32>\n        Mount the SQL database with ExpireDays. Default: 30\n\n        Required?                    false\n        Position?                    named\n        Default value                30\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OverwriteDatabase [<SwitchParameter>]\n        Switch to control OverwriteDatabase.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Mount-CVSQLDatabase\n\nEXAMPLE 2\n\n    PS C:\\>Mount-CVSQLDatabase -Name AuditDB -OverwriteDatabase\n\nEXAMPLE 3\n\n    PS C:\\>Mount-CVSQLDatabase -Name AuditDB -OverwriteDatabase -ExpiryDays 120\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSQLDatabase | Mount-CVSQLDatabase -OverwriteDatabase -ExpiryDays 120",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLCloneDetail",
          "item": [],
          "_postman_id": "5115cb90-fa43-46ba-9e23-0c5e42aa7a43",
          "description": "SYNTAX\n\n    Get-CVSQLCloneDetail -Id <Int32> [<CommonParameters>]\n\n    Get-CVSQLCloneDetail -CloneObject <Object> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve SQL clone detail information.\n\n\nPARAMETERS\n\n    -Id <Int32>\n        Get clone detail information for clone Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -CloneObject <Object>\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL clone detail information.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLCloneDetail -Id 57",
          "_postman_isSubFolder": true
        },
        {
          "name": "Backup-CVSQLSubclient",
          "item": [],
          "_postman_id": "c7df51cb-a711-4719-a1d0-a562fd0b8db3",
          "description": "SYNTAX\n\n    Backup-CVSQLSubclient -Name <String> -ClientName <String> [-BackupType {full | incremental | differential}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVSQLSubclient -SubclientObject <Object> [-BackupType {full | incremental | differential}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to submit backup job for specific SQL subclient.\n\n\nPARAMETERS\n\n    -Name <String>\n        The subclient Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        The ClientName hosting the SQL instance.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientObject <Object>\n        The SQL SubclientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -BackupType\n        The BackupType: full, incremental (default), differential.\n\n        Required?                    false\n        Position?                    named\n        Default value                Incremental\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Backup-CVSQLSubclient\n\nEXAMPLE 2\n\n    PS C:\\>Backup-CVSQLSubclient -Name AuditDB -ClientName carbonWinCS1 -BackupType full\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSubclient -Name AuditDB -ClientName carbonWinCS1 | Backup-CVSQLSubclient",
          "_postman_isSubFolder": true
        },
        {
          "name": "Export-CVSQLDatabaseRTD",
          "item": [],
          "_postman_id": "eb4def45-a6a6-4007-bb2d-1d7b5d0d1c00",
          "description": "SYNTAX\n\n    Export-CVSQLDatabaseRTD -Name <String> [-JobId <Int32>] -DestClientName <String> -DestDiskPath <String> [-OverwriteExisting] [<CommonParameters>]\n\n    Export-CVSQLDatabaseRTD -DatabaseObject <Object> [-JobId <Int32>] -DestClientName <String> -DestDiskPath <String> [-OverwriteExisting] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to submit restore-to-disk SQL database export job.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify the database files to be exported by database Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DatabaseObject <Object>\n        Specify the database files to be exported by piping DatabaseObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -JobId <Int32>\n        Export the SQL database files for a given JobId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DestClientName <String>\n        Export the SQL database files to DestClientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DestDiskPath <String>\n        Export the SQL database files to DestDiskPath.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OverwriteExisting [<SwitchParameter>]\n        Switch to control OverwriteExisting of the database files.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Export-CVSQLDatabaseRTD\n\nEXAMPLE 2\n\n    PS C:\\>Export-CVSQLDatabaseRTD -Name CommServ -OverwriteExisting\n\nEXAMPLE 3\n\n    PS C:\\>Export-CVSQLDatabaseRTD -Name CommServ -OverwriteExisting -JobId 111\n\nEXAMPLE 4\n\n    PS C:\\>Export-CVSQLDatabaseRTD -Name CommServ -DestClientName carbonwincs1 -DestDiskPath C:\\ExportTest\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSQLDatabase -Name AuditDB | Export-CVSQLDatabaseRTD -OverwriteExisting -DestClientName carbonwincs1 -DestDiskPath C:\\ExportTest",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLDatabase",
          "item": [],
          "_postman_id": "57b2f6ea-5224-4e5b-a2eb-49d724bd5985",
          "description": "SYNTAX\n\n    Get-CVSQLDatabase [-SortColumn {bkpTime | bkpSize | insName | dbName | cName | planName}] [-SortDescending] [-OnlySLA] [-ShowSysDB] [-AllProperties] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVSQLDatabase [-Name <String>] [-ClientName <String>] [-InstanceName <String>] [-SortColumn {bkpTime | bkpSize | insName | dbName | cName | planName}] [-SortDescending] [-OnlySLA] [-ShowSysDB] [-AllProperties]\n    [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVSQLDatabase [-Id <Int32>] [-InstanceId <Int32>] [-SortColumn {bkpTime | bkpSize | insName | dbName | cName | planName}] [-SortDescending] [-OnlySLA] [-ShowSysDB] [-AllProperties] [-IncludeTotalCount] [-Skip <UInt64>] [-First\n    <UInt64>] [<CommonParameters>]\n\n    Get-CVSQLDatabase [-InstanceObject <Object>] [-SortColumn {bkpTime | bkpSize | insName | dbName | cName | planName}] [-SortDescending] [-OnlySLA] [-ShowSysDB] [-AllProperties] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    This method is implemented with Powershell paging support.\n    If the Name parameter is not provided, this method will output all protected SQL databases.\n    If the Name parameter is provided, SQL databases matching the name will be output.\n\n\nPARAMETERS\n\n    -Name <String>\n        Get SQL database specified by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Get SQL database specified by database Id.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Get SQL databases associated with ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceName <String>\n        Get SQL databases associated with InstanceName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceId <Int32>\n        Get SQL databases associated with InstanceId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceObject <Object>\n        Get SQL databases associated with piped InstanceObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SortColumn\n        Sort SQL databases by: bkpTime, bkpSize, insName, dbName, cName, planName.\n\n        Required?                    false\n        Position?                    named\n        Default value                dbName\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SortDescending [<SwitchParameter>]\n        Sort SQL databases by specified column in descending order; Default is ascending order.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OnlySLA [<SwitchParameter>]\n        Get only SQL databases with missed SLAs.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ShowSysDB [<SwitchParameter>]\n        Get SQL databases including system databases.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Get SQL databases with all properties.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -IncludeTotalCount [<SwitchParameter>]\n        Include total count of result record set.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Skip <UInt64>\n        Get SQL instances with paging support -First 20 -Skip 5 (20 per page, skip first 5 pages).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -First <UInt64>\n        Get SQL instances with paging support -First 20 (20 per page).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL database properties.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLDatabase\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSQLInstance | Get-CVSQLDatabase\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVClient | Get-CVSQLInstance | Get-CVSQLDatabase\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSQLDatabase -IncludeTotalCount -First 20 -Skip 5 (20 per page, skip first 5 pages)\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSQLDatabase -OnlySLA\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVSQLDatabase -Name space-end\n\nEXAMPLE 7\n\n    PS C:\\>Get-CVSQLDatabase -Name space_end\n\nEXAMPLE 8\n\n    PS C:\\>Get-CVSQLDatabase -SortColumn bkpSize\n\nEXAMPLE 9\n\n    PS C:\\>Get-CVSQLDatabase -SortColumn bkpSize -SortDescending\n\nEXAMPLE 10\n\n    PS C:\\>Get-CVSQLDatabase -AllProperties",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLClientDetail",
          "item": [],
          "_postman_id": "bd3bf877-ec4c-4b3d-a23c-f0b150c69234",
          "description": "SYNTAX\n\n    Get-CVSQLClientDetail -Name <String> [-InstanceName <String>] [-InstanceId <Int32>] [<CommonParameters>]\n\n    Get-CVSQLClientDetail -ClientObject <Object> [-InstanceName <String>] [-InstanceId <Int32>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve protected SQL client details.\n\n\nPARAMETERS\n\n    -Name <String>\n        Get detail properties for SQL client by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Get detail properties for SQL client by piping ClientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -InstanceName <String>\n        Filter output by SQL InstanceName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceId <Int32>\n        Filter output by SQL InstanceId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL client details.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLClientDetail\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSQLClientDetail -Name SNOWSQL1\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVClient | Get-CVSQLClientDetail\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSQLClientDetail -Name SNOWSQL1 -InstanceId 50\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSQLClientDetail -Name SNOWSQL1 | Select-Object -ExpandProperty SqlInstance",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLClone",
          "item": [],
          "_postman_id": "457cbc9a-f5d7-4867-8001-3365a88f628d",
          "description": "SYNTAX\n\n    Get-CVSQLClone [<CommonParameters>]\n\n    Get-CVSQLClone [-ClientName <String>] [-InstanceName <String>] [<CommonParameters>]\n\n    Get-CVSQLClone [-ClientId <Int32>] [-InstanceId <Int32>] [<CommonParameters>]\n\n    Get-CVSQLClone [-ClientObject <Object>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve SQL clone information.\n\n\nPARAMETERS\n\n    -ClientName <String>\n        Get clone information filtered by ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceName <String>\n        Get clone information filtered by InstanceName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientId <Int32>\n        Get clone information filtered by ClientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceId <Int32>\n        Get clone information filtered by InstanceId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Get clone information filtered by piping ClientObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL clone information.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLClone -ClientName vosql7\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSQLClone -ClientId 104\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSQLClone -ClientId 104 -InstanceId 109\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient | Get-CVSQLClone",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLDatabaseBackupHistory",
          "item": [],
          "_postman_id": "e89edcae-912c-4262-85c7-abe522861a2c",
          "description": "SYNTAX\n\n    Get-CVSQLDatabaseBackupHistory -Name <String> [-JobDetail] [<CommonParameters>]\n\n    Get-CVSQLDatabaseBackupHistory -DatabaseObject <Object> [-JobDetail] [<CommonParameters>]\n\n\nDESCRIPTION\n \n    Method to retrieve SQL database backup history information.\n\n\nPARAMETERS\n\n    -Name <String>\n        The database Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DatabaseObject <Object>\n        The SQL DatabaseObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -JobDetail [<SwitchParameter>]\n        Include full job details.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing backup history information.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLDatabaseBackupHistory\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSQLDatabaseBackupHistory -Name AuditDB\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSQLDatabaseBackupHistory -Name AuditDB -JobDetail\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSQLDatabaseBackupHistory -Name AuditDB -JobDetail | Select-Object -ExpandProperty JobDetail",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "id": "5907b162-1147-43a0-a32e-44d6602814cb"
              }
            },
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "id": "b8aa54da-6a3f-4a1a-8a01-b438b7eab3c0"
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLInstanceBackupHistory",
          "item": [],
          "_postman_id": "64c54d5b-2fa8-44b7-a7b1-3fe0073b008f",
          "description": "SYNTAX\n\n    Get-CVSQLInstanceBackupHistory -Name <String> [-JobDetail] [<CommonParameters>]\n\n    Get-CVSQLInstanceBackupHistory -InstanceObject <Object> [-JobDetail] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve backup history data for specific SQL instance.\n\n\nPARAMETERS\n\n    -Name <String>\n        The SQL instance Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceObject <Object>\n        The SQL InstanceObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -JobDetail [<SwitchParameter>]\n        Include full job details.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL instance backup history details.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLInstanceBackupHistory\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSQLInstanceBackupHistory -Name carbonWinCS1\\commvault\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSQLInstanceBackupHistory -Name CARBONWINCS1\\COMMVAULT -JobDetail\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSQLInstanceBackupHistory -Name CARBONWINCS1\\COMMVAULT -JobDetail | Select-Object -ExpandProperty JobDetail\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSQLInstance -Name carbonWinCS1\\commvault | Get-CVSQLInstanceBackupHistory",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLInstanceDetail",
          "item": [],
          "_postman_id": "8d7fe97c-520d-4c43-97b0-19ee4f98d985",
          "description": "SYNTAX\n\n    Get-CVSQLInstanceDetail -Name <String> [-AllProperties] [<CommonParameters>]\n\n    Get-CVSQLInstanceDetail -InstanceObject <Object> [-AllProperties] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve SQL instance details specified by instance name or pipeline input of an SQL instance object.\n\n\nPARAMETERS\n\n    -Name <String>\n        Get SQL instance details for the instance specified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -InstanceObject <Object>\n        Get SQL instance details for the instance object input from the pipeline.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Get all properties for the specified SQL instance.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL instance details.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLInstanceDetail\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSQLInstanceDetail -Name SNOWSQL1\\SQL2008R2\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSQLInstance | Get-CVSQLInstanceDetail -AllProperties",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLDatabaseDetail",
          "item": [],
          "_postman_id": "f52fdd0d-b16b-43b3-9e1d-7ecc635d89de",
          "description": "SYNTAX\n\n    Get-CVSQLDatabaseDetail -Name <String> [<CommonParameters>]\n\n    Get-CVSQLDatabaseDetail -DatabaseObject <Object> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve SQL database details specified by database name or pipeline input of an SQL database object.\n\n\nPARAMETERS\n \n    -Name <String>\n        Get SQL database details for the database specified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DatabaseObject <Object>\n        Get SQL database details for the database specified by DatabaseObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL database details.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLDatabaseDetail\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSQLDatabaseDetail -Name space_end\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSQLDatabase -Name space_end | Get-CVSQLDatabaseDetail",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSQLInstance",
          "item": [],
          "_postman_id": "93ef769c-7b2e-4322-93a1-86adebebeaf4",
          "description": "SYNTAX\n\n    Get-CVSQLInstance [-SortColumn {insId | insName | version | cName | noDBs | planName}] [-SortDescending] [-OnlySLA] [-AllProperties] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVSQLInstance [-Name <String>] [-ClientName <String>] [-SortColumn {insId | insName | version | cName | noDBs | planName}] [-SortDescending] [-OnlySLA] [-AllProperties] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>]\n    [<CommonParameters>]\n\n    Get-CVSQLInstance [-ClientObject <Object>] [-SortColumn {insId | insName | version | cName | noDBs | planName}] [-SortDescending] [-OnlySLA] [-AllProperties] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    This method is implemented with Powershell paging support.\n    If the Name parameter is not provided, this method will output all protected SQL instances.\n    If the Name parameter is provided, SQL instances matching the name will be output.\n\n\nPARAMETERS\n \n    -Name <String>\n        Get SQL instance specified by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Get SQL instances associated with ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Get SQL instances associated with piped ClientObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SortColumn\n        Sort SQL instances by: insId, insName, version, cName, noDBs, or planName.\n\n        Required?                    false\n        Position?                    named\n        Default value                insId\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SortDescending [<SwitchParameter>]\n        Sort SQL instances by specified column in descending order; default is ascending order.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OnlySLA [<SwitchParameter>]\n        Get only SQL instances with missed SLAs.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Get SQL instances with all properties.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -IncludeTotalCount [<SwitchParameter>]\n        Include total count of result record set.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Skip <UInt64>\n        Get SQL instances with paging support -First 20 -Skip 5 (20 per page, skip first 5 pages).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -First <UInt64>\n        Get SQL instances with paging support -First 20 (20 per page).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing SQL instance properties.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSQLInstance\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVClient | Get-CVSQLInstance\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSQLInstance -IncludeTotalCount -First 20 -Skip 5 (20 per page, skip first 5 pages)\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSQLInstance -OnlySLA\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVSQLInstance -Name SNOWSQL1\\SQL2008R2\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVSQLInstance -SortColumn noDBs\n\nEXAMPLE 7\n\n    PS C:\\>Get-CVSQLInstance -SortColumn insId -SortDescending\n\nEXAMPLE 8\n\n    PS C:\\>Get-CVSQLInstance -AllProperties\n\nEXAMPLE 9\n\n    PS C:\\>Get-CVSQLInstance -AllProperties | Select-Object -ExpandProperty auth\n\nEXAMPLE 10\n\n    PS C:\\>Get-CVSQLInstance -AllProperties | Select-Object -ExpandProperty auth | Select-Object -ExpandProperty credential",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVDiskSpace",
          "item": [],
          "_postman_id": "45fc0a1a-3bfd-4ba9-82d9-d5e7e2cc7a66",
          "description": "SYNTAX\n\n    Get-CVDiskSpace -LibraryName <String> [-MountPath <String>] [<CommonParameters>]\n\n    Get-CVDiskSpace -MediaAgentName <String> [-MountPath <String>] [<CommonParameters>]\n\n    Get-CVDiskSpace -LibraryObject <Object> [-MountPath <String>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve the available disk space of the library. Requires either the LibraryName or an associated MediaAgentName.\n\n\nPARAMETERS\n\n    -LibraryName <String>\n        Retrieve available disk space details for the library specified by LibraryName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -MediaAgentName <String>\n        Retrieve available disk space details for libraries associated with MediaAgentName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -LibraryObject <Object>\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -MountPath <String>\n        Filter output for a specific MountPath.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing storage resource library disk usage details.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVDiskSpace\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVDiskSpace -MediaAgentName PRODDEDUPE3\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVDiskSpace -MAName PRODDEDUPE3\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVDiskSpace -LibraryName library01\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVDiskSpace -LibraryName library01 -MountPath F:\\PRODTESTLIB",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVSubclientMediaAgent",
          "item": [],
          "_postman_id": "34df5924-5540-430a-9fcd-0b449c22c0f0",
          "description": "SYNTAX\n\n    Get-CVSubclientMediaAgent -Name <String> -ClientName <String> [<CommonParameters>]\n\n    Get-CVSubclientMediaAgent -ClientName <String> -Id <Int32> [<CommonParameters>]\n\n    Get-CVSubclientMediaAgent -SubclientObject <Object> [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve subclient media agent instances from the CommServe.\n\n\nPARAMETERS\n\n    -Name <String>\n        Retrieve media agent instances for subclient identified by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Provide ClientName for subclient lookup.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Retrieve media agent instances for subclient identified by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -SubclientObject <Object>\n        Retrieve media agent instances by piped SubclientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing subclient media agent instances.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSubclientMediaAgent\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSubclientMediaAgent -Name default -ClientName carbonwincs1\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSubclientMediaAgent -Id 2 -ClientName carbonwincs1\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSubclient -ClientName carbonwincs1 | Get-CVSubclientMediaAgent",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVLibrary",
          "item": [],
          "_postman_id": "f5e20406-0ac5-41a1-a04b-7c4df5763b42",
          "description": "SYNTAX\n\n    Get-CVLibrary [-Name <String>] [-MediaAgentName <String>] [-AllProperties] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve storage resource library instances from the CommServe. Output can be filtered by both library Name and associated MediaAgentName.\n\n\nPARAMETERS\n\n    -Name <String>\n        Filter library instances to be output by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -MediaAgentName <String>\n        Filter library instances to be output by associated MediaAgentName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -AllProperties [<SwitchParameter>]\n        Output library instances with full detail.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing storage resource library instances.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVLibrary\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVLibrary -AllProperties\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVLibrary -Name LIBRARY01\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVLibrary -MediaAgentName PRODDEDUPE3\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVLibrary -Name LIBRARY01 -MediaAgentName PRODDEDUPE3\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVLibrary -Name LIBRARY01 -MediaAgentName PRODDEDUPE3 -AllProperties",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVMediaAgent",
          "item": [],
          "_postman_id": "aba8c2c9-51f9-470e-afce-e1f387d79c8c",
          "description": "SYNTAX\n\n    Get-CVMediaAgent [-Name <String>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve media agent instances from the CommServe. Output can be filtered by Name parameter.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify media agent instances to be output by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing media agent instances.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVMediaAgent\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVMediaAgent -Name SNOWSQL1",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVVirtualMachine",
          "item": [],
          "_postman_id": "5cbb0cbd-2c26-406e-84b4-fedd3c4cfcb4",
          "description": "SYNTAX\n\n    Get-CVVirtualMachine [-Name <String>] [-Protected] [-UnProtected] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVVirtualMachine [-Name <String>] [-Id <String>] [-Protected] [-UnProtected] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVVirtualMachine [-Name <String>] [-ClientName <String>] [-Protected] [-UnProtected] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVVirtualMachine [-Name <String>] [-ClientId <Int32>] [-Protected] [-UnProtected] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n    Get-CVVirtualMachine [-Name <String>] [-ClientObject <Object>] [-Protected] [-UnProtected] [-IncludeTotalCount] [-Skip <UInt64>] [-First <UInt64>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    This method is implemented with Powershell paging support.\n    Method to retrieve the list of virtual machines in the CommCell.\n    Output can be filtered by Protected/Unprotected status, active subclients of a client, and virtual machine Name.\n\n\nPARAMETERS\n\n    -Name <String>\n        Filter output to virtual machine Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Id <String>\n        Specify Id representing virtual machine GUID.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Filter output by active subclients of ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientId <Int32>\n        Filter output by active subclients of ClientId.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Filter output by active subclients of ClientObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Protected [<SwitchParameter>]\n        Filter output by Protected virtual machines.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -UnProtected [<SwitchParameter>]\n        Filter output by UnProtected virtual machines.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -IncludeTotalCount [<SwitchParameter>]\n        Include total count of result record set.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Skip <UInt64>\n        Get list of virtual machines with paging support -First 20 -Skip 5 (20 per page, skip first 5 pages).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -First <UInt64>\n        Get list of virtual machines with paging support -First 20 (20 per page).\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] representing a virtual machine.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVVirtualMachine\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVVirtualMachine -Id 502df85e-7fe7-e1d6-8f0a-a9cdadd8c13e\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVVirtualMachine -IncludeTotalCount -First 20 -Skip 5 (20 per page, skip first 5 pages)\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVVirtualMachine -Protected\n\nEXAMPLE 5\n\n    PS C:\\>Get-CVVirtualMachine -UnProtected\n\nEXAMPLE 6\n\n    PS C:\\>Get-CVClient | Get-CVVirtualMachine -Protected\n\nEXAMPLE 7\n\n    PS C:\\>Get-CVVirtualMachine -Name autocs-winvm2\n\nEXAMPLE 8\n\n    PS C:\\>Get-CVVirtualMachine -ClientName Openstack-V2-client -Protected\n\nEXAMPLE 9\n\n    PS C:\\>Get-CVVirtualMachine -ClientName Openstack-V2-client -Name autocs-winvm2",
          "_postman_isSubFolder": true
        },
        {
          "name": "Add-CVVirtualMachine",
          "item": [],
          "_postman_id": "1459aa96-d959-48c3-8ba8-0f344cd3ba60",
          "description": "SYNTAX\n\n    Add-CVVirtualMachine -ClientName <String> [-SubclientName <String>] -Entity <String> [-EntityType {SERVER | RES_POOL | VAPP | DATACENTER | FOLDER | CLUSTER | DATASTORE | DATASTORE_CLUSTER | VM | VMName | VMGuestOS | VMGuestHostName\n    | ClusterSharedVolumes | LocalDisk | ClusterDisk | UnprotectedVMs | ROOT | FileServer | SMBShare | TypesFolder | VMFolder | ServerFolder | TemplateFolder | StorageRepositoryFolder | VAppFolder | DatacenterFolder | ClusterFolder |\n    VMPowerState | VMNotes | VMCustomAttribute | Network | User | VMTemplate | Tag | TagCategory | Subclient | ClientGroup | ProtectionDomain | ConsistencyGroup | InstanceSize | Organization}] [-OperationType {ADD | DELETE |\n    OVERWRITE}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Add-CVVirtualMachine -ClientObject <Object> [-SubclientName <String>] -Entity <String> [-EntityType {SERVER | RES_POOL | VAPP | DATACENTER | FOLDER | CLUSTER | DATASTORE | DATASTORE_CLUSTER | VM | VMName | VMGuestOS |\n    VMGuestHostName | ClusterSharedVolumes | LocalDisk | ClusterDisk | UnprotectedVMs | ROOT | FileServer | SMBShare | TypesFolder | VMFolder | ServerFolder | TemplateFolder | StorageRepositoryFolder | VAppFolder | DatacenterFolder |\n    ClusterFolder | VMPowerState | VMNotes | VMCustomAttribute | Network | User | VMTemplate | Tag | TagCategory | Subclient | ClientGroup | ProtectionDomain | ConsistencyGroup | InstanceSize | Organization}] [-OperationType {ADD |\n    DELETE | OVERWRITE}] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to add virtual server subclient content.\n\n\nPARAMETERS\n\n    -ClientName <String>\n        ClientName of the client in which subclient resides.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Piped ClientObject of the client in which subclient resides.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        SubclientName to which content should be added. If this parameter not passed, assumes default subclient.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Entity <String>\n        Name of the Entity to be added. Multiple entities can be added using a comma separated list. Virtual machine Name, datastore name etc.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -EntityType\n        EntityType can be VMName (default), Host or Cluster etc.\n\n        Required?                    false\n        Position?                    named\n        Default value                VMName\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OperationType\n\n        Required?                    false\n        Position?                    named\n        Default value                ADD\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n    If successful, specified content is added to the subclient.\n\nEXAMPLE 1\n\n    PS C:\\>Add-CVVirtualMachine -Entity LSRegVm1 -ClientName vsa-vc65.testlab.commvault.com\n\nEXAMPLE 2\n\n    PS C:\\>Add-CVVirtualMachine -Entity LSRegVm1 -ClientName vsa-vc65.testlab.commvault.com -SubclientName LSRegVMG1",
          "_postman_isSubFolder": true
        },
        {
          "name": "Add-CVVirtualMachineGroupContent",
          "item": [],
          "_postman_id": "58a51516-f421-4832-a636-d5014069e73f",
          "description": "SYNTAX\n\n    Add-CVVirtualMachineGroupContent -SubclientObject <Object> -EntityType {Host | Datastore | VMName | VMNamePattern | GuestOS | GuestDNSHostname | PoweredState | Notes | TemplateState | Tag | TagCategory} [-PoweredState {Off | On |\n    Other}] [-TemplateState <Boolean>] [-MatchingPattern {Contains | Equals | StartsWith | EndsWith}] [-DisplayName <String>] [-VMName <String>] [-CreateClientsForDiscoveredVms] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to perform a virtual machine group content preview with option to create clients from result set.\n\n\nPARAMETERS\n\n    -SubclientObject <Object>\n        Virtual machine group for content preview. Can be piped or passed as a parameter.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -EntityType\n        Virtual server EntityType including: Host, Datastore, VMName, VMNamePattern, GuestOS, GuestDNSHostname, PoweredState, Notes, TemplateState, Tag, and TagCategory.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -PoweredState\n        Paired with EntityType PoweredState: On, Off, Other.\n\n        Required?                    false\n        Position?                    named\n        Default value                On\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -TemplateState <Boolean>\n        Paired with EntityType TemplateState: $True or $False.\n\n        Required?                    false\n        Position?                    named\n        Default value                True\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -MatchingPattern\n        Matching pattern to be used for search on DisplayName can be: Contains, Equals, StartsWith, or EndsWith.\n\n        Required?                    false\n        Position?                    named\n        Default value                Equals\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DisplayName <String>\n        Search Term.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -VMName <String>\n        Paired with EntityType VMName, this is the VM GUID.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -CreateClientsForDiscoveredVms [<SwitchParameter>]\n        Switch to create clients for discovered virtual machines.\n        Recommend running first without this switch to preview discovery results.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing virtual machine discovery result.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVSubclient -Name GRS-VMGroup1 -ClientName accounting.mycompany.com | Add-CVVirtualMachineGroupContent -EntityType Datastore -MatchingPattern EndsWith -DisplayName DS1\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVSubclient -Name GRS-VMGroup1 -ClientName finance.mycompany.com | Add-CVVirtualMachineGroupContent -EntityType Host -MatchingPattern Equals -DisplayName 123.44.66.77\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVSubclient -Name GRS-VMGroup1 -ClientName sales.mycompany.com | Add-CVVirtualMachineGroupContent -EntityType VMNamePattern -MatchingPattern Contains -DisplayName GaryTest -CreateClientsForDiscoveredVms\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVSubclient -Name GRS-VMGroup1 -ClientName repos.mycompany.com | Add-CVVirtualMachineGroupContent -EntityType VMName -VMName 500bc16c-fb3f-17d6-5712-c00b4524d3d2",
          "_postman_isSubFolder": true
        },
        {
          "name": "Dismount-CVVirtualMachine",
          "item": [],
          "_postman_id": "9dbe5b1e-67aa-40e8-acf8-c605637e3801",
          "description": "SYNTAX\n\n    Dismount-CVVirtualMachine -Id <String> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Dismount-CVVirtualMachine -ActiveMountObject <Object> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to initiate dismount of live mounted virtual machine.\n\n\nPARAMETERS\n\n    -Id <String>\n        Specify Id representing live mounted virtual machine GUID.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ActiveMountObject <Object>\n        Specify ActiveMountObject containing live mounted virtual machine GUID.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Dismount-CVVirtualMachine -Id f7db5498-2bb5-4152-9064-dd50df07eff5\n\nEXAMPLE 2\n    PS C:\\>Get-CVVirtualMachineLiveMount -ClientName VSAAZURE -Name AzureProxyV2CS -SubclientName test-2567 | Dismount-CVVirtualMachine",
          "_postman_isSubFolder": true
        },
        {
          "name": "Restore-CVVirtualMachine",
          "item": [],
          "_postman_id": "32108b17-0af0-44be-af68-e73f154beaef",
          "description": "SYNTAX\n\n    Restore-CVVirtualMachine -Name <String> -ClientName <String> [-SubclientName <String>] [-JobId <Int32>] [-CopyPrecedence <Int32>] [-RestoreType {VirtualMachineFiles | FullVirtualMachine}] [-DestHypervisorType {vmware | hyperv}]\n    [-OutofPlace] [-PowerOnAfterRestore] [-OverwriteExisting] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Restore-CVVirtualMachine -Id <String> [-SubclientName <String>] [-JobId <Int32>] [-CopyPrecedence <Int32>] [-RestoreType {VirtualMachineFiles | FullVirtualMachine}] [-DestHypervisorType {vmware | hyperv}] [-OutofPlace]\n    [-PowerOnAfterRestore] [-OverwriteExisting] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Restore-CVVirtualMachine -ClientObject <Object> [-SubclientName <String>] [-JobId <Int32>] [-CopyPrecedence <Int32>] [-RestoreType {VirtualMachineFiles | FullVirtualMachine}] [-DestHypervisorType {vmware | hyperv}] [-OutofPlace]\n    [-PowerOnAfterRestore] [-OverwriteExisting] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to initiate restore/recovery of specified virtual machine.\n\n\nPARAMETERS\n\n    -Id <String>\n        Specify the virtual machine to be restored by GUID.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Name <String>\n        Specify the virtual machine to be restored by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Source virtual machine associated ClientName\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Specify SubclientName to override the default behaviour.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -JobId <Int32>\n        Specify JobId from which to restore.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -CopyPrecedence <Int32>\n        Specify CopyPrecedence from which the restore should occur: Primary, secondary or cloud.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -RestoreType\n        Specify RestoreType: FullVirtualMachine or VirtualMachineFiles.\n\n        Required?                    false\n        Position?                    named\n        Default value                FullVirtualMachine\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -DestHypervisorType\n        Specify DestHypervisorType: vmware or hyperv for out-of-place restore.\n        Note: DestHypervisorType defaults to 'vmare'. For hyperv out-of-place restore, this param must be provided on the command line.\n\n        Required?                    false\n        Position?                    named\n        Default value                vmware\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OutofPlace [<SwitchParameter>]\n        Switch to create an out-of-place virtual machine restore.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -PowerOnAfterRestore [<SwitchParameter>]\n        Switch to PowerOnAfterRestore.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -OverwriteExisting [<SwitchParameter>]\n        Switch to OverwriteExisting.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Restore-CVVirtualMachine\n\nEXAMPLE 2\n\n    PS C:\\>Restore-CVVirtualMachine -Id 502df85e-7fe7-e1d6-8f0a-a9cdadd8c13e\n\nEXAMPLE 3\n\n    PS C:\\>Restore-CVVirtualMachine -Name TESTVM12 -ClientName VSAQAVCDR.vsatest.commvault.com -SubclientName VMGroup1 -PowerOnAfterRestore -OverwriteExisting\n\nEXAMPLE 4\n\n    PS C:\\>Restore-CVVirtualMachine -Name TESTVM12 -ClientName VSAQAVCDR.vsatest.commvault.com -SubclientName VMGroup1 -PowerOnAfterRestore -OverwriteExisting -OutofPlace",
          "_postman_isSubFolder": true
        },
        {
          "name": "Mount-CVVirtualMachine",
          "item": [],
          "_postman_id": "532d1b4d-f6f5-450a-9cf4-c1ea04338ec1",
          "description": "SYNTAX\n\n    Mount-CVVirtualMachine -Name <String> -ClientName <String> [-SubclientName <String>] [-NetworkName <String>] [-PolicyName <String>] [-JobId <String>] [-LiveMountVMName <String>] [-ExpirationInHours <String>] [-Force] [-WhatIf]\n    [-Confirm] [<CommonParameters>]\n\n    Mount-CVVirtualMachine -Id <String> [-SubclientName <String>] [-NetworkName <String>] [-PolicyName <String>] [-JobId <String>] [-LiveMountVMName <String>] [-ExpirationInHours <String>] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n    Mount-CVVirtualMachine -ClientObject <Object> [-SubclientName <String>] [-NetworkName <String>] [-PolicyName <String>] [-JobId <String>] [-LiveMountVMName <String>] [-ExpirationInHours <String>] [-Force] [-WhatIf] [-Confirm]\n    [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to initiate live mount of specified virtual machine from specified media.\n\n\nPARAMETERS\n\n    -Id <String>\n        Specify Id representing source virtual machine GUID.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Name <String>\n        Source virtual machine Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Source virtual machine associated ClientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Specify SubclientName to override the default behaviour.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -NetworkName <String>\n        Specify NetworkName for live mount operation.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -PolicyName <String>\n        Specify PolicyName for live mount operation.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -JobId <String>\n        Specify JobId to live mount from particular backup job.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -LiveMountVMName <String>\n        Specify LiveMountVMName to override default naming behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ExpirationInHours <String>\n        Specify ExpirationInHours for in-place live mount.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Mount-CVVirtualMachine -Id 502df85e-7fe7-e1d6-8f0a-a9cdadd8c13e\n\nEXAMPLE 2\n\n    PS C:\\>Mount-CVVirtualMachine -ClientName VSAAZURE -Name AzureProxyV2CS\n\nEXAMPLE 3\n\n    PS C:\\>Mount-CVVirtualMachine -ClientName VSAAZURE -Name AzureProxyV2CS -SubclientName test-2567\n\nEXAMPLE 4\n\n    PS C:\\>Mount-CVVirtualMachine -ClientName VSAAZURE -Name AzureProxyV2CS -SubclientName test-2567 -PolicyName policy1 -JobId 12345 -LiveMountVMName AzureProxyV2CS_m1 -ExpirationInHours 3",
          "_postman_isSubFolder": true
        },
        {
          "name": "Remove-CVVirtualMachine",
          "item": [],
          "_postman_id": "86aa8960-170b-41b0-82f2-a3040e88ff5d",
          "description": "SYNTAX\n\n    Remove-CVVirtualMachine -ClientName <String> [-SubclientName <String>] -Entity <String> [-EntityType {SERVER | RES_POOL | VAPP | DATACENTER | FOLDER | CLUSTER | DATASTORE | DATASTORE_CLUSTER | VM | VMName | VMGuestOS |\n    VMGuestHostName | ClusterSharedVolumes | LocalDisk | ClusterDisk | UnprotectedVMs | ROOT | FileServer | SMBShare | TypesFolder | VMFolder | ServerFolder | TemplateFolder | StorageRepositoryFolder | VAppFolder | DatacenterFolder |\n    ClusterFolder | VMPowerState | VMNotes | VMCustomAttribute | Network | User | VMTemplate | Tag | TagCategory | Subclient | ClientGroup | ProtectionDomain | ConsistencyGroup | InstanceSize | Organization}] [-Force] [-WhatIf]\n    [-Confirm] [<CommonParameters>]\n\n    Remove-CVVirtualMachine -ClientObject <Object> [-SubclientName <String>] -Entity <String> [-EntityType {SERVER | RES_POOL | VAPP | DATACENTER | FOLDER | CLUSTER | DATASTORE | DATASTORE_CLUSTER | VM | VMName | VMGuestOS |\n    VMGuestHostName | ClusterSharedVolumes | LocalDisk | ClusterDisk | UnprotectedVMs | ROOT | FileServer | SMBShare | TypesFolder | VMFolder | ServerFolder | TemplateFolder | StorageRepositoryFolder | VAppFolder | DatacenterFolder |\n    ClusterFolder | VMPowerState | VMNotes | VMCustomAttribute | Network | User | VMTemplate | Tag | TagCategory | Subclient | ClientGroup | ProtectionDomain | ConsistencyGroup | InstanceSize | Organization}] [-Force] [-WhatIf]\n    [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to remove virtual server subclient content.\n\n\nPARAMETERS\n\n    -ClientName <String>\n        ClientName of the client in which subclient resides.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Piped ClientObject of the client in which subclient resides.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        SubclientName from which content should be removed. If this parameter not passed, assumes default subclient.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Entity <String>\n        Name of the Entity to be removed. Multiple entities can be added using a comma separated list. Virtual machine Name, datastore name etc.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -EntityType\n        EntityType can be VMName (default), Host or Cluster etc.\n\n        Required?                    false\n        Position?                    named\n        Default value                VMName\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n    If successful, specified content is removed from the subclient.\n\nEXAMPLE 1\n\n    PS C:\\>Remove-CVVirtualMachine -Entity LSRegVm1 -ClientName vsa-vc65.testlab.commvault.com\n\nEXAMPLE 2\n\n    PS C:\\>Remove-CVVirtualMachine -Entity LSRegVm1 -ClientName vsa-vc65.testlab.commvault.com -SubclientName LSRegVMG1",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVVirtualMachineLiveMount",
          "item": [],
          "_postman_id": "f2328f22-3cb8-48e4-a9b0-eab08177d982",
          "description": "SYNTAX\n\n    Get-CVVirtualMachineLiveMount -Name <String> -ClientName <String> [-SubclientName <String>] [<CommonParameters>]\n\n    Get-CVVirtualMachineLiveMount -Id <String> [-SubclientName <String>] [<CommonParameters>]\n\n    Get-CVVirtualMachineLiveMount -ClientObject <Object> [-SubclientName <String>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve list of active mounts for specified source virtual machine.\n\n\nPARAMETERS\n\n    -Id <String>\n        Specify Id representing source virtual machine GUID.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Name <String>\n        Source virtual machine Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Source virtual machine associated ClientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -SubclientName <String>\n        Specify SubclientName to override the default behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVVirtualMachineLiveMount | Select-Object -ExpandProperty virtualMachines\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVVirtualMachineLiveMount -Id 502d15b2-9f17-1df9-5231-20b22d73b952 | Select-Object -ExpandProperty virtualMachines\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVVirtualMachineLiveMount -Name LSRegVm1 -ClientName vsa-vc65.testlab.commvault.com -SubclientName LSRegVMG1 | Select-Object -ExpandProperty virtualMachines",
          "_postman_isSubFolder": true
        },
        {
          "name": "Backup-CVVirtualMachine",
          "item": [],
          "_postman_id": "76ce190a-c0e6-47b7-befa-34453e6cd23c",
          "description": "SYNTAX\n\n    Backup-CVVirtualMachine -Name <String> -ClientName <String> [-Protected] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVVirtualMachine -Id <String> [-Protected] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Backup-CVVirtualMachine -ClientObject <Object> [-Protected] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to initiate backup of specified virtual machine.\n\n\nPARAMETERS\n\n    -Id <String>\n        Virtual machine Id: this is the virtual machine GUID.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Name <String>\n        Virtual machine Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Virtual machine associated ClientName.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Virtual machine associated client specified by piped ClientObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Protected [<SwitchParameter>]\n        Use this switch to filter legacy, unprotected virtual machines when specifed by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing job submission result.\n\nEXAMPLE 1\n\n    PS C:\\>Backup-CVVirtualMachine -Id 500b0375-4728-588f-3d69-2d64b5291bcf\n\nEXAMPLE 2\n\n    PS C:\\>Backup-CVVirtualMachine -Name 2208 -ClientName V1-VSAQA",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVVirtualMachineBackupTime",
          "item": [],
          "_postman_id": "54d8c1be-5c3b-4245-8f47-d703e0295e8b",
          "description": "SYNTAX\n\n    Get-CVVirtualMachineBackupTime [-Name <String>] [<CommonParameters>]\n\n    Get-CVVirtualMachineBackupTime [-Name <String>] [-ClientName <String>] [-ClientObject <Object>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve the last backup details of virtual machines in the CommCell.\n\n\nPARAMETERS\n\n    -Name <String>\n        Filter output to virtual machine Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientName <String>\n        Filter output by active subclients of ClientName.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -ClientObject <Object>\n        Filter output by active subclients of ClientObject.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] representing virtual machine last backup details.\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVVirtualMachineBackupTime\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVVirtualMachineBackupTime -ClientName Openstack-V2-client\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVVirtualMachineBackupTime -ClientName Openstack-V2-client -Name autocs-winvm2\n\nEXAMPLE 4\n\n    PS C:\\>Get-CVClient | Get-CVVirtualMachineBackupTime",
          "_postman_isSubFolder": true
        },
        {
          "name": "Get-CVWorkflow",
          "item": [],
          "_postman_id": "4a1e0fbd-95ad-41a7-96b7-c370c71e79ef",
          "description": "SYNTAX\n\n    Get-CVWorkflow [<CommonParameters>]\n\n    Get-CVWorkflow [-Name <String>] [<CommonParameters>]\n\n    Get-CVWorkflow [-Id <Int32>] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to retrieve workflows from the CommServe. Output can be filtered by workflow Name or Id.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify the workflow to be output by Name.\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Specify the workflow to be output by Id.\n\n        Required?                    false\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing workflow(s).\n\nEXAMPLE 1\n\n    PS C:\\>Get-CVWorkflow\n\nEXAMPLE 2\n\n    PS C:\\>Get-CVWorkflow -Name DBMaintenance\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVWorkflow -Id 7",
          "_postman_isSubFolder": true
        },
        {
          "name": "Start-CVWorkflow",
          "item": [],
          "_postman_id": "c642ccf3-3aa2-480e-aab4-8cf505df5b65",
          "description": "SYNTAX\n\n    Start-CVWorkflow -WorkflowObject <Object> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Start-CVWorkflow -Name <String> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n    Start-CVWorkflow -Id <Int32> [-Force] [-WhatIf] [-Confirm] [<CommonParameters>]\n\n\nDESCRIPTION\n\n    Method to start/execute a workflow on the CommServe.\n\n\nPARAMETERS\n\n    -Name <String>\n        Specify workflow to be started by Name.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Id <Int32>\n        Specify workflow to be started by Id.\n\n        Required?                    true\n        Position?                    named\n        Default value                0\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -WorkflowObject <Object>\n        Specify workflow to be started by WorkflowObject.\n\n        Required?                    true\n        Position?                    named\n        Default value\n        Accept pipeline input?       true (ByValue, ByPropertyName)\n        Accept wildcard characters?  false\n\n    -Force [<SwitchParameter>]\n        Switch to Force override of default 'WhatIf' confirmation behavior.\n\n        Required?                    false\n        Position?                    named\n        Default value                False\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -WhatIf [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    -Confirm [<SwitchParameter>]\n\n        Required?                    false\n        Position?                    named\n        Default value\n        Accept pipeline input?       false\n        Accept wildcard characters?  false\n\n    <CommonParameters>\n        This cmdlet supports the common parameters: Verbose, Debug,\n        ErrorAction, ErrorVariable, WarningAction, WarningVariable,\n        OutBuffer, PipelineVariable, and OutVariable. For more information, see\n        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).\n\nINPUTS\n\nOUTPUTS\n\n    Outputs [PSCustomObject] containing start workflow result.\n\nEXAMPLE 1\n\n    PS C:\\>Start-CVWorkflow -Name DBMaintenance\n\nEXAMPLE 2\n\n    PS C:\\>Start-CVWorkflow -Id 7\n\nEXAMPLE 3\n\n    PS C:\\>Get-CVWorkflow -Name DBMaintenance | Start-CVWorkflow",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "987c3050-d1ee-41eb-ab74-74e5f15efae5",
      "description": "CVPowershellSDK is a Windows PowerShell package for Commvault software.\r\n\r\nCVPowershellSDK uses the Commvault REST API to perform operations on a CommCell via the WebConsole.\r\n\r\n[_Visit GitHub_](https://github.com/Commvault/CVPowershellSDK)\r\n\r\nCommvault PowerShell Module Reference\r\n-------------------------------------\r\nThis section contains reference information for the cmdlets in the Commvault PowerShell Module.",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0d01e5b5-933a-4ba9-aa97-e5c653d16ebe",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "68fe6894-9da6-4b1d-ac0d-7b315dcf21b3",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Discussion Operations",
      "item": [
        {
          "name": "On a Share",
          "item": [
            {
              "name": "Shared Folder",
              "item": [
                {
                  "name": "Create a Discussion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "postman.setEnvironmentVariable(\"discussionId\", jsonData.discussion.discussionId);"
                        ],
                        "id": "1d111110-b0c3-4ed2-b667-b67e170d03d3"
                      }
                    }
                  ],
                  "_postman_id": "d37d264d-4864-4625-8ab3-fecb0d415f59",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"entityGUID\": \"{{FILE1_GUID}}\",\n  \"comments\": [\n    {\n      \"content\": \"New discussion\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion",
                    "description": "<h2>Description</h2>\nThis operation creates a new discussion on a file in a shared folder or on a shared file.\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_share_file_discussion_create.htm)"
                  },
                  "response": [
                    {
                      "id": "81c77be3-0579-4c3b-9b91-fb4907922594",
                      "name": "Create a Discussion",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"entityGUID\": \"{{FILE1_GUID}}\",\n\t\"comments\": [\n\t\t{\n\t\t\t\"content\": \"New discussion\"\n\t\t}\n\t]\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "269",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:50:31 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":15,\"created\":1506626640,\"entityGUID\":\"7d938dfb73c04cf4b52bb24d67690a7d\",\"modified\":1506626640,\"nbComments\":5,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r\r]\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Add a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "postman.setEnvironmentVariable(\"commentId\", jsonData.comment.commentId);",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");"
                        ],
                        "id": "31d08a02-ff4d-4d14-af3d-ad6bcfb3bcf2"
                      }
                    }
                  ],
                  "_postman_id": "f84402ed-0071-4537-9e81-0e6d8893ecfe",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"content\": \"New comment\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment",
                    "description": "<h2>Description</h2>\nThis operation adds a comment to an existing discussion on a shared folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_share_folder_comment_add.htm)"
                  },
                  "response": [
                    {
                      "id": "8fab9e26-e43a-4263-aeff-36e5ff0bbb49",
                      "name": "Add a Comment",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"content\": \"New comment\"\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "223",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:16:05 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626165,\"commentId\":121,\"modified\":1506626165,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Add a Reply to a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "",
                          "",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "",
                          "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                          "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                        ],
                        "id": "d9553e92-f94f-4bba-91d8-52b11a3f5001"
                      }
                    }
                  ],
                  "_postman_id": "b420e6fd-4794-4ab6-9147-d9a162ad8867",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"content\": \"This is a reply to comment: {{commentId}}\",\n  \"parentComment\": {\n    \"commentId\": {{commentId}}\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment",
                    "description": "<h2>Description</h2> \r\nThis operation adds a comment to an existing discussion for a file or folder in Edge Drive.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>401</td> \r\n   <td>Unauthorized</td> \r\n   <td>The request did not include an authentication token or the authentication token was expired.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>412</td> \r\n   <td>Precondition Failed</td> \r\n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \r\n  </tr> \r\n </tbody> \r\n</table>"
                  },
                  "response": [
                    {
                      "id": "acbd6c34-5961-4b80-b54b-acd23a697520",
                      "name": "Add a Reply to a Comment",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"content\": \"This is a reply to comment: {{commentId}}\",\n\t\"parentComment\": {\n\t\t\"commentId\": {{commentId}}\n\t}\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "279",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:17:15 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626235,\"commentId\":125,\"modified\":1506626235,\"content\":\"This is a reply to comment: 121\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":121\r}\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Details of a Discussion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                          "",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                          "",
                          "tests[\"discussionId Validation\"] = jsonData.discussion.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));"
                        ],
                        "id": "de807142-1d88-4daf-9b69-b0f33cec3204"
                      }
                    }
                  ],
                  "_postman_id": "41b89a62-055e-4868-8bf8-9c5b3ab39502",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "ShareFolder",
                        "{{shareId}}",
                        "Discussion"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "<h2>Description</h2>\nThis operation retrieves the details of a discussion on a shared folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_folder_discussion.htm)"
                  },
                  "response": [
                    {
                      "id": "cecc230b-b423-4342-abf5-da34cdc34cd8",
                      "name": "View Details of a Discussion",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "PAGE-SIZE",
                            "value": "20"
                          },
                          {
                            "key": "SORT-DIRECTION",
                            "value": "0"
                          },
                          {
                            "key": "NBREPLIES",
                            "value": "10"
                          },
                          {
                            "key": "LAST-COMMENT-ID",
                            "value": "100"
                          }
                        ],
                        "url": {
                          "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion?depth=1",
                          "host": [
                            "{{ServerUrl}}"
                          ],
                          "path": [
                            "ShareFolder",
                            "{{shareId}}",
                            "Discussion"
                          ],
                          "query": [
                            {
                              "key": "depth",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "270",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:44:02 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"discussion\":{\r\"entityType\":7987,\"discussionId\":12,\"created\":1506624188,\"entityGUID\":\"df79d95b4c054db59eb375910cd30e97\",\"modified\":1506624188,\"nbComments\":1,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r\r]\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Details of a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "",
                          "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "tests[\"commentId Validation\"] = jsonData.comment.commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));"
                        ],
                        "id": "f406f467-035d-4eeb-9288-69270fe0f3a2"
                      }
                    }
                  ],
                  "_postman_id": "60726d22-c335-4211-94e4-67518732b262",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                    "description": "<h2>Description</h2>\nThis operation retrieves the details of a comment on a shared folder, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_folder_comment.htm)"
                  },
                  "response": [
                    {
                      "id": "3389e6ce-032f-442f-8b18-fabd151aaba9",
                      "name": "View Details of a Comment",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "PAGE-SIZE",
                            "value": "20"
                          },
                          {
                            "key": "SORT-DIRECTION",
                            "value": "0"
                          },
                          {
                            "key": "NBREPLIES",
                            "value": "10"
                          },
                          {
                            "key": "LAST-COMMENT-ID",
                            "value": "100"
                          }
                        ],
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "210",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:16:32 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626165,\"commentId\":121,\"modified\":1506626165,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Details of a Discussion Id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                          "",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                          "",
                          "tests[\"discussionId Validation\"] = jsonData.discussion.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));"
                        ],
                        "id": "88063bf9-1e6e-4e95-a992-40f1d8091a0b"
                      }
                    }
                  ],
                  "_postman_id": "0ec60b5d-c316-410c-bb88-f191cc348638",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "ShareFolder",
                        "{{shareId}}",
                        "Discussion",
                        "{{discussionId}}"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "<h2>Description</h2>\nThis operation retrieves the details of a discussion on a shared folder, based on the discussion ID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_folder_discussion_by_id.htm)"
                  },
                  "response": [
                    {
                      "id": "9e3fd37a-397d-4c20-84e4-97460d2c98ba",
                      "name": "View Details of a Discussion Id",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "PAGE-SIZE",
                            "value": "20"
                          },
                          {
                            "key": "SORT-DIRECTION",
                            "value": "0"
                          },
                          {
                            "key": "NBREPLIES",
                            "value": "10"
                          },
                          {
                            "key": "LAST-COMMENT-ID",
                            "value": "100"
                          }
                        ],
                        "url": {
                          "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}?depth=1",
                          "host": [
                            "{{ServerUrl}}"
                          ],
                          "path": [
                            "ShareFolder",
                            "{{shareId}}",
                            "Discussion",
                            "{{discussionId}}"
                          ],
                          "query": [
                            {
                              "key": "depth",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "257",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:45:23 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"discussion\":{\r\"entityType\":7987,\"discussionId\":12,\"created\":1506624188,\"entityGUID\":\"df79d95b4c054db59eb375910cd30e97\",\"modified\":1506624188,\"nbComments\":1,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r\r]\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Number of Replies for a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"discussionId Validation\"] = jsonData.comments[0].discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                          "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");",
                          "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "tests[\"commentId Validation\"] = jsonData.comments[0].commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));"
                        ],
                        "id": "71a2b1de-158a-4801-b7cb-098230e463bb"
                      }
                    }
                  ],
                  "_postman_id": "cad761ba-1815-49a2-9659-9586ed4c6a02",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "ShareFolder",
                        "{{shareId}}",
                        "Discussion",
                        "{{discussionId}}",
                        "Comment",
                        "{{commentId}}",
                        "Replies"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "<h2>Description</h2>\nThis operation retrieves the number of replies for a comment on a shared folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_folder_comment_replies.htm)"
                  },
                  "response": [
                    {
                      "id": "953b502a-1a03-41be-9b47-95188aea1af1",
                      "name": "View Number of Replies for a Comment",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                          "host": [
                            "{{ServerUrl}}"
                          ],
                          "path": [
                            "ShareFolder",
                            "{{shareId}}",
                            "Discussion",
                            "{{discussionId}}",
                            "Comment",
                            "{{commentId}}",
                            "Replies"
                          ],
                          "query": [
                            {
                              "key": "depth",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "482",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:26:15 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comments\":[\r{\r\"depth\":0,\"nbReplies\":1,\"discussionId\":15,\"created\":1506626748,\"commentId\":144,\"modified\":1506626748,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"replies\":[\r{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":15,\"created\":1506626769,\"commentId\":145,\"modified\":1506626769,\"content\":\"This is a reply to comment: 144\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":144\r}\r}\r]\r}\r]\r}"
                    }
                  ]
                },
                {
                  "name": "Edit a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "tests[\"commentId Validation\"] = jsonData.comment.commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));",
                          "",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "",
                          "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                          "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                        ],
                        "id": "324d53a2-aa77-4f5f-898d-49d9daf64544"
                      }
                    }
                  ],
                  "_postman_id": "51f7a158-9f67-4ef2-94da-361be732abca",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"content\": \"New comment\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                    "description": "<h2>Description</h2>\nThis operation retrieves the number of replies for a comment on a shared folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_share_folder_comment_edit.htm)"
                  },
                  "response": [
                    {
                      "id": "c0fe9d9f-656f-426d-9bf6-85fb045ea8f9",
                      "name": "Edit a Comment",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"comments\": [\n\t\t{\n\t\t\t\"content\": \"Edited comment\"\n\t\t}\n\t]\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "199",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:19:37 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626374,\"commentId\":127,\"modified\":1506626377,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Delete a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          ""
                        ],
                        "id": "9d40c896-8a6a-45ca-9b85-a15993fc51e4"
                      }
                    }
                  ],
                  "_postman_id": "03d776ee-0e6d-44ee-a43b-d5592e467ee0",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                    "description": "<h2>Description</h2>\nThis operation deletes a comment on a shared folder, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share_folder_comment.htm)"
                  },
                  "response": [
                    {
                      "id": "dffe672f-ccfd-440b-bb06-ecea2387aa52",
                      "name": "Delete a Comment",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "16",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:19:10 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Delete a Discussion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          ""
                        ],
                        "id": "2fa724e5-f6d7-4bca-b3b1-fb6517b78175"
                      }
                    }
                  ],
                  "_postman_id": "0e717eee-4613-4505-a343-2224179146df",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}",
                    "description": "<h2>Description</h2>\nThis operation deletes a discussion on a shared folder, based on the discussion ID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share_folder_discussion.htm)"
                  },
                  "response": [
                    {
                      "id": "a45d1d6d-252a-4ba5-b9dd-eed7b233f718",
                      "name": "Delete a Discussion",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion/{{discussionId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "4",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:52:08 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\r}"
                    }
                  ]
                }
              ],
              "_postman_id": "d9bb1bdf-9cff-4f1d-83d6-3801148478fb",
              "_postman_isSubFolder": true
            },
            {
              "name": "Shared File",
              "item": [
                {
                  "name": "Create a Discussion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "postman.setEnvironmentVariable(\"discussionId\", jsonData.discussion.discussionId);"
                        ],
                        "id": "7a81f68e-6cbd-4aaa-a571-d39bb8e2110e"
                      }
                    }
                  ],
                  "_postman_id": "d5d6cde4-b175-4a27-ab96-c612658746b7",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"comments\": [\n    {\n      \"content\": \"New discussion\"\n    }\n  ]\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion",
                    "description": "<h2>Description</h2>\nThis operation creates a new discussion for a shared folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_share_folder_discussion_create.htm)"
                  },
                  "response": [
                    {
                      "id": "f7b3c241-f6dd-484c-9d26-dc56d2ca5084",
                      "name": "Create a Discussion",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"entityGUID\": \"{{FILE1_GUID}}\",\n\t\"comments\": [\n\t\t{\n\t\t\t\"content\": \"New discussion\"\n\t\t}\n\t]\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/Discussion"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "469",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:50:17 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"discussion\":{\r\"entityType\":7987,\"discussionId\":16,\"created\":1506628217,\"entityGUID\":\"df79d95b4c054db59eb375910cd30e97\",\"modified\":1506628217,\"nbComments\":1,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":16,\"created\":1506628217,\"commentId\":147,\"modified\":1506628217,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Add a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "postman.setEnvironmentVariable(\"commentId\", jsonData.comment.commentId);",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");"
                        ],
                        "id": "5b77ae3d-439d-43ba-842a-0810d200b20a"
                      }
                    }
                  ],
                  "_postman_id": "89dfa234-570a-40cd-a3b9-4b21836f11ba",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"content\": \"New comment\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment",
                    "description": "<h2>Description</h2>\nThis operation adds a comment to an existing discussion on a file in a shared folder or on a shared file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_share_file_comment_add.htm)"
                  },
                  "response": [
                    {
                      "id": "26d63c42-718c-46b1-9d52-d54aa2e35619",
                      "name": "Add a Comment",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"content\": \"New comment\"\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "223",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:14:17 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626057,\"commentId\":118,\"modified\":1506626057,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Add a Reply to a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "",
                          "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                          "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                        ],
                        "id": "931531f6-5a54-4a4d-b010-2c2380f7988d"
                      }
                    }
                  ],
                  "_postman_id": "3a41a4f8-c69b-4e89-b8f1-6df09a1f9629",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"content\": \"This is a reply to comment: {{commentId}}\",\n  \"parentComment\": {\n    \"commentId\": {{commentId}}\n  }\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment",
                    "description": "<h2>Description</h2> \r\nThis operation adds a comment to an existing discussion for a file or folder in Edge Drive.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>401</td> \r\n   <td>Unauthorized</td> \r\n   <td>The request did not include an authentication token or the authentication token was expired.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>412</td> \r\n   <td>Precondition Failed</td> \r\n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \r\n  </tr> \r\n </tbody> \r\n</table>"
                  },
                  "response": [
                    {
                      "id": "29922bad-2fd1-4db3-aa8c-5b0a9d0e24a1",
                      "name": "Add a Reply to a Comment",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n\t\"content\": \"This is a reply to comment: {{commentId}}\",\n\t\"parentComment\": {\n\t\t\"commentId\": {{commentId}}\n\t}\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "279",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:24:23 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":15,\"created\":1506626663,\"commentId\":142,\"modified\":1506626663,\"content\":\"This is a reply to comment: 141\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":141\r}\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Details of a Discussion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                          "",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");"
                        ],
                        "id": "52ec49e0-2ffd-4d89-8e3b-ec42f5d1aef3"
                      }
                    }
                  ],
                  "_postman_id": "aa785b5f-7616-4dca-ac70-4f183a9122ce",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "ShareFolder",
                        "{{shareId}}",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "<h2>Description</h2>\nThis operation retrieves the details of a discussion on a file in a shared folder or on a shared file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_file_discussion.htm)"
                  },
                  "response": [
                    {
                      "id": "37c4e9fc-3c5f-4543-ae18-2f82c9323ab0",
                      "name": "View Details of a Discussion",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "PAGE-SIZE",
                            "value": "20"
                          },
                          {
                            "key": "SORT-DIRECTION",
                            "value": "0"
                          },
                          {
                            "key": "NBREPLIES",
                            "value": "10"
                          },
                          {
                            "key": "LAST-COMMENT-ID",
                            "value": "100"
                          }
                        ],
                        "url": {
                          "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion?depth=1",
                          "host": [
                            "{{ServerUrl}}"
                          ],
                          "path": [
                            "ShareFolder",
                            "{{shareId}}",
                            "file",
                            "{{FILE1_GUID}}",
                            "Discussion"
                          ],
                          "query": [
                            {
                              "key": "depth",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "269",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:36:08 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":11,\"created\":1506441067,\"entityGUID\":\"df79d95b4c054db59eb375910cd30e97\",\"modified\":1506441067,\"nbComments\":7,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r\r]\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Details of a Discussion Id",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "",
                          "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                          "",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                          "",
                          "tests[\"discussionId Validation\"] = jsonData.discussion.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));"
                        ],
                        "id": "7ed2b741-1c39-49db-b6f7-b61bf53d7ca7"
                      }
                    }
                  ],
                  "_postman_id": "28f3391c-f29b-4bdb-b5b5-979eaac2dfd8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "ShareFolder",
                        "{{shareId}}",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "<h2>Description</h2>\nThis operation retrieves the details of a discussion on a file in a shared folder or on a shared file, based on the discussion ID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_file_discussion_by_id.htm)"
                  },
                  "response": [
                    {
                      "id": "8ca5e622-ee9e-4f51-aa33-3d4ecd26c847",
                      "name": "View Details of a Discussion Id",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "PAGE-SIZE",
                            "value": "20"
                          },
                          {
                            "key": "SORT-DIRECTION",
                            "value": "0"
                          },
                          {
                            "key": "NBREPLIES",
                            "value": "10"
                          },
                          {
                            "key": "LAST-COMMENT-ID",
                            "value": "100"
                          }
                        ],
                        "url": {
                          "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=1",
                          "host": [
                            "{{ServerUrl}}"
                          ],
                          "path": [
                            "ShareFolder",
                            "{{shareId}}",
                            "file",
                            "{{FILE1_GUID}}",
                            "Discussion",
                            "{{discussionId}}"
                          ],
                          "query": [
                            {
                              "key": "depth",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "256",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:36:50 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":11,\"created\":1506441067,\"entityGUID\":\"df79d95b4c054db59eb375910cd30e97\",\"modified\":1506441067,\"nbComments\":7,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r\r]\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Details of a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "",
                          "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "tests[\"commentId Validation\"] = jsonData.comment.commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));"
                        ],
                        "id": "8fca9852-c122-4fe7-bf60-0defb70f361f"
                      }
                    }
                  ],
                  "_postman_id": "e7fdc025-57f1-412c-8296-3d5aa9c28516",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                    "description": "<h2>Description</h2>\nThis operation retrieves the details of a comment on a file in a shared folder or on a shared file, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_file_comment.htm)"
                  },
                  "response": [
                    {
                      "id": "d10d4c24-d759-4c3d-a025-6400864093fa",
                      "name": "View Details of a Comment",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "PAGE-SIZE",
                            "value": "20"
                          },
                          {
                            "key": "SORT-DIRECTION",
                            "value": "0"
                          },
                          {
                            "key": "NBREPLIES",
                            "value": "10"
                          },
                          {
                            "key": "LAST-COMMENT-ID",
                            "value": "100"
                          }
                        ],
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "210",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:38:24 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":11,\"created\":1506441069,\"commentId\":104,\"modified\":1506441069,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r}"
                    }
                  ]
                },
                {
                  "name": "View Number of Replies for a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"discussionId Validation\"] = jsonData.comments[0].discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                          "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");",
                          "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "tests[\"commentId Validation\"] = jsonData.comments[0].commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));",
                          ""
                        ],
                        "id": "6246dc43-89cb-41be-8637-2de664c2229e"
                      }
                    }
                  ],
                  "_postman_id": "579af6b8-6d45-4b9d-8065-7adb4f4ac486",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "ShareFolder",
                        "{{shareId}}",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}",
                        "Comment",
                        "{{commentId}}",
                        "Replies"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    },
                    "description": "<h2>Description</h2>\nThis operation retrieves the number of replies for a comment on a file in a shared folder or on a shared file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_share_file_comment_replies.htm)"
                  },
                  "response": [
                    {
                      "id": "92ca7a33-3ce1-419e-b6fe-a17828367f47",
                      "name": "View Number of Replies for a Comment",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                          "host": [
                            "{{ServerUrl}}"
                          ],
                          "path": [
                            "ShareFolder",
                            "{{shareId}}",
                            "file",
                            "{{FILE1_GUID}}",
                            "Discussion",
                            "{{discussionId}}",
                            "Comment",
                            "{{commentId}}",
                            "Replies"
                          ],
                          "query": [
                            {
                              "key": "depth",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "215",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:38:42 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":11,\"created\":1506441069,\"commentId\":104,\"modified\":1506441069,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r}"
                    }
                  ]
                },
                {
                  "name": "Edit a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                          "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                          "tests[\"commentId Validation\"] = jsonData.comment.commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));",
                          "",
                          "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                          "",
                          "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                          "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                        ],
                        "id": "d4f1d8cf-b5eb-4a05-a0f8-324ca9991027"
                      }
                    }
                  ],
                  "_postman_id": "8b86b81f-830b-4c33-988b-1e0e4e9c74d8",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"content\": \"Edited Comment\"\n}",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                    "description": "<h2>Description</h2>\nThis operation edits a comment for an existing discussion on a file in a shared folder or on a shared file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_share_file_comment_edit.htm)"
                  },
                  "response": [
                    {
                      "id": "00115161-1c0b-4db0-be77-b6498d2ab9f2",
                      "name": "Edit a Comment",
                      "originalRequest": {
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"content\": \"Edited Comment\"\n}"
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "199",
                          "name": "Content-Length",
                          "description": ""
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": ""
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:40:37 GMT",
                          "name": "Date",
                          "description": ""
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": ""
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": ""
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":11,\"created\":1506441069,\"commentId\":104,\"modified\":1506624037,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Delete a Comment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          ""
                        ],
                        "id": "e5187df0-ce9e-487c-98d4-7ea84f72aa7b"
                      }
                    }
                  ],
                  "_postman_id": "70f73ad7-68fb-452e-9247-8e2ff81efbfd",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                    "description": "<h2>Description</h2>\nThis operation deletes a comment on a file in a shared folder or on a shared file, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share_file_comment.htm)"
                  },
                  "response": [
                    {
                      "id": "75b6326d-3aad-41ac-952d-3f8fac6a102a",
                      "name": "Delete a Comment",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "16",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 19:24:47 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\"error\":{\r\r}\r}"
                    }
                  ]
                },
                {
                  "name": "Delete a Discussion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "type": "text/javascript",
                        "exec": [
                          "var jsonData = JSON.parse(responseBody);",
                          "",
                          "tests[\"Status code is 200\"] = responseCode.code === 200;",
                          ""
                        ],
                        "id": "5a766ee6-1c92-4986-9a2d-f453c681b709"
                      }
                    }
                  ],
                  "_postman_id": "d9627124-cef0-452d-9bba-94ea3bfb4d6c",
                  "protocolProfileBehavior": {
                    "disableBodyPruning": true
                  },
                  "request": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "",
                      "options": {
                        "raw": {}
                      }
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}",
                    "description": "<h2>Description</h2>\nThis operation deletes a discussion on a file in a shared folder or on a shared file, based on the discussion ID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share_file_discussion.htm)"
                  },
                  "response": [
                    {
                      "id": "ee72309e-f51b-4512-9e86-040e4a6ed55d",
                      "name": "Delete a Discussion",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "{{Accept}}"
                          },
                          {
                            "key": "Authtoken",
                            "value": "{{TOKEN}}"
                          },
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": "{{ServerUrl}}/ShareFolder/{{shareId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Length",
                          "value": "4",
                          "name": "Content-Length",
                          "description": "The length of the response body in octets (8-bit bytes)"
                        },
                        {
                          "key": "Content-Type",
                          "value": "application/json; charset=utf-8",
                          "name": "Content-Type",
                          "description": "The mime type of this content"
                        },
                        {
                          "key": "Date",
                          "value": "Thu, 28 Sep 2017 18:42:03 GMT",
                          "name": "Date",
                          "description": "The date and time that the message was sent"
                        },
                        {
                          "key": "Server",
                          "value": "Microsoft-IIS/8.5",
                          "name": "Server",
                          "description": "A name for the server"
                        },
                        {
                          "key": "X-Powered-By",
                          "value": "ASP.NET",
                          "name": "X-Powered-By",
                          "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                        }
                      ],
                      "cookie": [],
                      "responseTime": null,
                      "body": "{\r\r}"
                    }
                  ]
                }
              ],
              "_postman_id": "b4818330-74af-420f-b2d5-3848adc6a946",
              "_postman_isSubFolder": true
            }
          ],
          "_postman_id": "6ccaecea-2935-483f-a652-86d48ba4815f",
          "_postman_isSubFolder": true
        },
        {
          "name": "On a Client Computer",
          "item": [
            {
              "name": "Create a Discussion",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"entityGUID Validation\"] = jsonData.discussion.entityGUID === postman.getEnvironmentVariable(\"FILE1_GUID\");",
                      "",
                      "postman.setEnvironmentVariable(\"discussionId\", jsonData.discussion.discussionId);"
                    ],
                    "id": "07400a34-ddfc-41a4-bd7b-eae51b323104"
                  }
                }
              ],
              "_postman_id": "6582f06c-2449-41cf-ac8f-d7f3d9db7e56",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"entityGUID\": \"{{FILE1_GUID}}\",\n  \"comments\": [\n    {\n      \"content\": \"New discussion\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion",
                "description": "<h2>Description</h2>\nThis operation creates a new discussion on a backed up file or folder on a client computer.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_subclient_discussion_create.htm)"
              },
              "response": [
                {
                  "id": "1fcda855-cfe0-4625-8b0b-d85fe6e0f662",
                  "name": "Create a Discussion",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"entityGUID\": \"{{FILE1_GUID}}\",\n\t\"comments\": [\n\t\t{\n\t\t\t\"content\": \"New discussion\"\n\t\t}\n\t]\n}"
                    },
                    "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "269",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 21:31:31 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":15,\"created\":1506626640,\"entityGUID\":\"7d938dfb73c04cf4b52bb24d67690a7d\",\"modified\":1506626640,\"nbComments\":6,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r\r]\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Add a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "postman.setEnvironmentVariable(\"commentId\", jsonData.comment.commentId);",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");"
                    ],
                    "id": "32a06633-49b2-447c-bb97-c03929c874eb"
                  }
                }
              ],
              "_postman_id": "10d9f941-9449-48ad-8525-ccc71eabc8b8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"New comment\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment",
                "description": "<h2>Description</h2>\nThis operation adds a comment to an existing discussion on a backed up file or folder on a client computer.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_subclient_file_comment_add.htm)"
              },
              "response": [
                {
                  "id": "5be66e28-ac46-4fcd-914e-31775096f323",
                  "name": "Add a Comment",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"content\": \"New comment\"\n}"
                    },
                    "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "223",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 21:38:29 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506634709,\"commentId\":158,\"modified\":1506634709,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View Details of a Discussion",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"entityGUID Validation\"] = jsonData.discussion.entityGUID === postman.getEnvironmentVariable(\"FILE1_GUID\");",
                      "tests[\"discussionId Validation\"] = jsonData.discussion.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));"
                    ],
                    "id": "5992f6dc-bb29-4287-8a5d-a069097f30b0"
                  }
                }
              ],
              "_postman_id": "8ba0c23e-2007-4883-9aa7-85cdd957f366",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "PAGE-SIZE",
                    "value": "20"
                  },
                  {
                    "key": "SORT-DIRECTION",
                    "value": "0"
                  },
                  {
                    "key": "NBREPLIES",
                    "value": "10"
                  },
                  {
                    "key": "LAST-COMMENT-ID",
                    "value": "1000"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion?depth=1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "Subclient",
                    "{{subclientId}}",
                    "file",
                    "{{FILE1_GUID}}",
                    "Discussion"
                  ],
                  "query": [
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation adds a comment to an existing discussion on a backed up file or folder on a client computer.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_subclient_file_discussion.htm)"
              },
              "response": [
                {
                  "id": "aee63103-a197-4fa5-9500-03adb29dd29d",
                  "name": "View Details of a Discussion",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "1000"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "Subclient",
                        "{{subclientId}}",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "1254",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 21:39:09 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":17,\"created\":1506632398,\"entityGUID\":\"3f0a933a16dfec04c370aaa11cc190a3\",\"modified\":1506632398,\"nbComments\":5,\"status\":1,\"owner\":{\r\"newName\":\"admin\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506634709,\"commentId\":158,\"modified\":1506634709,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506634702,\"commentId\":157,\"modified\":1506634702,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506632999,\"commentId\":154,\"modified\":1506632999,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506632957,\"commentId\":153,\"modified\":1506632957,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506632917,\"commentId\":152,\"modified\":1506632917,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View Details of a Discussion Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                      "",
                      "tests[\"entityGUID Validation\"] = jsonData.discussion.entityGUID === postman.getEnvironmentVariable(\"FILE1_GUID\");",
                      "tests[\"discussionId Validation\"] = jsonData.discussion.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));"
                    ],
                    "id": "021c8d09-c9bd-43cc-9802-caaf532a8253"
                  }
                }
              ],
              "_postman_id": "7c315baa-f57c-4733-878f-a3c17de4ab86",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "PAGE-SIZE",
                    "value": "20"
                  },
                  {
                    "key": "SORT-DIRECTION",
                    "value": "0"
                  },
                  {
                    "key": "NBREPLIES",
                    "value": "10"
                  },
                  {
                    "key": "LAST-COMMENT-ID",
                    "value": "1000"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "Subclient",
                    "{{subclientId}}",
                    "file",
                    "{{FILE1_GUID}}",
                    "Discussion",
                    "{{discussionId}}"
                  ],
                  "query": [
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation retrieves the details of a discussion on a backed up file or folder on a client computer, based on the discussion ID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_subclient_file_discussion_by_id.htm)"
              },
              "response": [
                {
                  "id": "4585b465-6c71-40af-a0c7-933ae627f475",
                  "name": "View Details of a Discussion Id",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "1000"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "Subclient",
                        "{{subclientId}}",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "1241",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 21:39:24 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":17,\"created\":1506632398,\"entityGUID\":\"3f0a933a16dfec04c370aaa11cc190a3\",\"modified\":1506632398,\"nbComments\":5,\"status\":1,\"owner\":{\r\"newName\":\"admin\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506634709,\"commentId\":158,\"modified\":1506634709,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506634702,\"commentId\":157,\"modified\":1506634702,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506632999,\"commentId\":154,\"modified\":1506632999,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506632957,\"commentId\":153,\"modified\":1506632957,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506632917,\"commentId\":152,\"modified\":1506632917,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r}\r}"
                }
              ]
            },
            {
              "name": "View Details of a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "",
                      "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                      "tests[\"commentId Validation\"] = jsonData.comment.commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));"
                    ],
                    "id": "97a9b5f3-0da3-48e1-a9b7-b8149bc0d0da"
                  }
                }
              ],
              "_postman_id": "b96adf86-668f-487a-9b00-5c2aed0164f4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "PAGE-SIZE",
                    "value": "20"
                  },
                  {
                    "key": "SORT-DIRECTION",
                    "value": "0"
                  },
                  {
                    "key": "NBREPLIES",
                    "value": "10"
                  },
                  {
                    "key": "LAST-COMMENT-ID",
                    "value": "1000"
                  }
                ],
                "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                "description": "<h2>Description</h2>\nThis operation retrieves the details of a comment on a backed up file or folder on a client computer, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_subclient_file_comment.htm)"
              },
              "response": [
                {
                  "id": "25d9a6ce-4a0a-4b29-b917-d8553fbe49e2",
                  "name": "View Details of a Comment",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "PAGE-SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "1000"
                      }
                    ],
                    "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "210",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 21:39:46 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506634709,\"commentId\":158,\"modified\":1506634709,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r}"
                }
              ]
            },
            {
              "name": "Add a Reply to a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                      "",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "",
                      "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                      "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                    ],
                    "id": "e5376e49-2ba4-4334-8e2a-7f4db3fb1974"
                  }
                }
              ],
              "_postman_id": "e1a400c1-f5d3-4153-9ab6-aeb819b25214",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"This is a reply to comment: {{commentId}}\",\n  \"parentComment\": {\n    \"commentId\": {{commentId}}\n  }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment",
                "description": "<h2>Description</h2> \r\nThis operation replies to an existing comment on a backed up folder or file on a client computer.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>401</td> \r\n   <td>Unauthorized</td> \r\n   <td>The request did not include an authentication token or the authentication token was expired.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>412</td> \r\n   <td>Precondition Failed</td> \r\n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \r\n  </tr> \r\n </tbody> \r\n</table>"
              },
              "response": [
                {
                  "id": "9eb8ee05-b449-4866-a755-490ddfa872b9",
                  "name": "Add a Reply to a Comment",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"content\": \"This is a reply to comment: {{commentId}}\",\n\t\"parentComment\": {\n\t\t\"commentId\": {{commentId}}\n\t}\n}"
                    },
                    "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "279",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 03 Oct 2017 16:35:38 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1507048538,\"commentId\":161,\"modified\":1507048538,\"content\":\"This is a reply to comment: 158\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":158\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View Number of Replies for a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"discussionId Validation\"] = jsonData.comments[0].discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                      "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                      "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");",
                      "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "tests[\"commentId Validation\"] = jsonData.comments[0].commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));",
                      ""
                    ],
                    "id": "4a56f557-8588-45ec-9e8c-163da31b8e55"
                  }
                }
              ],
              "_postman_id": "860ccfc8-3d3f-47e9-b752-59703ca41d13",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "Subclient",
                    "{{subclientId}}",
                    "file",
                    "{{FILE1_GUID}}",
                    "Discussion",
                    "{{discussionId}}",
                    "Comment",
                    "{{commentId}}",
                    "Replies"
                  ],
                  "query": [
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation retrieves the number of replies for a comment on a file in a shared folder or on a shared file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_subclient_file_comment_replies.htm)"
              },
              "response": [
                {
                  "id": "d18b2fa9-c6f4-468a-b2da-8ab20c5a7bf0",
                  "name": "View Number of Replies for a Comment",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "Subclient",
                        "{{subclientId}}",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}",
                        "Comment",
                        "{{commentId}}",
                        "Replies"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "482",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Tue, 03 Oct 2017 16:37:00 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comments\":[\r{\r\"depth\":0,\"nbReplies\":1,\"discussionId\":17,\"created\":1507048611,\"commentId\":163,\"modified\":1507048611,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"replies\":[\r{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":17,\"created\":1507048614,\"commentId\":164,\"modified\":1507048614,\"content\":\"This is a reply to comment: 163\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":163\r}\r}\r]\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Edit a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"discussionId Validation\"] = jsonData.comment.discussionId === parseInt(postman.getEnvironmentVariable(\"discussionId\"));",
                      "tests[\"commentId Validation\"] = jsonData.comment.commentId === parseInt(postman.getEnvironmentVariable(\"commentId\"));",
                      "",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "",
                      "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                      "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                    ],
                    "id": "a5350939-6bf9-4124-b42b-94dc7ee50a52"
                  }
                }
              ],
              "_postman_id": "12bdf977-f387-4650-8fce-c5c3c5c7b98f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Edited Comment\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                "description": "<h2>Description</h2>\nThis operation edits a comment for an existing discussion on a backed up file or folder on a client computer.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_subclient_file_comment_edit.htm)"
              },
              "response": [
                {
                  "id": "8331f8e9-f2cf-49c6-ba81-acfb8f9deaa4",
                  "name": "Edit a Comment",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"content\": \"Edited Comment\"\n}"
                    },
                    "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "226",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 21:41:20 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":17,\"created\":1506634709,\"commentId\":158,\"modified\":1506634880,\"content\":\"Edited Comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Delete a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      ""
                    ],
                    "id": "69fd28ae-2681-4e4b-a41a-4b52de3bd4a8"
                  }
                }
              ],
              "_postman_id": "4b99c06c-bbcf-4da9-a73a-498f56875bdb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                "description": "<h2>Description</h2>\nThis operation deletes a comment on a backed up file or folder on a client computer, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_subclient_file_discussion.htm)"
              },
              "response": [
                {
                  "id": "c28e9f55-70c5-44fb-8d2a-6323948a7983",
                  "name": "Delete a Comment",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "16",
                      "name": "Content-Length",
                      "description": "The length of the response body in octets (8-bit bytes)"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": "The mime type of this content"
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 21:41:32 GMT",
                      "name": "Date",
                      "description": "The date and time that the message was sent"
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": "A name for the server"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Delete a Discussion",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200 || responseCode.code === 202;",
                      ""
                    ],
                    "id": "f4818037-86a1-4179-bad6-fe91e2239279"
                  }
                }
              ],
              "_postman_id": "33d4e883-8771-4556-a61c-247e37618379",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Subclient/{{subclientId}}/file/{{FILE1_GUID}}/Discussion/{{discussionId}}",
                "description": "<h2>Description</h2>\nThis operation deletes a discussion on a backed up file or folder on a client computer, based on the discussion ID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://intdocresource2:8086/commvault/v11/article?p=features/rest_api/operations/delete_subclient_file_discussion.htm)"
              },
              "response": []
            }
          ],
          "_postman_id": "51639c45-abae-4cef-87a7-da32bed02c6b",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "bb350a0b-b32d-49ea-b90e-bdf8231e8265"
    },
    {
      "name": "Edge Drive Operations",
      "item": [
        {
          "name": "File and Folder Operations",
          "item": [
            {
              "name": "Environment Setup",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable(\"FolderName\", \"DemoFolder\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileData\", \"Demo File Content\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileSize\", \"17\");",
                      "",
                      "postman.setEnvironmentVariable(\"SecondFileSize\", \"34\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileModifiedtime\", \"1481595468\");",
                      "",
                      "postman.setEnvironmentVariable(\"ParentFolderPath\", \"XERlbW9Gb2xkZXI=\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName1\", \"RGVtb0ZpbGUxLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName2\", \"RGVtb0ZpbGUyLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"ShareParentFolderPath\", \"XA==\");"
                    ],
                    "id": "224afb64-fe72-4b47-bfd8-24dbc545f965"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"TOKEN\", jsonData.token);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "tests[\"Response Body contains userGUID\"] = responseBody.has(\"userGUID\");",
                      "",
                      "tests[\"Response Body contains token\"] = responseBody.has(\"token\");"
                    ],
                    "id": "de9e295b-6e1f-426d-8ca5-25abee00409f"
                  }
                }
              ],
              "_postman_id": "cae58b83-96df-4c5b-a066-53230119ff0c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "04912c7a-d1e4-4b98-84af-0ad5f4258945",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                },
                {
                  "id": "8846d679-e9a1-4640-ab60-6031d9eba6b7",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Drive",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RootGuid\", jsonData.edgeDriveInfo.rootGUID);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains clientName\"] = responseBody.has(\"clientName\");",
                      "",
                      "tests[\"Response Body contains rootGUID\"] = responseBody.has(\"rootGUID\");"
                    ],
                    "id": "8ff24fda-5143-4f57-b392-1306c636dca4"
                  }
                }
              ],
              "_postman_id": "0926f44d-5003-4f02-a21c-fcc491896cdd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive",
                "description": "<h2>Description</h2>\nUse this operation to view details for your Edge Drive account, for example, root GUID and user capabilities.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive.htm)"
              },
              "response": [
                {
                  "id": "56d0cbb1-5516-4dbc-b028-7196e41035bc",
                  "name": "GET Drive",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "558"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:18:02 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":{\r\"errorString\":\"\",\"errorCode\":0,\"entity\":{\r\"subclientPolicyId\":12,\"subclientId\":14,\"applicationId\":33,\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"clientId\":6,\"userId\":1,\"subclientName\":\"admin\",\"backupsetName\":\"admin\"\r}\r},\"edgeDriveInfo\":{\r\"contentIndexingEnabled\":true,\"hasSyncBlackListedLaptop\":false,\"capabilities\":549775216688,\"driveType\":0,\"cloudId\":0,\"dirDelim\":\"\\\\\",\"rootGUID\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"hasEdgeDriveEnabledLaptop\":false\r},\"syncWebFolder\":{\r\"_type_\":111,\"syncWebFolderId\":872129,\"syncWebFolderName\":\"EdgeDrive\"\r}\r}"
                },
                {
                  "id": "b0c111d3-52d6-4d3b-970c-d9385e416859",
                  "name": "GET Drive",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "558"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:18:02 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":{\r\"errorString\":\"\",\"errorCode\":0,\"entity\":{\r\"subclientPolicyId\":12,\"subclientId\":14,\"applicationId\":33,\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"clientId\":6,\"userId\":1,\"subclientName\":\"admin\",\"backupsetName\":\"admin\"\r}\r},\"edgeDriveInfo\":{\r\"contentIndexingEnabled\":true,\"hasSyncBlackListedLaptop\":false,\"capabilities\":549775216688,\"driveType\":0,\"cloudId\":0,\"dirDelim\":\"\\\\\",\"rootGUID\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"hasEdgeDriveEnabledLaptop\":false\r},\"syncWebFolder\":{\r\"_type_\":111,\"syncWebFolderId\":872129,\"syncWebFolderName\":\"EdgeDrive\"\r}\r}"
                }
              ]
            },
            {
              "name": "Create Folder by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"FOLDER_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      ""
                    ],
                    "id": "32f8808d-296d-474a-bdd8-0228b53aed21"
                  }
                }
              ],
              "_postman_id": "b60f4516-07f4-4ce0-a71d-8e3f62fcb828",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<App_FileResourceInfo name=\"{{FolderName}}\"/>",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{RootGuid}}",
                "description": "<h2>Description</h2>\nThis operation creates a new folder in Edge Drive based on the GUID of the parent folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_folder_by_folderid.htm)"
              },
              "response": [
                {
                  "id": "df2b7966-f14d-4c36-8ddf-ce9f2d5af43e",
                  "name": "POST Create Folder by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"{{FolderName}}\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{RootGuid}}"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:43:40 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"fdf49b9e9e5a4e0c8333fbaf47540be2\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Create Folder by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"SECONDFOLDER_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");"
                    ],
                    "id": "8031ef4c-c4f4-49f8-8a9e-35e4323a4f9b"
                  }
                }
              ],
              "_postman_id": "00c980d2-26d2-4fea-935e-b0203b840562",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoFolder2\",\n  \"parentPath\":\"\\\\\"\n}\n",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/action/createfolder",
                "description": "<h2>Description</h2>\nThis operation creates a new folder in Edge Drive based on the path to the parent folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_folder_by_folderpath.htm)"
              },
              "response": [
                {
                  "id": "966bc0d9-fdf2-46ef-b76a-7e205a91b35e",
                  "name": "POST Create Folder by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"{{FolderName}}\" parentPath=\"\\\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/action/createfolder"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:45:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "View Folder Properties by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");"
                    ],
                    "id": "edcfc68b-7692-44a6-91d9-992e145f9e07"
                  }
                }
              ],
              "_postman_id": "611fc3e6-64b4-49b2-b5b6-b1502827c235",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/file/{{FOLDER_GUID}}",
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with a file or folder in Edge Drive based on the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_file_properties_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "7e22f4e4-8a09-4813-b334-4f923d5ffc07",
                  "name": "GET View Folder Properties by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "589"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:46:18 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View Folder Properties by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");"
                    ],
                    "id": "68d0167c-c9c2-4080-9ab5-dd2f8d08d56b"
                  }
                }
              ],
              "_postman_id": "c0354020-c6d4-46d4-b1a3-37ba5c526014",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/action/metadata?path=\\{{FolderName}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\{{FolderName}}"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with a file or folder in Edge Drive based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_file_properties_by_filepath.htm)"
              },
              "response": [
                {
                  "id": "144a1828-3d92-4c72-ab31-764e9b8cef72",
                  "name": "View Folder Properties By Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/action/metadata?path=\\{{FolderName}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "action",
                        "metadata"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\{{FolderName}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "589"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:47:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Upload a File",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"FILE1_GUID\", jsonData.fileGUID);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");",
                      "",
                      "tests[\"Response Body contains requestId\"] = responseBody.has(\"requestId\");"
                    ],
                    "id": "08d2c723-7787-4962-8c62-b79f4eaa1717"
                  }
                }
              ],
              "_postman_id": "08af9bdf-63dd-4eb8-8708-8bdc5b05c7c4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName1}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "1"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/action/upload?uploadType=fullFile",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "fullFile"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \n<p>This operation uploads a single file to Edge Drive. The API is used for uploading files that are relatively small in size.</p> \n\n<p>For larger files (greater than 4 MB), upload the files in multiple data chunks. For more information, see <a href=http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_upload_header_request.htm data-internal=true>Initiate an Upload Session</a></p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required headers or file content in the request body.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. Example: \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \n     </div> \n    </div> <p>When a conflict occurs,</p> \n    <ul> \n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks.</li> \n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \n      <div class=\"cv-ui-codesnippet\"> \n       <div class=\"cv-text-codesnippet\"> \n        <p>/drive/file/action/upload?uploadType=fullFile&amp;forceRestart=true</p> \n       </div> \n      </div></li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>413</td> \n   <td>Request Entity Too Large</td> \n   <td>Upload attempted for a large file (greater than 4MB). For large files, upload the files in multiple data chunks. For more information, see <a href=\"article?p=features/rest_api/operations/post_drive_upload_header_request.htm\" data-internal=\"true\">Initiate an Upload Session</a>.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_full_upload.htm)"
              },
              "response": [
                {
                  "id": "f437f875-b261-432c-a57d-93cf3aef3fca",
                  "name": "POST Upload a File",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName1}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "1"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/action/upload?uploadType=fullFile",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "fullFile"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "155"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:48:02 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"15322342464093331661621517021214173118130\",\"fileGUID\":\"425a85d118e343f0b7119236f7552b97\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks (1)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RequestId\", jsonData.requestId);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains requestId\"] = responseBody.has(\"requestId\");"
                    ],
                    "id": "42a82626-7a9b-4f60-8dce-f2f2d0791d63"
                  }
                }
              ],
              "_postman_id": "44ddb483-2fba-4e24-ab78-8cdcb54f641b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName2}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{SecondFileSize}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "0"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "forceRestart",
                      "value": "true"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to initiate the upload session for uploading multiple file chunks to Edge Drive. Optionally, you can also send the first file chunk along with the request.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. For example: \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \n     </div> \n    </div> <p>When a conflict occurs,</p> \n    <ul> \n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks. \n      <div class=\"cv-ui-codesnippet\"> \n       <div class=\"cv-text-codesnippet\"> \n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;requestId=&quot;13213022088234198160108125214183230586134182&quot;</p> \n       </div> \n      </div></li> \n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \n      <div class=\"cv-ui-codesnippet\"> \n       <div class=\"cv-text-codesnippet\"> \n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;forceRestart=true</p> \n       </div> \n      </div></li> \n    </ul> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_upload_header_request.htm)"
              },
              "response": [
                {
                  "id": "44feee63-6b57-4524-9b02-35c98af365f2",
                  "name": "POST Upload a File in Chunks (1)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName2}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{SecondFileSize}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "0"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "forceRestart",
                          "value": "true"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "109"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:49:52 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"16318591321498902423322210014311314149160\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks (2)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"FILE2_GUID\", jsonData.fileGUID);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");"
                    ],
                    "id": "e9f0ae0a-3990-49ed-a8b4-ef5370d722ef"
                  }
                }
              ],
              "_postman_id": "808fbae1-0a9d-4786-be66-19d9c065046b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "1"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/action/upload?uploadType=chunkedFile&requestId={{RequestId}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "requestId",
                      "value": "{{RequestId}}"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\n<p>Use this operation to upload a chunk or portion of the file data to Edge Drive.</p>\n\n<p>Before you run this operation, make sure to initiate the upload session to Edge Drive. For details, see <a href=http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_upload_header_request.htm data-internal=true>POST Upload Session to Edge Drive</a>.</p>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_upload_chunk_request.htm)"
              },
              "response": [
                {
                  "id": "3029a95c-b8fb-481c-8cb4-adaf20fceda5",
                  "name": "POST Upload a File in Chunks (2)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "1"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/action/upload?uploadType=chunkedFile&requestId={{RequestId}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "requestId",
                          "value": "{{RequestId}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "99"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:50:35 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":34,\"fileGUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Download a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "78fd0d13-d5e0-4374-aec7-1e811ae43e65"
                  }
                }
              ],
              "_postman_id": "812d037d-747c-419d-b806-943d8c7211b6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/action/download",
                "description": "<h2>Description</h2>\nThis operation downloads a file in Edge Drive based on the GUID of the file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Download operation is not allowed. This can happen if you attempt to download a folder.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_download_by_id.htm)"
              },
              "response": [
                {
                  "id": "e2515f20-deaa-4394-9c68-060ea20c91f6",
                  "name": "GET Download a File By ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:52:39 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download a File by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "b4e40857-8cef-4c1b-b958-7911b8b8c03c"
                  }
                }
              ],
              "_postman_id": "d74658dc-e49e-4b08-900c-b4708633e4f4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/action/download?path=\\DemoFolder\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "action",
                    "download"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFolder\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation downloads a file in Edge Drive based on the file path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Download operation is not allowed. This can happen if you attempt to download a folder.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_download_by_path.htm)"
              },
              "response": [
                {
                  "id": "11a7369b-2c86-4fe6-ad31-f3009af68001",
                  "name": "GET Download a File by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/action/download?path=\\DemoFolder\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "action",
                        "download"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFolder\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:53:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Preview a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "850672b8-dfe2-4f9e-8d8b-cc20360a37d6"
                  }
                }
              ],
              "_postman_id": "3c25fa6a-6802-48ad-8be6-e281a5cc817e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/action/preview",
                "description": "<h2>Description</h2>\r\n<p>This operation returns the preview of a file in Edge Drive based on the file ID.</p>\r\n\r\n<p>Preview is currently supported for all images and Microsoft Office file types.</p>\r\n\r\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm>Changing the File Size Limit for Preview</a>.</p>\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>204</td> \r\n   <td>No Content</td> \r\n   <td>Preview is not available for the file.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_preview_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "8548371a-bbce-400e-890e-d9b31456929b",
                  "name": "GET Preview a File by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Rename a File by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "662d2dbc-ff05-4428-85a7-fb4b246d0cc9"
                  }
                }
              ],
              "_postman_id": "698e19ee-2516-40f6-9d49-84f2de713a0a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoFolder\\\\DemoFile1.doc\",\n  \"name\":\"DemoFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/action/rename",
                "description": "<h2>Description</h2>\nThis operation renames a file or a folder in Edge Drive based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_folder_rename.htm)"
              },
              "response": [
                {
                  "id": "8a076af7-c3ac-4102-a902-29f3eee40af0",
                  "name": "POST Rename a File by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoFolder\\DemoFile1.doc\" name=\"DemoFile1Renamed.doc\" />"
                    },
                    "url": "{{ServerUrl}}/drive/action/rename"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:04:32 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Rename a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "189996d2-7771-4ac9-9cc5-0831bf494f45"
                  }
                }
              ],
              "_postman_id": "7b1fa39c-1367-44a6-b47f-71bf01677619",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/action/rename",
                "description": "<h2>Description</h2>\nThis operation renames a file or a folder in Edge Drive based on the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_drive_folder_rename.htm)"
              },
              "response": [
                {
                  "id": "6790095a-641b-4b8b-829f-b01068fa923b",
                  "name": "PUT Rename a File by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoFile1Renamed.doc\" />"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/action/rename"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:55:29 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Add Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "7822b74f-bc53-4f64-be7f-389faa69d3c7"
                  }
                }
              ],
              "_postman_id": "c67a7fb5-6282-425b-aca5-15d7bebf7b11",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to add new custom properties or modify existing custom properties to individual or multiple files and folders in Edge Drive based on the GUID of the file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the custom property is not provided in the request body or the GUID provided in request is not of the file or folder. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_custom_prop_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "ca11e157-0e4d-4ab4-944e-d00db54be6a9",
                  "name": "POST Add Custom Properties",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_CustomProperties>\r\n<customProps>\r\n  <nameValues name=\"testproperty1\" value=\"testvalue1\"/>\r\n  <nameValues name=\"testproperty2\" value=\"testvalue2\"/>\r\n</customProps>\r\n</App_CustomProperties>"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:56:08 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GenericResp />"
                }
              ]
            },
            {
              "name": "View Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "tests[\"Response Body Contains Custom Property\"] = responseBody.has(\"testproperty1\");",
                      "tests[\"Response Body contains props\"] = responseBody.has(\"props\");",
                      "tests[\"Response Body contains Property Value\"] = responseBody.has(\"testvalue1\");"
                    ],
                    "id": "1415e2db-0aa1-41f2-a1f3-9d550c511806"
                  }
                }
              ],
              "_postman_id": "31651b28-6936-4eed-a44c-e6bc276af494",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/properties?propertyFilter=testproperty1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "{{FILE1_GUID}}",
                    "properties"
                  ],
                  "query": [
                    {
                      "key": "propertyFilter",
                      "value": "testproperty1"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to list specific or all custom properties of a File or Folder in Edge Drive based on the GUID of the file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file or folder. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_custom_prop_filter_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "6001610a-465d-47e2-b3b3-1ded64414950",
                  "name": "GET View Custom Properties",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/properties?propertyFilter=testproperty1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "{{FILE1_GUID}}",
                        "properties"
                      ],
                      "query": [
                        {
                          "key": "propertyFilter",
                          "value": "testproperty1"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "131"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:57:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"error\":{\r\"errorCode\":200\r},\"props\":{\r\"customProps\":{\r\"nameValues\":[\r{\r\"name\":\"testproperty1\",\"values\":[\r\"testvalue1\"\r]\r}\r]\r}\r}\r}"
                }
              ]
            },
            {
              "name": "Delete Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "5ddb6078-52f9-4447-adfb-9517d6dccc38"
                  }
                }
              ],
              "_postman_id": "7389ed2b-5ef8-42a3-9b29-2e8b430d4a0a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{FILE1_GUID}}\"\r\n      }\r\n   ],\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/properties",
                "description": "<h2>Description</h2>\nUse this operation to delete the custom properties of individual or multiple files and folders in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the custom property is not provided in the request body or the GUID provided in request is not of the file or folder. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_custom_property.htm)"
              },
              "response": [
                {
                  "id": "3410de41-159a-489d-b361-80baab6c6872",
                  "name": "DELETE Delete Custom Properties",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_CustomPropertiesReq>\r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/>\r\n<customProps> \r\n  <nameValues name=\"testproperty1\" value=\"testvalue1\"/>\r\n  <nameValues name=\"testproperty2\" value=\"testvalue2\"/>\r\n</customProps> \r\n</Api_CustomPropertiesReq>"
                    },
                    "url": "{{ServerUrl}}/drive/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "32"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:11 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_CustomPropertiesRespList />"
                }
              ]
            },
            {
              "name": "Add Tags",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "1776ed58-617a-4976-92b9-dfbd5f9ccd09"
                  }
                }
              ],
              "_postman_id": "3abd3234-5845-4e73-aef8-fa4aa9458475",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"gold,silver\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{FILE1_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/tags",
                "description": "<h2>Description</h2>\nUse this operation to add your own tags to one or more files and folders in Edge Drive based on the GUID of the file or folder.\n\nTag names can be a combination of letters and numbers. Letters are case-insensitive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Request is missing required request body or file and folder information is not provided in the request body.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_tag_by_id.htm)"
              },
              "response": [
                {
                  "id": "6b3ce728-7116-4a7a-9c2c-6c1d3e7470ac",
                  "name": "POST Add Tags",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"gold,silver\"> \r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/drive/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "20"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_TagsRespList />"
                }
              ]
            },
            {
              "name": "List Tags",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "tests[\"Response Body Contains Tags\"] = responseBody.has(\"tags\");"
                    ],
                    "id": "0259d466-dc5d-49bb-90ee-a599505d40f9"
                  }
                }
              ],
              "_postman_id": "72986c59-8e98-47fb-a489-c03426590df1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/tags",
                "description": "<h2>Description</h2>\nThis operation returns the list of tags assigned to a file or folder in Edge Drive based on the GUID of the file or folder .\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or GUID provided in request is not of the file or folder.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_tag_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "c7dbd913-fb8e-4d98-8f2f-b80fe765e196",
                  "name": "GET List Tags",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "52"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:59:25 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"tags\":\"gold,silver\",\"error\":{\r\"errorCode\":200\r}\r}"
                }
              ]
            },
            {
              "name": "Delete Tags",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "89fab1e9-0567-4227-be1d-bcbf2d8519f5"
                  }
                }
              ],
              "_postman_id": "643c6b1d-a366-4c51-91df-ccffb70204e7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"gold,silver\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{FILE1_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/tags",
                "description": "<h2>Description</h2>\nUse this operation to delete tags from one or more files and folders in Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required request body or the file or folder information is not provided in the request body.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_tag.htm)"
              },
              "response": [
                {
                  "id": "f9667750-1517-4470-9f8b-a8954411b2ea",
                  "name": "DELETE Delete Tags",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"gold,silver\"> \r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/drive/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "20"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:00:08 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_TagsRespList />"
                }
              ]
            },
            {
              "name": "View File Versions by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"versionId\", jsonData.fileResources[0].versionGUID);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "tests[\"Response Body contains parentPath\"] = responseBody.has(\"\\\\DemoFolder\");",
                      "tests[\"Response Body contains fileResources\"] = responseBody.has(\"fileResources\");",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      ""
                    ],
                    "id": "d6773664-e5b1-45e0-8280-d8a5eea3c2ec"
                  }
                }
              ],
              "_postman_id": "84a1f6a6-56d6-40f0-a404-cdebd1dce712",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/versions",
                "description": "<h2>Description</h2>\nUse this operation to view the first 50 versions of a file in an Edge Drive based on the GUID of the file. The versions are listed in descending order so that the latest version is the top result.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_file_versions_by_id.htm)"
              },
              "response": [
                {
                  "id": "5b323565-d322-4d77-9787-8211f39d2b4d",
                  "name": "GET View File Versions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/versions"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "529"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:01:29 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\DemoFolder\",\"GUID\":\"425a85d118e343f0b7119236f7552b97\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fdownload\",\"directory\":false,\"versionGUID\":\"b10b246aca4efefc399075373c0ec04f\",\"path\":\"\\\\DemoFolder\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"name\":\"DemoFile1.doc\"\r}\r]\r}"
                }
              ]
            },
            {
              "name": "View File Versions by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"versionId\", jsonData.fileResources[0].versionGUID);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 202;",
                      "",
                      "tests[\"Response Body contains parentPath\"] = responseBody.has(\"\\\\DemoFolder\");",
                      "tests[\"Response Body contains fileResources\"] = responseBody.has(\"fileResources\");",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");"
                    ],
                    "id": "39b6bb75-bfa3-406c-b9f3-696aebaf6446"
                  }
                }
              ],
              "_postman_id": "a3759857-00bf-4e54-afbd-91876fd21d69",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/versions?path=\\{{FolderName}}\\DemoFile1Renamed.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "versions"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\{{FolderName}}\\DemoFile1Renamed.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to view the first 50 versions of a file in an Edge Drive based on the file path. The versions are listed in descending order so that the latest version is the top result.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_file_versions_by_path.htm)"
              },
              "response": [
                {
                  "id": "6dff0911-5b77-4d55-960f-799648f8db98",
                  "name": "GET View File Versions by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/file/versions?path=\\{{FolderName}}\\DemoFile1Renamed.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "file",
                        "versions"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\{{FolderName}}\\DemoFile1Renamed.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "529"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:02:43 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\DemoFolder\",\"GUID\":\"425a85d118e343f0b7119236f7552b97\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fdownload\",\"directory\":false,\"versionGUID\":\"b10b246aca4efefc399075373c0ec04f\",\"path\":\"\\\\DemoFolder\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"name\":\"DemoFile1.doc\"\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Download a File Version",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "0391ef53-cdb8-4c2d-b993-ad26a0bcfea9"
                  }
                }
              ],
              "_postman_id": "b82594e2-3fa3-4326-a2bd-a391f00a27fb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/file/version/{{versionId}}/action/download",
                "description": "<h2>Description</h2>\nThis operation downloads a specific version of a file in Edge Drive based on the GUID of the file version.\n\n<b>Note:</b> Downloading a folder is currently not supported using this operation.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Download operation is not allowed. This can happen if you attempt to download a folder.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_download_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "a285adf0-447a-42f5-b7d6-0f8ee66a9d77",
                  "name": "GET Download a File Version",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/file/version/{{versionId}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1Renamed.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:03:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Move a File by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "05246300-bed6-472b-b4b5-6829ccb467d3"
                  }
                }
              ],
              "_postman_id": "9f7475c7-1b27-4d6e-a46d-18acc5fea0b2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoFolder\\\\DemoFile2.doc\",\n  \"parentPath\":\"\\\\\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/action/move",
                "description": "<h2>Description</h2>\nThis operation moves a file or folder, based on the file or folder path, to another folder within Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_folder_move.htm)"
              },
              "response": [
                {
                  "id": "1335d8cc-eb62-4b80-b8e7-09f6987ebf0a",
                  "name": "POST Move a File by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoFolder\\DemoFile2.doc\" parentPath=\"\\\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:18:10 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Move a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "fc0ae5f3-51c5-4f54-824d-54d90b66fce5"
                  }
                }
              ],
              "_postman_id": "50c612eb-df69-49bb-9b01-c58a954b2e9d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parentGuid\":\"{{RootGuid}}\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE2_GUID}}/action/move",
                "description": "<h2>Description</h2>\nThis operation moves a file or folder, based on the file or folder GUID, to another folder within Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_drive_folder_move.htm)"
              },
              "response": [
                {
                  "id": "9ff7cc9c-c8fe-4a71-8e54-f7a8026f40fd",
                  "name": "PUT Move a File by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo parentGuid=\"{{RootGuid}}\" />"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE2_GUID}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:07:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Search Folder Contents by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResources\"] = responseBody.has(\"fileResources\");"
                    ],
                    "id": "e329192c-bf74-406d-9ae6-89dbe07af0e1"
                  }
                }
              ],
              "_postman_id": "4e448155-80da-4850-a905-901dcf61e072",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "text/xml"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/folder/{{RootGuid}}/action/search",
                "description": "<h2>Description</h2>\nUse this operation to search the contents of a folder and its subfolders based on the folder GUID. The API returns the contents that match a specific search criteria.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>GUID is not provided in the request </li> \n     <li>GUID provided in the request is invalid</li> \n     <li>GUID provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_search_by_id.htm)"
              },
              "response": [
                {
                  "id": "c9d4da28-3af4-415c-ad28-1d77d3cbcea8",
                  "name": "POST Search Folder Contents by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "text/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/folder/{{RootGuid}}/action/search"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:20:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Search Folder Contents by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResources\"] = responseBody.has(\"fileResources\");"
                    ],
                    "id": "46da2cca-bb4d-45c3-9930-0b197be6b644"
                  }
                }
              ],
              "_postman_id": "bfd6998e-3953-44c8-95f6-32f782ee2177",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "text/xml"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/folder/{{RootGuid}}/action/search",
                "description": "<h2>Description</h2>\nUse this operation to search the contents of a folder and its subfolders based on the folder path. The API returns the contents that match a specific search criteria.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>Path is not provided in the request </li> \n     <li>Path provided in the request is invalid</li> \n     <li>Path provided in the request is for a file</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Path provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_search_by_path.htm)"
              },
              "response": [
                {
                  "id": "8ef0a2bd-ff11-47e7-b646-761f2be344ed",
                  "name": "POST Search Folder Contents by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "text/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/action/search?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "action",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:21:28 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "List Folder Contents by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResources\"] = responseBody.has(\"fileResources\");"
                    ],
                    "id": "e9711d4f-27f3-470f-af78-0ff6e75a74ea"
                  }
                }
              ],
              "_postman_id": "f5a41147-7ce5-425e-84ae-d1ffad0358f5",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/folder/{{RootGuid}}/action/list",
                "description": "<h2>Description</h2>\nUse this operation to list the contents of a folder based on the folder GUID. The result does not include the contents of subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>GUID is not provided in the request </li> \n     <li>GUID provided in the request is invalid</li> \n     <li>GUID provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_list_by_id.htm)"
              },
              "response": [
                {
                  "id": "1a9b61c2-c73b-4d8c-9f49-db69b6c7c111",
                  "name": "POST List Folder Contents by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/folder/{{RootGuid}}/action/list"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:22:24 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "List Folder Contents by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResources\"] = responseBody.has(\"fileResources\");"
                    ],
                    "id": "6895c389-8076-4697-b2a5-47adc2942bd6"
                  }
                }
              ],
              "_postman_id": "62dfa7ca-e9c6-487b-9359-caede878e483",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/action/list?path=\\",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "action",
                    "list"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to list the contents of a folder based on the folder path. The result does not include the contents of subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>Path is not provided in the request </li> \n     <li>Path provided in the request is invalid</li> \n     <li>Path provided in the request is for a file</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Path provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_list_by_path.htm)"
              },
              "response": [
                {
                  "id": "631ad5b4-e4da-4cfb-95a2-20cd7503188f",
                  "name": "POST List Folder Contents by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/action/list?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "action",
                        "list"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:24:36 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fdrive\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Create a Discussion",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "",
                      "postman.setEnvironmentVariable(\"discussionId\", jsonData.discussion.discussionId);"
                    ],
                    "id": "d3b881d2-09f8-4a66-a7fb-2ee41cd05df9"
                  }
                }
              ],
              "_postman_id": "b990aa02-a82b-4388-803f-bd9df93f739f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"entityGUID\": \"{{FILE1_GUID}}\",\n  \"comments\": [\n    {\n      \"content\": \"New discussion\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion",
                "description": "<h2>Description</h2>\nThis operation creates a new discussion for a file or folder in Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_create_discussion.htm)"
              },
              "response": [
                {
                  "id": "6aab20aa-3b3d-406c-a3a3-93264ad9481b",
                  "name": "Create a Discussion",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"entityGUID\": \"{{FILE1_GUID}}\",\n\t\"comments\": [\n\t\t{\n\t\t\t\"content\": \"New discussion\"\n\t\t}\n\t]\n}"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "260",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 15:44:50 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":1,\"created\":1506008240,\"entityGUID\":\"911fa32c966949ec813a8d650180f691\",\"modified\":1506008240,\"nbComments\":3,\"status\":1,\"owner\":{\r\"newName\":\"admin\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r\r]\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Add a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"commentId\", jsonData.comment.commentId);",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ],
                    "id": "9bcaf438-21f0-48c2-8588-0d579747a64c"
                  }
                }
              ],
              "_postman_id": "d24dfb52-a333-4732-86f9-efff9b33ad8b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"New comment\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment",
                "description": "<h2>Description</h2>\nThis operation adds a comment to an existing discussion for a file or folder in Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_add_comment.htm)"
              },
              "response": [
                {
                  "id": "5cf29edb-be77-4d90-98c3-63d251813fce",
                  "name": "Add a Comment",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"content\": \"New comment\"\n}"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "221",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 15:58:22 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":2,\"created\":1506009502,\"commentId\":13,\"modified\":1506009502,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View Details of a Discussion",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                      ""
                    ],
                    "id": "8dbc1621-dec1-4e73-a93b-b146c21e581a"
                  }
                }
              ],
              "_postman_id": "37c79fbc-fa69-40af-81f2-ed41cf277b4e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "SORT-DIRECTION",
                    "value": "0"
                  },
                  {
                    "key": "PAGE_SIZE",
                    "value": "20"
                  },
                  {
                    "key": "NBREPLIES",
                    "value": "10"
                  },
                  {
                    "key": "LAST-COMMENT-ID",
                    "value": "100"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion?depth=1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "{{FILE1_GUID}}",
                    "Discussion"
                  ],
                  "query": [
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \nThis operation retrieves the details of a discussion for a file or folder in Edge Drive, based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_discussion.htm)"
              },
              "response": [
                {
                  "id": "50b94b47-9622-4812-a0fe-321e065418cd",
                  "name": "View Details of a Discussion in Asc Order",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "PAGE_SIZE",
                        "value": "20"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "0"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=0",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "0"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "1633",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 18:02:49 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":4,\"created\":1506016677,\"entityGUID\":\"aafc531bebe5414692367973b9f7a89f\",\"modified\":1506016677,\"nbComments\":7,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016677,\"commentId\":18,\"modified\":1506016677,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016694,\"commentId\":19,\"modified\":1506016694,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016706,\"commentId\":20,\"modified\":1506016706,\"content\":\"New comment2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016711,\"commentId\":21,\"modified\":1506016711,\"content\":\"New comment3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016716,\"commentId\":22,\"modified\":1506016716,\"content\":\"New discussion2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016845,\"commentId\":23,\"modified\":1506016845,\"content\":\"New comment4\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016927,\"commentId\":24,\"modified\":1506016927,\"content\":\"New discussion3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r}\r}"
                },
                {
                  "id": "d883980d-8a35-4987-a8fc-51c1cbc386ed",
                  "name": "View Details of a Discussion in Desc Order",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "PAGE_SIZE",
                        "value": "20"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=0",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "0"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "1633",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 18:05:27 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":4,\"created\":1506016677,\"entityGUID\":\"aafc531bebe5414692367973b9f7a89f\",\"modified\":1506016677,\"nbComments\":7,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016927,\"commentId\":24,\"modified\":1506016927,\"content\":\"New discussion3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016845,\"commentId\":23,\"modified\":1506016845,\"content\":\"New comment4\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016716,\"commentId\":22,\"modified\":1506016716,\"content\":\"New discussion2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016711,\"commentId\":21,\"modified\":1506016711,\"content\":\"New comment3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016706,\"commentId\":20,\"modified\":1506016706,\"content\":\"New comment2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016694,\"commentId\":19,\"modified\":1506016694,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016677,\"commentId\":18,\"modified\":1506016677,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r}\r}"
                }
              ]
            },
            {
              "name": "View Details of a Discussion Id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains entityGUID\"] = responseBody.has(\"entityGUID\");",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                      ""
                    ],
                    "id": "f8ec2f73-d228-456e-8950-cee60b991e9f"
                  }
                }
              ],
              "_postman_id": "def079b8-a575-49a5-8f00-90f0ae2ee2cf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "SORT-DIRECTION",
                    "value": "0"
                  },
                  {
                    "key": "PAGE_SIZE",
                    "value": "20"
                  },
                  {
                    "key": "NBREPLIES",
                    "value": "10"
                  },
                  {
                    "key": "LAST-COMMENT-ID",
                    "value": "100"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "{{FILE1_GUID}}",
                    "Discussion",
                    "{{discussionId}}"
                  ],
                  "query": [
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \nThis operation retrieves the properties of a discussion for a file or folder in Edge Drive, based on the discussion ID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_discussion_by_id.htm)"
              },
              "response": [
                {
                  "id": "ae9a2376-ff10-4fbd-bfbf-a432c916ae6b",
                  "name": "View Details of a Discussion in Asc Order",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "PAGE_SIZE",
                        "value": "20"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "0"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=0",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "0"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "1633",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 18:02:49 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":4,\"created\":1506016677,\"entityGUID\":\"aafc531bebe5414692367973b9f7a89f\",\"modified\":1506016677,\"nbComments\":7,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016677,\"commentId\":18,\"modified\":1506016677,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016694,\"commentId\":19,\"modified\":1506016694,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016706,\"commentId\":20,\"modified\":1506016706,\"content\":\"New comment2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016711,\"commentId\":21,\"modified\":1506016711,\"content\":\"New comment3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016716,\"commentId\":22,\"modified\":1506016716,\"content\":\"New discussion2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016845,\"commentId\":23,\"modified\":1506016845,\"content\":\"New comment4\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016927,\"commentId\":24,\"modified\":1506016927,\"content\":\"New discussion3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r}\r}"
                },
                {
                  "id": "ebe33f7e-03b2-4c8e-bbf6-35306bce0b9a",
                  "name": "View Details of a Discussion in Desc Order",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "PAGE_SIZE",
                        "value": "20"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}?depth=0",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "0"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "1633",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 18:05:27 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"discussion\":{\r\"entityType\":136,\"discussionId\":4,\"created\":1506016677,\"entityGUID\":\"aafc531bebe5414692367973b9f7a89f\",\"modified\":1506016677,\"nbComments\":7,\"status\":1,\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"comments\":[\r{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016927,\"commentId\":24,\"modified\":1506016927,\"content\":\"New discussion3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016845,\"commentId\":23,\"modified\":1506016845,\"content\":\"New comment4\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016716,\"commentId\":22,\"modified\":1506016716,\"content\":\"New discussion2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016711,\"commentId\":21,\"modified\":1506016711,\"content\":\"New comment3\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016706,\"commentId\":20,\"modified\":1506016706,\"content\":\"New comment2\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016694,\"commentId\":19,\"modified\":1506016694,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":4,\"created\":1506016677,\"commentId\":18,\"modified\":1506016677,\"content\":\"New discussion\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r}\r]\r}\r}"
                }
              ]
            },
            {
              "name": "View Details of a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      ""
                    ],
                    "id": "4c4006f0-a874-400f-b327-02b4315536fb"
                  }
                }
              ],
              "_postman_id": "e7cc8042-f82a-4b82-94ce-e8b7fb92da09",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "PAGE_SIZE",
                    "value": "20"
                  },
                  {
                    "key": "SORT-DIRECTION",
                    "value": "0"
                  },
                  {
                    "key": "NBREPLIES",
                    "value": "10"
                  },
                  {
                    "key": "LAST-COMMENT-ID",
                    "value": "36"
                  }
                ],
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                "description": "<h2>Description</h2> \nThis operation retrieves the details of a comment for a file or folder in Edge Drive, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_comment.htm)"
              },
              "response": [
                {
                  "id": "ac85ce37-b34d-4d6b-804a-1019eeda39c7",
                  "name": "View Details of a Comment With No Comments",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "PAGE_SIZE",
                        "value": "20"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "36"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "83",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 19:41:57 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"error\":{\r\"errorMessage\":\"There is no comment with given id \",\"errorCode\":404\r}\r}"
                }
              ]
            },
            {
              "name": "Add a Reply to a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "",
                      "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                      "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                    ],
                    "id": "88f64d6b-dcd6-4816-8f10-4c4b3e38cc8f"
                  }
                }
              ],
              "_postman_id": "8c525326-098e-4bb1-a4ca-5a708b86fbdf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"This is a reply to comment: {{commentId}}\",\n  \"parentComment\": {\n    \"commentId\": {{commentId}}\n  }\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment",
                "description": "<h2>Description</h2> \r\nThis operation adds a comment to an existing discussion for a file or folder in Edge Drive.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>401</td> \r\n   <td>Unauthorized</td> \r\n   <td>The request did not include an authentication token or the authentication token was expired.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>412</td> \r\n   <td>Precondition Failed</td> \r\n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \r\n  </tr> \r\n </tbody> \r\n</table>"
              },
              "response": [
                {
                  "id": "96c497cb-c426-417f-b3b5-b63d914e9719",
                  "name": "Add a Reply to a Comment",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"content\": \"This is a reply to comment: {{commentId}}\",\n\t\"parentComment\": {\n\t\t\"commentId\": {{commentId}}\n\t}\n}"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "276",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 20:32:12 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comment\":{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":10,\"created\":1506025932,\"commentId\":53,\"modified\":1506025932,\"content\":\"This is a reply to comment: 51\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":51\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View Number of Replies for a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "",
                      "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                      "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");",
                      "tests[\"Response Body Contains comments\"] = responseBody.has(\"comments\");",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "",
                      ""
                    ],
                    "id": "eaacff39-c77e-4c34-8441-94c16bdef08e"
                  }
                }
              ],
              "_postman_id": "a84ef39a-2e26-499a-abdd-ec88aae02188",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "SORT-DIRECTION",
                    "value": "0"
                  },
                  {
                    "key": "PAGE_SIZE",
                    "value": "20"
                  },
                  {
                    "key": "NBREPLIES",
                    "value": "10"
                  },
                  {
                    "key": "LAST-COMMENT-ID",
                    "value": "100"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "file",
                    "{{FILE1_GUID}}",
                    "Discussion",
                    "{{discussionId}}",
                    "Comment",
                    "{{commentId}}",
                    "Replies"
                  ],
                  "query": [
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \nThis operation retrieves the number of replies for a comment in a discussion for a file or folder in Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_comment_replies.htm)"
              },
              "response": [
                {
                  "id": "59c9daf7-212d-4c3d-a464-653ed9a76c5e",
                  "name": "View Number of Replies for a Comment",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "SORT-DIRECTION",
                        "value": "0"
                      },
                      {
                        "key": "PAGE_SIZE",
                        "value": "20"
                      },
                      {
                        "key": "NBREPLIES",
                        "value": "10"
                      },
                      {
                        "key": "LAST-COMMENT-ID",
                        "value": "100"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}/Replies?depth=1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "file",
                        "{{FILE1_GUID}}",
                        "Discussion",
                        "{{discussionId}}",
                        "Comment",
                        "{{commentId}}",
                        "Replies"
                      ],
                      "query": [
                        {
                          "key": "depth",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "1241",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 28 Sep 2017 19:18:04 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comments\":[\r{\r\"depth\":0,\"nbReplies\":4,\"discussionId\":13,\"created\":1506626165,\"commentId\":121,\"modified\":1506626165,\"content\":\"New comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"replies\":[\r{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626235,\"commentId\":125,\"modified\":1506626235,\"content\":\"This is a reply to comment: 121\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":121\r}\r},{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626227,\"commentId\":124,\"modified\":1506626227,\"content\":\"This is a reply to comment: 121\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":121\r}\r},{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626217,\"commentId\":123,\"modified\":1506626217,\"content\":\"This is a reply to comment: 121\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":121\r}\r},{\r\"depth\":1,\"nbReplies\":0,\"discussionId\":13,\"created\":1506626208,\"commentId\":122,\"modified\":1506626208,\"content\":\"This is a reply to comment: 121\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r},\"parentComment\":{\r\"commentId\":121\r}\r}\r]\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Edit a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body Contains discussionId\"] = responseBody.has(\"discussionId\");",
                      "",
                      "tests[\"Response Body Contains commentId\"] = responseBody.has(\"commentId\");",
                      "",
                      "tests[\"Response Body Contains depth\"] = responseBody.has(\"depth\");",
                      "tests[\"Response Body Contains nbReplies\"] = responseBody.has(\"nbReplies\");"
                    ],
                    "id": "fe1bcd77-e92a-460d-9207-baa78222f4fc"
                  }
                }
              ],
              "_postman_id": "a5deb3ad-5afa-431a-93fa-250c98e8fff2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"content\": \"Edited Comment\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                "description": "<h2>Description</h2> \r\nThis operation edits a comment of an existing discussion for a file or folder in Edge Drive.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>401</td> \r\n   <td>Unauthorized</td> \r\n   <td>The request did not include an authentication token or the authentication token was expired.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>412</td> \r\n   <td>Precondition Failed</td> \r\n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_drive_edit_comment.htm)"
              },
              "response": [
                {
                  "id": "81b79c8e-2d80-4f4b-befb-0bcdafa78538",
                  "name": "Edit a Comment",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n\t\"content\": \"Edited Comment\"\n}"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "225",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 20:27:13 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"comment\":{\r\"depth\":0,\"nbReplies\":0,\"discussionId\":10,\"created\":1506025477,\"commentId\":51,\"modified\":1506025633,\"content\":\"Edited Comment\",\"owner\":{\r\"newName\":\"Administrator\",\"userName\":\"admin\",\"userId\":1\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Delete a Comment",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ],
                    "id": "eeaf2c57-ba95-43f4-ad0b-5b008b923d24"
                  }
                }
              ],
              "_postman_id": "1138b779-de84-4312-ae90-a2552e658075",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}",
                "description": "<h2>Description</h2> \nThis operation deletes a comment for a file or folder in Edge Drive, based on the discussion and comment IDs.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>401</td> \n   <td>Unauthorized</td> \n   <td>The request did not include an authentication token or the authentication token was expired.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \n  </tr> \n  <tr> \n   <td>412</td> \n   <td>Precondition Failed</td> \n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_comment.htm)"
              },
              "response": [
                {
                  "id": "46b09158-65f4-4863-aa05-33b9b1e2a73b",
                  "name": "Delete a Comment",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}/Comment/{{commentId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "16",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 20:16:51 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Delete a Discussion",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;"
                    ],
                    "id": "262b6619-77f1-43d8-8814-8b13c94a8c37"
                  }
                }
              ],
              "_postman_id": "b1882ea8-e918-4e61-a386-b6cd79b2d13d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}",
                "description": "<h2>Description</h2>\r\nThis operation deletes a discussion for a file or folder in Edge Drive, based on the discussion ID.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>401</td> \r\n   <td>Unauthorized</td> \r\n   <td>The request did not include an authentication token or the authentication token was expired.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user did not&nbsp; have permission to access the requested resource.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>412</td> \r\n   <td>Precondition Failed</td> \r\n   <td>Prerequisites are not met. For example, MongoDB database is not installed.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_discussion.htm)"
              },
              "response": [
                {
                  "id": "ca19960e-7035-41b6-81ee-324dddeff65d",
                  "name": "Delete a Discussion",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "{{Accept}}"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}/Discussion/{{discussionId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "4",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Thu, 21 Sep 2017 20:18:12 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [],
                  "responseTime": null,
                  "body": "{\r\r}"
                }
              ]
            },
            {
              "name": "Delete a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      ""
                    ],
                    "id": "86574863-3904-42e3-acbd-652a331d6ebc"
                  }
                }
              ],
              "_postman_id": "8eb4b469-5fda-42dd-a021-a603dcf81156",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in Edge Drive using the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_folder.htm)"
              },
              "response": [
                {
                  "id": "050bcc75-53da-4b31-b272-22b73b7e71be",
                  "name": "DELETE Delete a File By ID",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE1_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:04:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete a Folder by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "f62c7e93-2bf7-44ba-b5d2-ec05218510a8"
                  }
                }
              ],
              "_postman_id": "ff8e4484-1ae3-4632-9407-7f8fdca1730a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoFolder2\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/action/delete",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in Edge Drive based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_folder_delete.htm)"
              },
              "response": [
                {
                  "id": "fce792ad-6d06-435e-a6bf-67d5df58fc41",
                  "name": "POST Delete a File By Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoFolder\\DemoFile1Renamed.doc\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/action/delete"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:06:20 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      ""
                    ],
                    "id": "e7600876-3978-475c-b30f-bc5c594b39dc"
                  }
                }
              ],
              "_postman_id": "3b9f211e-2579-4f9e-96d5-64895069908a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FOLDER_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in Edge Drive using the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_folder.htm)"
              },
              "response": [
                {
                  "id": "33ef0619-8327-4acb-b990-7a49da5d5703",
                  "name": "DELETE Delete Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:25:27 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete File2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "b384362f-ff02-4841-a640-c60f17bedaf6"
                  }
                }
              ],
              "_postman_id": "81f96d01-2423-4864-8d18-feb1eb13b695",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FILE2_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in Edge Drive using the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_folder.htm)"
              },
              "response": [
                {
                  "id": "70225d27-5049-4bde-9413-96de45df8e0d",
                  "name": "DELETE Delete File2",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FILE2_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:26:07 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Logout",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "9cc92009-f551-4258-8a1d-c50eb3df7f9b"
                  }
                }
              ],
              "_postman_id": "c55c8fd3-7703-40e9-aa5e-5d530a1eda98",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Logout",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "553c3eb9-7fc0-41ea-a6fe-7d92d7e85335",
                  "name": "POST Logout",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Logout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "plain",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "15"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:26:33 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "User logged out"
                }
              ]
            }
          ],
          "_postman_id": "f839284f-9168-40e5-99a2-76638619ab17",
          "_postman_isSubFolder": true
        },
        {
          "name": "File and Folder Operations for Shares",
          "item": [
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"TOKEN\", jsonData.token);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains userGUID\"] = responseBody.has(\"userGUID\");",
                      "",
                      "tests[\"Response Body contains token\"] = responseBody.has(\"token\");"
                    ],
                    "id": "5257d6e5-1719-4fd0-8543-74b00786b2a8"
                  }
                }
              ],
              "_postman_id": "18118e99-b958-4746-a877-1f181b7576d7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"mode\":4,\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "3a7f4f99-0269-4954-b383-fcfa04eaa7d0",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:12:06 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 3c16bbfd7b607e22009ff0f4ee637d8770dbd2cf8452fad545f2c5a4b9795fc306520582e6918e6ff550706909b2ab35c0a4d7bde6a052049ea91b9151e9bd18d7369c45073dd241aae0369842d95bcb7fca35e81456f087cf71b108357208e29dd93328a0ffd97cd786d02fef8c468d45f4465feec04799d79da40bc786d2dbae5ea9266fe213ac882604d34ec58efa27bc1fefe27438c66985e7234626728bc28e1caa2b85c4ef59afca4b5ca53ee7adf4d406298130a5ecba0a684d8e68f70d3d6cdd91f6ed596a32dbb5235b99d44fbdf8192dfc133649fec5249a79da498e0ce0f8e69f651ab2355d0bffa011360f7add5f0beab412eee12cf8546c6558dd92f71aedc4a0466e381ddd9e08c07191d6bff53158536d2\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Environment Setup",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable(\"FolderName\", \"DemoFolder\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileData\", \"Demo File Content\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileSize\", \"17\");",
                      "",
                      "postman.setEnvironmentVariable(\"SecondFileSize\", \"34\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileModifiedtime\", \"1481595468\");",
                      "",
                      "postman.setEnvironmentVariable(\"ParentFolderPath\", \"XERlbW9Gb2xkZXI=\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName1\", \"RGVtb0ZpbGUxLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName2\", \"RGVtb0ZpbGUyLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"ShareParentFolderPath\", \"XA==\");"
                    ],
                    "id": "c3122464-731d-4eeb-8f2c-8553ccc87362"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "92ca7637-6cb6-4537-9ede-758307c51d2c"
                  }
                }
              ],
              "_postman_id": "0c1142a3-8131-4193-ba63-7e30a6586186",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "f91c2163-5d8c-4043-b185-2cbf61779600",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Drive",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RootGuid\", jsonData.edgeDriveInfo.rootGUID);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains clientName\"] = responseBody.has(\"clientName\");",
                      "",
                      "tests[\"Response Body contains rootGUID\"] = responseBody.has(\"rootGUID\");",
                      "tests[\"Response Body contains response\"] = responseBody.has(\"response\");",
                      "tests[\"Response Body contains edgeDriveInfo\"] = responseBody.has(\"edgeDriveInfo\");",
                      "tests[\"Response Body contains syncWebFolder\"] = responseBody.has(\"syncWebFolder\");"
                    ],
                    "id": "965a0a57-37d0-4f97-8518-4d04aad0ca10"
                  }
                }
              ],
              "_postman_id": "a3def281-fd6b-4ed0-aa47-4f4f3ef4e658",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive",
                "description": "<h2>Description</h2>\nUse this operation to view details for your Edge Drive account, for example, root GUID and user capabilities.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive.htm)"
              },
              "response": [
                {
                  "id": "fd06ed16-56e4-4a83-9791-0d767b75fda8",
                  "name": "GET Drive",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "558"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:18:02 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":{\r\"errorString\":\"\",\"errorCode\":0,\"entity\":{\r\"subclientPolicyId\":12,\"subclientId\":14,\"applicationId\":33,\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"clientId\":6,\"userId\":1,\"subclientName\":\"admin\",\"backupsetName\":\"admin\"\r}\r},\"edgeDriveInfo\":{\r\"contentIndexingEnabled\":true,\"hasSyncBlackListedLaptop\":false,\"capabilities\":549775216688,\"driveType\":0,\"cloudId\":0,\"dirDelim\":\"\\\\\",\"rootGUID\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"hasEdgeDriveEnabledLaptop\":false\r},\"syncWebFolder\":{\r\"_type_\":111,\"syncWebFolderId\":872129,\"syncWebFolderName\":\"EdgeDrive\"\r}\r}"
                }
              ]
            },
            {
              "name": "Create Folder by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"FOLDERSHARE_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "tests[\"Response Body contains folder fileResource\"] = responseBody.has(\"fileResource\");",
                      ""
                    ],
                    "id": "eedc5c44-77dd-4884-95e2-71e9d1ae998a"
                  }
                }
              ],
              "_postman_id": "e7d5cca4-7bec-4b9b-9885-97aa588e5144",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<App_FileResourceInfo name=\"DemoShareFolder\"/>",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{RootGuid}}",
                "description": "<h2>Description</h2>\nThis operation creates a new folder in Edge Drive based on the GUID of the parent folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_folder_by_folderid.htm)"
              },
              "response": [
                {
                  "id": "0485a06c-63a8-46e1-918f-60693e2b10d2",
                  "name": "POST Create Folder by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"{{FolderName}}\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{RootGuid}}"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:43:40 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"fdf49b9e9e5a4e0c8333fbaf47540be2\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Share Folder by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"shareId\", jsonData.shareInfo.shareFolder.syncWebFolderId);",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderId\"] = responseBody.has(\"syncWebFolderId\");",
                      "tests[\"Response Body contains shareInfo\"] = responseBody.has(\"shareInfo\");",
                      "tests[\"Response Body contains resp\"] = responseBody.has(\"resp\");",
                      ""
                    ],
                    "id": "f1f2d297-8158-450b-9b6b-ef99adaa15b9"
                  }
                }
              ],
              "_postman_id": "5082e62e-ed66-487d-86f7-2b35be95638d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"status\":0,\r\n   \"sharedToOperationType\":2,\r\n   \"sharedTo\":[\r\n      {\r\n         \"permission\":1,\r\n         \"userType\":1,\r\n         \"user\":{\r\n            \"userName\":\"admin\"\r\n         }\r\n      }\r\n   ],\r\n   \"shareFolder\":{\r\n      \"syncWebFolderName\":\"DemoShareFolder\"\r\n   },\r\n   \"browseInfo\":{\r\n      \"paths\":[\r\n         {\r\n            \"path\":\"\\\\DemoShareFolder\"\r\n         }\r\n      ],\r\n      \"emailInfo\":{\r\n         \"emailMessage\":\"\",\r\n         \"dontSendEmail\":true\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/action/share",
                "description": "<h2>Description</h2>\nUse this operation to share a specific file or folder in Edge Drive based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>The file or folder is already shared or the specified share name already exists. <p>The response body will have the shareID of the existing share if the file or folder is already shared. The shareID can be used to update the users/user groups to which the file or folder is already shared. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_SharedFoldersResp&gt; &lt;shareInfo&gt; &lt;shareFolder syncWebFolderName=&quot;Test&quot; syncWebFolderId=&quot;10&quot; /&gt; &lt;/shareInfo&gt; &lt;resp errorMessage=&quot;&quot; errorCode=&quot;409&quot; /&gt; &lt;/App_SharedFoldersResp&gt;</p> \n     </div> \n    </div></td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_by_path.htm)"
              },
              "response": [
                {
                  "id": "25ace3ef-e5fc-4df8-8dce-1ba839088813",
                  "name": "POST Share Folder by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_ShareInfo sharedToOperationType=\"2\" status=\"0\">\r\n    <browseInfo>\r\n    \t<paths path=\"\\DemoShareFolder\"></paths>\r\n        <emailInfo dontSendEmail=\"1\" emailMessage=\"\"/> \r\n    </browseInfo>\r\n    <shareFolder syncWebFolderName=\"DemoShareFolder\"/>\r\n    <sharedTo permission=\"1\" userType=\"1\"> \r\n        <user userName=\"admin\"/> \r\n    </sharedTo>  \r\n</App_ShareInfo>"
                    },
                    "url": "{{ServerUrl}}/drive/action/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "375"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:13:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shareInfo\":{\r\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r}\r},\"resp\":{\r\"errorMessage\":\"\",\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Shares",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains clientName\"] = responseBody.has(\"clientName\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"syncWebFolderName\");",
                      "tests[\"Response Body contains shares\"] = responseBody.has(\"shares\");",
                      ""
                    ],
                    "id": "9843230d-aebf-4bc9-a562-11734922280b"
                  }
                }
              ],
              "_postman_id": "587d77db-87c8-43c2-a278-2367aee2b1b8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share"
              },
              "response": [
                {
                  "id": "691e5536-6d1e-460d-a9b3-8d712645bd8c",
                  "name": "GET Shares",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "2233"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:03 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shares\":[\r{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499692414\"\r}\r},{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":827758,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"976968088ab24ab5abccd812e86c6da3\",\"directory\":false\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=CvxBps\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499456490\"\r}\r},{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":310816,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"a314e2dfb88f44218edbeeaa1bc32447\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=lQuH165\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499452896\"\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "View Shared Files and Folders",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains clientName\"] = responseBody.has(\"clientName\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"syncWebFolderName\");",
                      ""
                    ],
                    "id": "8086970f-e7ed-47b5-95bd-7ccffc955132"
                  }
                }
              ],
              "_postman_id": "772261bb-9249-44db-9ae5-009e4c7ae133",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/share?shareId={{shareId}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share"
                  ],
                  "query": [
                    {
                      "key": "shareId",
                      "value": "{{shareId}}"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to view the list of shared files and folders in Edge Drive.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_shares.htm)"
              },
              "response": [
                {
                  "id": "5b1c18a2-7972-47e0-b1ed-4b315dda2726",
                  "name": "GET View Shared Files and Folders",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share?shareId={{shareId}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share"
                      ],
                      "query": [
                        {
                          "key": "shareId",
                          "value": "{{shareId}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "755"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:07 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shares\":[\r{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499692414\"\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Create a Folder in a Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"SHAREFOLDER3_GUID\", jsonData.fileResource.GUID);",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "019849da-9a48-4eee-8566-8a07bfe25722"
                  }
                }
              ],
              "_postman_id": "9bff66da-01b1-4834-a09b-615c97d61f95",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoShareFolder3\",\n  \"parentPath\":\"\\\\\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/createfolder",
                "description": "<h2>Description</h2>\nUse this operation to create a new folder within a shared folder in Edge Drive based on the shared parent folder path name.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_folder_by_path.htm)"
              },
              "response": [
                {
                  "id": "9cb3410b-112d-49c5-828d-7cf7e7c7798a",
                  "name": "POST Create a Folder in a Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoShareFolder2\" parentPath=\"\\\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/createfolder"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "209"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:07:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"31c05b2f8eda4edcab778cc2900397bd\",\"directory\":true,\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoShareFolder2\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Create a Folder in a Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"SHAREFOLDER2_GUID\", jsonData.fileResource.GUID);",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "26d6783f-100a-46f1-b647-563d9c3a4118"
                  }
                }
              ],
              "_postman_id": "a91505c6-fb53-42ea-97e5-38b47482541a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoShareFolder2\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{FOLDERSHARE_GUID}}",
                "description": "<h2>Description</h2>\nUse this operation to create a new folder within a shared folder in Edge Drive based on the GUID of the parent folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_folder_by_id.htm)"
              },
              "response": [
                {
                  "id": "0bb15daf-1408-41bd-8dfd-baa04ec5fe07",
                  "name": "POST Create a Folder in a Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFOLDER_GUID}}"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "209"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:12 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"98930cef06824b14a9b29c6f7192478f\",\"directory\":true,\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoShareFolder2\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Upload File to Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"SHAREFILE_GUID\", jsonData.fileGUID);",
                      ""
                    ],
                    "id": "c4b25d73-3c72-47c8-88d5-dce85be0ff29"
                  }
                }
              ],
              "_postman_id": "2b8f824d-f772-43c7-909c-a53f6c77934b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName1}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ShareParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "fullFile"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\r\nThis operation uploads a single file to a shared folder in Edge Drive. The API is used for uploading files that are relatively small in size.\r\n\r\n<p>For larger files (greater than 4 MB), upload the files in multiple data chunks. For more information, see <a href=http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_upload_header_request.htm>Initiate an Upload Session</a>.</p>\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. For example: \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \r\n     </div> \r\n    </div> <p>When a conflict occurs,</p> \r\n    <ul> \r\n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;requestId=&quot;13213022088234198160108125214183230586134182&quot;</p> \r\n       </div> \r\n      </div></li> \r\n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;forceRestart=true</p> \r\n       </div> \r\n      </div></li> \r\n    </ul> </td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_full_upload.htm)"
              },
              "response": [
                {
                  "id": "5407c500-bde3-42b7-a623-d649de9b832f",
                  "name": "POST Upload File to Share",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName1}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ShareParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "fullFile"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "154"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"2201161032277392138012818058417418996155\",\"fileGUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks to Share (1)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"requestId\", jsonData.requestId);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body Contains requestId\"] = responseBody.has(\"requestId\");"
                    ],
                    "id": "f1009eb9-38c3-4d63-9001-c4dfa1c1a550"
                  }
                }
              ],
              "_postman_id": "702f1a06-7693-447e-a983-95d79c04b4d8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName2}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ShareParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "0"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "forceRestart",
                      "value": "true"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to initiate the upload session for uploading multiple file chunks to the shared folder in Edge Drive. Optionally, you can also send the first file chunk along with the request.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. For example: \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \n     </div> \n    </div> <p>When a conflict occurs,</p> \n    <ul> \n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks. \n      <div class=\"cv-ui-codesnippet\"> \n       <div class=\"cv-text-codesnippet\"> \n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;requestId=&quot;13213022088234198160108125214183230586134182&quot;</p> \n       </div> \n      </div></li> \n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \n      <div class=\"cv-ui-codesnippet\"> \n       <div class=\"cv-text-codesnippet\"> \n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;forceRestart=true</p> \n       </div> \n      </div></li> \n    </ul> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_upload_header_request.htm)"
              },
              "response": [
                {
                  "id": "2ef46dc6-02be-4cb4-b7d4-f2f4c8959757",
                  "name": "POST Upload a File in Chunks to Share (1)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName2}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ShareParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "0"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "forceRestart",
                          "value": "true"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "110"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 17 Jul 2017 16:11:37 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":0,\"requestId\":\"1061148020523024814815637230331792426414766\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks to Share (2)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");"
                    ],
                    "id": "31fdf679-756a-48cc-9ab8-43d1f9d04fe0"
                  }
                }
              ],
              "_postman_id": "d8b9cc10-36d8-4010-b28a-cfc81ea82fe0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Name",
                    "value": "{{FileName2}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "1"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Demo File Content",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&requestId={{requestId}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "requestId",
                      "value": "{{requestId}}"
                    }
                  ]
                },
                "description": "Use this operation to upload a chunk or portion of the file data to Edge Drive.\n\n<p>Before you run this operation, make sure to initiate the upload session to Edge Drive. For details, see <a href=http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_upload_header_request.htm>POST Upload Session to Edge Drive</a>.<p>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_upload_chunk_request.htm)"
              },
              "response": [
                {
                  "id": "a191b473-9390-44cf-a106-55b6851501a6",
                  "name": "POST Upload a File in Chunks to Share (2)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Name",
                        "value": "{{FileName2}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "1"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "Demo File Content"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&requestId={{requestId}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "requestId",
                          "value": "{{requestId}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "99"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 17 Jul 2017 16:11:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"fileGUID\":\"404567a386be4fc391a39a7b44ae5d64\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Share File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderId\"] = responseBody.has(\"syncWebFolderId\");",
                      "tests[\"Response Body contains shareInfo\"] = responseBody.has(\"shareInfo\");",
                      "tests[\"Response Body contains resp\"] = responseBody.has(\"resp\");",
                      "",
                      "",
                      ""
                    ],
                    "id": "2ad779d8-ac4f-4811-8059-9b50558d2a4f"
                  }
                }
              ],
              "_postman_id": "55961d55-67dd-465e-8b50-3f42752fa3d8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"status\":0,\r\n   \"sharedToOperationType\":2,\r\n   \"sharedTo\":[\r\n      {\r\n         \"permission\":1,\r\n         \"userType\":1,\r\n         \"user\":{\r\n            \"userName\":\"admin\"\r\n         }\r\n      }\r\n   ],\r\n   \"shareFolder\":{\r\n      \"syncWebFolderName\":\"DemoShareFolder\"\r\n   },\r\n   \"browseInfo\":{\r\n      \"emailInfo\":{\r\n         \"emailMessage\":\"\",\r\n         \"dontSendEmail\":true\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{SHAREFILE_GUID}}/action/share",
                "description": "<h2>Description</h2>\nUse this operation to share a specific file or folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>The file or folder is already shared or the specified share name already exists. <p>The response body will have the shareID of the existing share if the file or folder is already shared. The shareID can be used to update the users/user groups to which the file or folder is already shared. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_SharedFoldersResp&gt; &lt;shareInfo&gt; &lt;shareFolder syncWebFolderName=&quot;Test&quot; syncWebFolderId=&quot;10&quot; /&gt; &lt;/shareInfo&gt; &lt;resp errorMessage=&quot;&quot; errorCode=&quot;409&quot; /&gt; &lt;/App_SharedFoldersResp&gt;</p> \n     </div> \n    </div></td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_by_id.htm)"
              },
              "response": [
                {
                  "id": "fd44e990-4e76-4236-bbc1-7bc84cc26b3e",
                  "name": "POST Share File by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_ShareInfo sharedToOperationType=\"2\" status=\"0\">\r\n    <browseInfo> \r\n        <emailInfo dontSendEmail=\"1\" emailMessage=\"\"/> \r\n    </browseInfo>\r\n    <shareFolder syncWebFolderName=\"DemoShareFolder\"/>\r\n    <sharedTo permission=\"1\" userType=\"1\"> \r\n        <user userName=\"admin\"/> \r\n    </sharedTo>  \r\n</App_ShareInfo>"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{SHAREFILE_GUID}}/action/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "378"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:19:37 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shareInfo\":{\r\"shareFolder\":{\r\"syncWebFolderId\":987326,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"881e1017d258454caf9bce7b1eb1b62a\",\"directory\":false\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=iloXGdx7X\",\"dontSendEmail\":true\r}\r}\r},\"resp\":{\r\"errorMessage\":\"\",\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "List Contents of a Folder in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      ""
                    ],
                    "id": "46e8f91d-7647-45af-96da-87989d70352b"
                  }
                }
              ],
              "_postman_id": "2deaf624-8ee0-4213-9961-1a4da91aeabe",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/folder/{{FOLDERSHARE_GUID}}/action/list",
                "description": "<h2>Description</h2>\nUse this operation to list the contents of a shared folder or the contents of a folder within a shared folder based on the folder GUID. The result does not include the contents of subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>GUID is not provided in the request </li> \n     <li>GUID provided in the request is invalid</li> \n     <li>GUID provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_list_by_id.htm)"
              },
              "response": [
                {
                  "id": "0731555e-9b94-4a85-a3af-faf87fea2934",
                  "name": "POST List Contents of a Folder in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/folder/{{SHAREFOLDER_GUID}}/action/list"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1462"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:16:25 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                },
                {
                  "id": "c008cb31-94c8-45c2-bbb3-5e593a52a215",
                  "name": "POST List Contents of a Folder in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/folder/{{SHAREFOLDER_GUID}}/action/list"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1462"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:17:47 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "List Contents of a Folder in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      ""
                    ],
                    "id": "b11e6158-32ff-48c4-a7e2-0bed28338ac9"
                  }
                }
              ],
              "_postman_id": "74872749-00f6-4ccb-b270-3108ad264d2b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/list?path=\\",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "action",
                    "list"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to list the contents of a shared folder or the contents of a folder within a shared folder based on the folder path. The result does not include the contents of subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>Path is not provided in the request </li> \n     <li>Path provided in the request is invalid</li> \n     <li>Path provided in the request is for a file</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Path provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_list_by_path.htm)"
              },
              "response": [
                {
                  "id": "ef0db4a1-2dd1-404f-9f02-38f2af262e9c",
                  "name": "POST List Contents of a Folder in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/list?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "action",
                        "list"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1462"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:30:48 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Search Contents of a Folder in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      ""
                    ],
                    "id": "8a1df18b-6f3c-4354-9d7c-348431c90e8d"
                  }
                }
              ],
              "_postman_id": "bca9894f-cbec-40af-940c-a55856690792",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/folder/{{FOLDERSHARE_GUID}}/action/search",
                "description": "<h2>Description</h2>\nUse this operation to search the contents of a shared folder or the contents of a folder within a shared folder based on the folder GUID. The API returns the contents that match a specific search criteria for the folder and its subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>GUID is not provided in the request </li> \n     <li>GUID provided in the request is invalid</li> \n     <li>GUID provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_search_by_id.htm)"
              },
              "response": [
                {
                  "id": "c55f6743-8eeb-4f7d-9bca-9adc87f5ef0b",
                  "name": "POST Search Contents of a Folder in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/folder/{{SHAREFOLDER_GUID}}/action/search"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "2019"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:37:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698163,\"parentPath\":\"872129\",\"GUID\":\"71526c578c79490b8b3cf0cac315ef2c\",\"directory\":true,\"versionGUID\":\"3a8d4aa5a817456d19abf08295070c2e\",\"path\":\"\\\\\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoShareFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"770263453\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:49:11.281Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698163\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547501848788992\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Search Contents of a Folder in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      ""
                    ],
                    "id": "b7f38097-a1b3-4a37-a1b3-7305849129b5"
                  }
                }
              ],
              "_postman_id": "d1044505-05fe-4f14-a6e2-8fc91538cbb9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/search?path=\\",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "action",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to search the contents of a shared folder or the contents of a folder within a shared folder based on the folder path. The API returns the contents that match a specific search criteria for the folder and its subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>Path is not provided in the request </li> \n     <li>Path provided in the request is invalid</li> \n     <li>Path provided in the request is for a file</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Path provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_search_by_path.htm)"
              },
              "response": [
                {
                  "id": "2e0eeb68-8460-4c34-adea-d870298154ff",
                  "name": "POST Search Contents of a Folder in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/search?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "action",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "2019"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:39:12 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698163,\"parentPath\":\"872129\",\"GUID\":\"71526c578c79490b8b3cf0cac315ef2c\",\"directory\":true,\"versionGUID\":\"3a8d4aa5a817456d19abf08295070c2e\",\"path\":\"\\\\\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoShareFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"770263453\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:49:11.281Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698163\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547501848788992\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Shared Folder Properties By ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      "",
                      ""
                    ],
                    "id": "270e154f-c6b0-4a19-bf60-3e109cf961ea"
                  }
                }
              ],
              "_postman_id": "1980370d-ccf7-4318-a7ef-586bad16aa33",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{FOLDERSHARE_GUID}}",
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with a file or folder within a shared folder in Edge Drive based on the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have access to the share or the file/folder requested is not accessible inside the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_properties_by_id.htm)"
              },
              "response": [
                {
                  "id": "9546808f-3267-42c5-bc4e-9f633f77e46c",
                  "name": "GET Shared Folder Properties by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "603"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:19:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1499692406,\"parentPath\":\"\\\\\",\"GUID\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true,\"versionGUID\":\"b1a80858edf939f7d5fb2a04dcb755cb\",\"path\":\"\\\\\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoShareFolder\",\"canUserEdit\":true,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"296170714\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T13:13:02.278Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499692406\"\r},{\r\"name\":\"_version_\",\"value\":\"1572541465026887680\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Shared File Versions By ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "ed013caa-d304-4630-90e2-169dc844e20a"
                  }
                }
              ],
              "_postman_id": "7bb88dd5-0868-447c-9442-4dee5196270b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/versions",
                "description": "<h2>Description</h2>\nUse this operation to view the first 50 versions of a file in an Edge Drive based on the GUID of the file. The versions are listed in descending order so that the latest version is the top result.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_file_versions_by_id.htm)"
              },
              "response": []
            },
            {
              "name": "Shared File Versions By Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      ""
                    ],
                    "id": "116adb6b-e734-4a04-a15e-284c312992b2"
                  }
                }
              ],
              "_postman_id": "4a228685-0840-4de0-9a14-248a04b55a86",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "{{Accept}}"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/versions?path=\\DemoShareFolder\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "file",
                    "versions"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoShareFolder\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to view the first 50 versions of a file in an Edge Drive based on the file path. The versions are listed in descending order so that the latest version is the top result.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_file_versions_by_path.htm)"
              },
              "response": []
            },
            {
              "name": "View File Properties in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "",
                      "tests[\"Reponse Body Contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body Contains File Name\"] = responseBody.has(\"DemoFile1.doc\");",
                      "tests[\"Response Body Contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "dbd19eff-409e-458b-8dc4-f2d3c9c3c960"
                  }
                }
              ],
              "_postman_id": "678b1851-bdcc-40f6-9a5b-3cc3f505fbf3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}",
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with a file or folder within a shared folder in Edge Drive based on the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have access to the share or the file/folder requested is not accessible inside the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_properties_by_id.htm)"
              },
              "response": [
                {
                  "id": "3d7c11b7-9806-4002-bb29-4cf73692c4e1",
                  "name": "GET View File Properties in Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "874"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:19:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fdownload\",\"versionGUID\":\"2538013ac95dc2554e1d8e97d84b3bd9\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoFile1.doc\",\"canUserEdit\":true,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"714151532\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T13:14:48.381Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572541564311306240\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View File Properties in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "",
                      "tests[\"Reponse Body Contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body Contains File Name\"] = responseBody.has(\"DemoFile1.doc\");",
                      "tests[\"Response Body Contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "766f8dad-7034-4cfd-8262-3d2f2c9a4946"
                  }
                }
              ],
              "_postman_id": "6c9acd8c-b855-4ec5-ab0f-de68fedbc257",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with a file or folder within a shared folder in Edge Drive based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have access to the share or the file/folder requested is not accessible inside the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_properties_by_id.htm)"
              },
              "response": [
                {
                  "id": "30dea95c-e410-481b-a802-fe2331861d4c",
                  "name": "GET View File Properties in Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "action",
                        "metadata"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "874"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fdownload\",\"versionGUID\":\"2538013ac95dc2554e1d8e97d84b3bd9\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoFile1.doc\",\"canUserEdit\":true,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"714151532\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T13:14:48.381Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572541564311306240\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Download File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "db2df16f-1fd5-4525-8ac2-677fc20c7b64"
                  }
                }
              ],
              "_postman_id": "4c2bd944-b88a-4488-8b2d-126602699452",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/download",
                "description": "<h2>Description</h2>\nUse this operation to download a shared file in Edge Drive based on the GUID of the file.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>The user does not have access to the share </li> \n     <li>The file requested is not accessible inside the share </li> \n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_download_by_id.htm)"
              },
              "response": [
                {
                  "id": "a526971e-f549-4a29-833e-5d6fd943d9e9",
                  "name": "GET Download File in Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "73833073-a040-4da6-acc2-bf266124749c"
                  }
                }
              ],
              "_postman_id": "bb75d29f-b7e2-406c-904c-8ffdc7f28ac9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/download?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "action",
                    "download"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation downloads a shared file in Edge Drive based on the file path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error cased due to one of the following reasons: \n    <ul> \n     <li>The user does not have access to the share </li> \n     <li>The file requested is not accessible inside the share </li> \n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_download_by_path.htm)"
              },
              "response": [
                {
                  "id": "c8efd0d3-dc8d-4189-8f3d-14eaaa1f800a",
                  "name": "GET Download File in Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/download?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "action",
                        "download"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:26 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download File Version in Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "1c5dec04-e699-40f4-8416-4f94f18ab860"
                  }
                }
              ],
              "_postman_id": "c0e2675d-c79e-43d6-9c95-4ab9a067ec95",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/version/{{SHAREFILE_GUID}}/action/download",
                "description": "<h2>Description</h2>\r\nUse this operation to download a specific version of a shared file in the Edge Drive based on the GUID of the file version.\r\n\r\n<b>Note:</b> Downloading a shared folder is currently not supported using this operation.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Error cased due to one of the following reasons: \r\n    <ul> \r\n     <li>The user does not have access to the share </li> \r\n     <li>The file requested is not accessible inside the share </li> \r\n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \r\n    </ul> </td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_download_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "32e5be12-d0b2-4980-b865-dd403fe334b7",
                  "name": "GET Download File Version in Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/version/{{SHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:37 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Preview File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Reponse Body contains DemoFile1\"] = responseBody.has(\"DemoFile1.doc\");",
                      "",
                      "tests[\"Reponse Body contains timestamp\"] = responseBody.has(\"timestamp\");"
                    ],
                    "id": "16c9be73-b5f0-4160-9059-9335eb4e0b96"
                  }
                }
              ],
              "_postman_id": "4915320a-aa46-4038-b93d-e542d0b6fdc0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}",
                "description": "<h2>Description</h2>\nThis operation returns the preview for a shared file or a file within a public shared folder in Edge Drive based on the file ID.\n\nPreview is currently supported for images and Microsoft Office file types.\n\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm>Changing the File Size Limit for Preview</a>.</p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_preview_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "cdbaed79-eee3-4038-804e-d92d1cc2a49e",
                  "name": "GET Preview File in Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "919"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:43:29 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_FileResourceResponse><fileResource modifiedTime=\"1481595468\" previewUrl=\"/drive/share/606138/file/c008ad609d9349858e3480ff69ebcc87/action/preview\" parentPath=\"\\\" GUID=\"c008ad609d9349858e3480ff69ebcc87\" sizeinBytes=\"17\" downloadUrl=\"/drive/share/606138/file/c008ad609d9349858e3480ff69ebcc87/action/download\" versionGUID=\"cbed29a343c2f75ce4b9ffb5fda3a65a\" path=\"\\DemoFile1.doc\" file=\"1\" parentGuid=\"71526c578c79490b8b3cf0cac315ef2c\" name=\"DemoFile1.doc\" canUserEdit=\"1\"><customProperties><nameValues name=\"IS_VISIBLE\" value=\"true\" /><nameValues name=\"cvfsuniqueid\" value=\"736594777\" /><nameValues name=\"timestamp\" value=\"2017-07-10T14:50:42.844Z\" /><nameValues name=\"mtmstr\" value=\"1481595468\" /><nameValues name=\"tags_custom\" value=\"test_tag\" /><nameValues name=\"_version_\" value=\"1572548159382487040\" /><nameValues name=\"CI_STATUS\" value=\"0\" /></customProperties></fileResource><error /></App_FileResourceResponse>"
                }
              ]
            },
            {
              "name": "Preview File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Reponse Body contains DemoFile1\"] = responseBody.has(\"DemoFile1.doc\");",
                      "",
                      "tests[\"Reponse Body contains timestamp\"] = responseBody.has(\"timestamp\");"
                    ],
                    "id": "3354250c-15fb-4146-9aeb-94e4cb33ea9a"
                  }
                }
              ],
              "_postman_id": "68bc5a5a-a3bb-4798-8a23-7fd4ea53bee2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}",
                "description": "<h2>Description</h2>\nThis operation returns the preview for a shared file or a file within a public shared folder in Edge Drive based on the file path.\n\nPreview is currently supported for all images and Microsoft Office file types.\n\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm>Changing the File Size Limit for Preview</a>.</p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_preview_by_filepath.htm)"
              },
              "response": [
                {
                  "id": "85ad534e-bfc7-482d-863d-24ed46955219",
                  "name": "GET Preview File in Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/action/preview?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "action",
                        "preview"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:45:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Add Tags to File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "cbe22d9c-773e-4d23-9770-95d6be834c27"
                  }
                }
              ],
              "_postman_id": "6c4cd211-55a7-4ee3-96e8-521efb858d2b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{SHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags",
                "description": "<h2>Description</h2>\nUse this operation to add your own tags to one or more shared files and folders in Edge Drive based on the GUID of the file or folder.\n\nTag names can be a combination of letters and numbers. Letters are case-insensitive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Request is missing required request body or file and folder information is not provided in the request body.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_tag_by_id.htm)"
              },
              "response": [
                {
                  "id": "9030c051-8533-405e-901b-695be326b19e",
                  "name": "POST Add Tags to File in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "List Tags in a Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains tag\"] = responseBody.has(\"test_tag\");"
                    ],
                    "id": "276f5a58-7667-425d-a115-d4f728d1d098"
                  }
                }
              ],
              "_postman_id": "949a2aff-5174-4336-8787-0ee68cf3f28b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/tags",
                "description": "<h2>Description</h2>\nThis operation returns the list of tags assigned to a file or folder that is shared or resides within a shared folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The required parameters were not specified correctly or the GUID of the file or folder is not shared or not part of the shared folder.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or the share has expired or the user does not have access to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The GUID provided in the request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_tag_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "00895a41-e272-4ae7-844d-efe2f931fd13",
                  "name": "GET List Tags in a Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "49"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:59:53 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"tags\":\"test_tag\",\"error\":{\r\"errorCode\":200\r}\r}"
                }
              ]
            },
            {
              "name": "Delete Tags in a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "a2507c16-f86c-4327-8fe6-dd4cf007eccd"
                  }
                }
              ],
              "_postman_id": "448928cb-b182-4a52-a1d7-66b1b33d2172",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{SHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags",
                "description": "<h2>Description</h2>\nUse this operation to delete tags from one or more shared files and folders in Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required request body or the file or folder information is not provided in the request body or shareId is not specified correctly.</td> \n  </tr> \n  <tr> \n   <td>500</td> \n   <td>Internal Server Error</td> \n   <td>Failed to retrieve the share information.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error caused by one of the following reasons: \n    <ul> \n     <li>Input token does not match</li> \n     <li>Share expired</li> \n     <li>User does not have access to the share</li> \n     <li>User does not have editable rights to the share</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_share_tag.htm)"
              },
              "response": [
                {
                  "id": "66e8dd7d-a2b0-4307-87ff-ed5847dafaf5",
                  "name": "DELETE Delete Tags in a Share",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:59:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Rename File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "3b797706-6172-434b-a258-8405b0c4c320"
                  }
                }
              ],
              "_postman_id": "7c5ee5fd-d026-4689-83cb-b0fe6f1bee44",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoFile1.doc\",\n  \"name\":\"DemoShareFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/rename",
                "description": "<h2>Description</h2>\r\nUse this operation to rename a file or a folder within a shared folder in Edge Drive, based on the  file or folder path.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have access to the share or the file/folder to be rename is not accessible inside the share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>A file or folder with the specified new name already exists in the specified location.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_folder_rename.htm)"
              },
              "response": []
            },
            {
              "name": "Rename File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "816df02b-b8ff-425b-afdd-c140c1f6a9bd"
                  }
                }
              ],
              "_postman_id": "87ac845d-e8d8-401d-ba99-91b16bef9d14",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoShareFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/rename",
                "description": "<h2>Description</h2>\nUse this operation to rename a file or a folder within a shared folder in Edge Drive, based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have access to the share or the file/folder to be rename is not accessible inside the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_drive_share_folder_rename.htm)"
              },
              "response": [
                {
                  "id": "4fa8c479-19e3-4d57-9680-09f0093432db",
                  "name": "PUT Rename File in Share by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoShareFile1Renamed.doc\" />"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/rename"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:41 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Move File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "3d5f6cc4-7d3e-4e22-8288-f0c0d314d601"
                  }
                }
              ],
              "_postman_id": "fbe25c81-6ca4-4915-a95c-6beb75e42cb6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoShareFile1Renamed.doc\",\n  \"parentPath\":\"\\\\DemoShareFolder2\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/move",
                "description": "<h2>Description</h2>\nThis operation moves a file or folder to another location within a shared folder in Edge Drive, based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>The user lost access to the share </li> \n     <li>The file/folder to be moved is not part of the specified share. </li> \n     <li>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_folder_move.htm)"
              },
              "response": [
                {
                  "id": "22a05ee8-af8e-4493-b910-4ed62e9a0a42",
                  "name": "POST Move File in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFile1Renamed.doc\" parentPath=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Move File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "639f9881-1d91-4535-a22a-dfb7770e933f"
                  }
                }
              ],
              "_postman_id": "a7f085f6-e2be-4a39-b48f-061857c047b2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parentGuid\":\"{{SHAREFOLDER2_GUID}}\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/move",
                "description": "<h2>Description</h2>\nUse this operation to move a file or folder to another location within a shared folder in Edge Drive, based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>The user lost access to the share </li> \n     <li>The file/folder to be moved is not part of the specified share. </li> \n     <li>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_drive_share_folder_move.htm)"
              },
              "response": [
                {
                  "id": "fb74d6b7-de31-4a59-bc12-58cfe6c53588",
                  "name": "PUT Move File in Share by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo parentGuid=\"{{SHAREFOLDER_GUID}}\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Add Custom Properties to File in a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "19123589-ee92-4f22-be44-2c6258300870"
                  }
                }
              ],
              "_postman_id": "2315b748-ff33-4dfa-9ddc-087fee01a95c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to add new custom properties or modify existing custom properties to individual or multiple files and folders that are shared or resides within a shared folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or the custom property is not provided in the request body or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or User does not have access or editable rights to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_custom_prop_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "7457b458-4a3f-4d2f-871f-eea1d62b6f2d",
                  "name": "POST Move File in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFile1Renamed.doc\" parentPath=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "View Custom Properties of a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "a1ec7242-4c9b-4712-988d-75dc0c26499e"
                  }
                }
              ],
              "_postman_id": "d098ad65-9fed-4dc3-9035-3d4e4e845fcc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to list specific or all custom properties of a file or folder that is shared or resides within a shared folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or the user does not have access to this share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_share_custom_prop_filter_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "f58b37c4-2cfd-4407-8d18-f75e5c7719c2",
                  "name": "GET View Custom Properties of a Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFILE_GUID}}/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "110"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GetCustomPropertyResp><error errorCode=\"200\" /><props><customProps /></props></App_GetCustomPropertyResp>"
                }
              ]
            },
            {
              "name": "Delete Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "20189c8d-e49f-43fd-8b6d-53ae2f11a1c4"
                  }
                }
              ],
              "_postman_id": "8302de46-0e3e-4a5b-a5ef-516925ed1933",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{SHAREFILE_GUID}}\"\r\n      }\r\n   ],\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to delete the custom properties of individual or multiple files and folders that are shared or resides within a shared folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or the custom property is not provided in the request body or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or User does not have access or editable rights to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_share_custom_property.htm)"
              },
              "response": [
                {
                  "id": "0ded7a87-7eb4-4c4b-bcf1-37f6eea72db9",
                  "name": "DELETE Delete Custom Properties",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "32"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:11 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_CustomPropertiesRespList />"
                }
              ]
            },
            {
              "name": "Change Share Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "d8caccc5-ab5a-4a4b-a126-524cf07be419"
                  }
                }
              ],
              "_postman_id": "13061c39-bdb4-4475-bdd8-968a5653c8c7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"shareInfo\":{\r\n      \"status\":0,\r\n      \"sharedToOperationType\":1,\r\n      \"sharedTo\":[\r\n         {\r\n            \"permission\":1,\r\n            \"userType\":1,\r\n            \"user\":{\r\n               \"userName\":\"{{userName}}\"\r\n            }\r\n         },\r\n         {\r\n            \"permission\":1,\r\n            \"userType\":2,\r\n            \"email\":\"\"\r\n         },\r\n         {\r\n            \"permission\":2,\r\n            \"userType\":3,\r\n            \"group\":{\r\n               \"userGroupName\":\"Testgroup\"\r\n            }\r\n         },\r\n         {\r\n            \"permission\":1,\r\n            \"userType\":1,\r\n            \"user\":{\r\n               \"userName\":\"admin\"\r\n            }\r\n         }\r\n      ],\r\n      \"shareFolder\":{\r\n         \"syncWebFolderName\":\"{{shareId}}\"\r\n      },\r\n      \"browseInfo\":{\r\n         \"emailInfo\":{\r\n            \"emailMessage\":\"\",\r\n            \"dontSendEmail\":true\r\n         }\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/ShareFolder/{{shareId}}",
                "description": "<h2>Description</h2>\nUse this operation to add, modify or delete users or change the share and user permissions on a shared file or folder.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_share_update.htm)"
              },
              "response": []
            },
            {
              "name": "Delete Folder in a Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "32218d6f-4275-46e1-b0c8-46e591efd4dc"
                  }
                }
              ],
              "_postman_id": "b955c308-7642-43f6-848c-62eca9290e89",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFOLDER2_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a shared file or a folder in Edge Drive using the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have access to the share or the file or folder to be deleted is not accessible inside the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_share_folder.htm)"
              },
              "response": [
                {
                  "id": "fcfef059-94de-4dd8-a819-e7f63c3a213c",
                  "name": "DELETE Delete Folder in a Share by ID",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{SHAREFOLDER2_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 20:46:14 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete Folder in a Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "b451a021-3f5b-4a3b-9be9-e5cafbcc9e3a"
                  }
                }
              ],
              "_postman_id": "9631dbbb-34af-4754-942a-747ff5b48922",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoShareFolder2\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/delete",
                "description": "<h2>Description</h2>\nUse this operation to delete a shared file or folder in Edge Drive, using the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have access to the share or the file or folder to be deleted is not accessible inside the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_folder_delete.htm)"
              },
              "response": [
                {
                  "id": "a14684a6-a6c2-4ecc-90b0-5d70e560e11f",
                  "name": "POST Delete Folder in a Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/delete"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 17:07:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Remove Sharing for Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "af990041-de17-4693-8380-d43168674524"
                  }
                }
              ],
              "_postman_id": "814fdace-9eb2-4ae7-ad20-7011dc1d4dbd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/ShareFolder/{{shareId}}",
                "description": "<h2>Description</h2>\nUse this operation to remove the sharing on a file or folder.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share.htm)"
              },
              "response": [
                {
                  "id": "cdb6bc80-b1e6-4c37-a0fa-aa9e8bfd5ae0",
                  "name": "DELETE Remove Sharing For Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "49"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:19:18 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GenericResp errorMessage=\"\" errorCode=\"0\" />"
                }
              ]
            },
            {
              "name": "Delete Share Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "ae13a2b8-4f43-4edc-9364-609aa62c344c"
                  }
                }
              ],
              "_postman_id": "f4073779-f91c-48d4-bab1-8db1dceb1c87",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{FOLDERSHARE_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in Edge Drive using the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_folder.htm)"
              },
              "response": [
                {
                  "id": "6944c6b3-f324-4baf-afb0-43349eaa6f0d",
                  "name": "DELETE Delete Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:25:27 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Logout",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "a95914a5-cf03-4f4f-b1ce-ddfca8cf1efb"
                  }
                }
              ],
              "_postman_id": "ddea3b83-a967-4a1e-a412-f9522dceab23",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Logout",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "4f973b9d-3539-4f46-b86e-10bc5fef1c9a",
                  "name": "POST Logout",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Logout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "plain",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "15"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 20:50:16 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "User logged out"
                }
              ]
            }
          ],
          "_postman_id": "65573ba5-9ce9-49d7-9555-ead5605586b0",
          "_postman_isSubFolder": true
        },
        {
          "name": "File and Folder Operations for Public Shares",
          "item": [
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"TOKEN\", jsonData.token);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "tests[\"Response Body contains userGUID\"] = responseBody.has(\"userGUID\");",
                      "",
                      "tests[\"Response Body contains token\"] = responseBody.has(\"token\");"
                    ],
                    "id": "ac40babd-a026-4109-ade6-a6d43539fc8b"
                  }
                }
              ],
              "_postman_id": "6ad7d90a-63b3-4ddc-86c0-574c8952bd05",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"mode\":4,\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "ea0507c8-0653-4c90-8c33-ec6fdae9ef68",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:12:06 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 3c16bbfd7b607e22009ff0f4ee637d8770dbd2cf8452fad545f2c5a4b9795fc306520582e6918e6ff550706909b2ab35c0a4d7bde6a052049ea91b9151e9bd18d7369c45073dd241aae0369842d95bcb7fca35e81456f087cf71b108357208e29dd93328a0ffd97cd786d02fef8c468d45f4465feec04799d79da40bc786d2dbae5ea9266fe213ac882604d34ec58efa27bc1fefe27438c66985e7234626728bc28e1caa2b85c4ef59afca4b5ca53ee7adf4d406298130a5ecba0a684d8e68f70d3d6cdd91f6ed596a32dbb5235b99d44fbdf8192dfc133649fec5249a79da498e0ce0f8e69f651ab2355d0bffa011360f7add5f0beab412eee12cf8546c6558dd92f71aedc4a0466e381ddd9e08c07191d6bff53158536d2\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Environment Setup",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable(\"FolderName\", \"DemoFolder\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileData\", \"Demo File Content\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileSize\", \"17\");",
                      "",
                      "postman.setEnvironmentVariable(\"SecondFileSize\", \"34\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileModifiedtime\", \"1481595468\");",
                      "",
                      "postman.setEnvironmentVariable(\"ParentFolderPath\", \"XERlbW9Gb2xkZXI=\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName1\", \"RGVtb0ZpbGUxLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName2\", \"RGVtb0ZpbGUyLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"ShareParentFolderPath\", \"XA==\");"
                    ],
                    "id": "b4a55d2f-d9e9-4b9d-9152-8e2c7b6eec9d"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "ec5de53a-1696-4f2d-b91b-d82bf5c875ad"
                  }
                }
              ],
              "_postman_id": "4401dd65-e0c4-47bd-a328-c0bfe3cf1c37",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "c992ac41-d3b0-4866-9013-1bdc80422052",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                },
                {
                  "id": "d4f54616-af90-4d27-8018-f7b239c4193f",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Drive",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RootGuid\", jsonData.edgeDriveInfo.rootGUID);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains clientName\"] = responseBody.has(\"clientName\");",
                      "",
                      "tests[\"Response Body contains rootGUID\"] = responseBody.has(\"rootGUID\");",
                      "tests[\"Response Body contains response\"] = responseBody.has(\"response\");",
                      "tests[\"Response Body contains syncWebFolder\"] = responseBody.has(\"syncWebFolder\");",
                      "tests[\"Response Body contains edgeDriveInfo\"] = responseBody.has(\"edgeDriveInfo\");",
                      ""
                    ],
                    "id": "cd9c9e40-6abd-46f6-86e1-5630a625999f"
                  }
                }
              ],
              "_postman_id": "1a39e7da-ed33-4d4b-b981-b9cc077ae771",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive",
                "description": "<h2>Description</h2>\nUse this operation to view details for your Edge Drive account, for example, root GUID and user capabilities.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive.htm)"
              },
              "response": [
                {
                  "id": "252c8964-c943-4ec6-a1bf-3c71eacea9e9",
                  "name": "GET Drive",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "558"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:18:02 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":{\r\"errorString\":\"\",\"errorCode\":0,\"entity\":{\r\"subclientPolicyId\":12,\"subclientId\":14,\"applicationId\":33,\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"clientId\":6,\"userId\":1,\"subclientName\":\"admin\",\"backupsetName\":\"admin\"\r}\r},\"edgeDriveInfo\":{\r\"contentIndexingEnabled\":true,\"hasSyncBlackListedLaptop\":false,\"capabilities\":549775216688,\"driveType\":0,\"cloudId\":0,\"dirDelim\":\"\\\\\",\"rootGUID\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"hasEdgeDriveEnabledLaptop\":false\r},\"syncWebFolder\":{\r\"_type_\":111,\"syncWebFolderId\":872129,\"syncWebFolderName\":\"EdgeDrive\"\r}\r}"
                },
                {
                  "id": "94bac1a5-e964-410f-beef-e30fc3f4aaf1",
                  "name": "GET Drive",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "558"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:18:02 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":{\r\"errorString\":\"\",\"errorCode\":0,\"entity\":{\r\"subclientPolicyId\":12,\"subclientId\":14,\"applicationId\":33,\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"clientId\":6,\"userId\":1,\"subclientName\":\"admin\",\"backupsetName\":\"admin\"\r}\r},\"edgeDriveInfo\":{\r\"contentIndexingEnabled\":true,\"hasSyncBlackListedLaptop\":false,\"capabilities\":549775216688,\"driveType\":0,\"cloudId\":0,\"dirDelim\":\"\\\\\",\"rootGUID\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"hasEdgeDriveEnabledLaptop\":false\r},\"syncWebFolder\":{\r\"_type_\":111,\"syncWebFolderId\":872129,\"syncWebFolderName\":\"EdgeDrive\"\r}\r}"
                }
              ]
            },
            {
              "name": "Create Folder by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"PUBLICSHAREFOLDER_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "2016e77f-379d-4c6c-9282-ea299ba54842"
                  }
                }
              ],
              "_postman_id": "871c11db-7d3a-48d6-9704-cce7e449c9f2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<App_FileResourceInfo name=\"DemoPublicShare\"/>",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{RootGuid}}",
                "description": "<h2>Description</h2>\nUse this operation to create a new folder within a shared folder in Edge Drive based on the GUID of the parent folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_folder_by_id.htm)"
              },
              "response": [
                {
                  "id": "7dbb764a-a4dc-456d-b78c-8066d3729d34",
                  "name": "POST Create Folder by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"{{FolderName}}\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/file/{{RootGuid}}"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:43:40 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"fdf49b9e9e5a4e0c8333fbaf47540be2\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Share Folder by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "tests[\"Response Body contains shareInfo\"] = responseBody.has(\"shareInfo\");",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoPublicShare\");",
                      "tests[\"Response Body contains resp\"] = responseBody.has(\"resp\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderId\"] = responseBody.has(\"syncWebFolderId\");",
                      "",
                      "postman.setEnvironmentVariable(\"shareId\", jsonData.shareInfo.shareFolder.syncWebFolderId);",
                      ""
                    ],
                    "id": "20effd89-38d3-4f46-a716-e3d482350305"
                  }
                }
              ],
              "_postman_id": "596ab61c-5524-49ae-84cc-3a774c695549",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"status\":1,\r\n   \"sharedToOperationType\":2,\r\n   \"sharedTo\":[\r\n      {\r\n         \"permission\":2,\r\n         \"userType\":1,\r\n         \"user\":{\r\n            \"userName\":\"admin\"\r\n         }\r\n      }\r\n   ],\r\n   \"shareFolder\":{\r\n      \"syncWebFolderName\":\"DemoPublicShare\"\r\n   },\r\n   \"browseInfo\":{\r\n      \"paths\":[\r\n         {\r\n            \"path\":\"\\\\DemoPublicShare\"\r\n         }\r\n      ],\r\n      \"emailInfo\":{\r\n         \"emailMessage\":\"\",\r\n         \"dontSendEmail\":true\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/action/share",
                "description": "<h2>Description</h2>\nUse this operation to share a specific file or folder in Edge Drive based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>The file or folder is already shared or the specified share name already exists. <p>The response body will have the shareID of the existing share if the file or folder is already shared. The shareID can be used to update the users/user groups to which the file or folder is already shared. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_SharedFoldersResp&gt; &lt;shareInfo&gt; &lt;shareFolder syncWebFolderName=&quot;Test&quot; syncWebFolderId=&quot;10&quot; /&gt; &lt;/shareInfo&gt; &lt;resp errorMessage=&quot;&quot; errorCode=&quot;409&quot; /&gt; &lt;/App_SharedFoldersResp&gt;</p> \n     </div> \n    </div></td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_by_path.htm)"
              },
              "response": [
                {
                  "id": "20830bf5-a953-4893-b1ca-9631cf5d7afd",
                  "name": "POST Share Folder by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_ShareInfo sharedToOperationType=\"2\" status=\"0\">\r\n    <browseInfo>\r\n    \t<paths path=\"\\DemoShareFolder\"></paths>\r\n        <emailInfo dontSendEmail=\"1\" emailMessage=\"\"/> \r\n    </browseInfo>\r\n    <shareFolder syncWebFolderName=\"DemoShareFolder\"/>\r\n    <sharedTo permission=\"1\" userType=\"1\"> \r\n        <user userName=\"admin\"/> \r\n    </sharedTo>  \r\n</App_ShareInfo>"
                    },
                    "url": "{{ServerUrl}}/drive/action/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "375"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:13:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shareInfo\":{\r\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r}\r},\"resp\":{\r\"errorMessage\":\"\",\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Upload File to Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"PUBLICSHAREFILE_GUID\", jsonData.fileGUID);",
                      ""
                    ],
                    "id": "5aae47ad-8b7c-417b-becd-2ada6aad1ab2"
                  }
                }
              ],
              "_postman_id": "76e0be80-c5ae-431b-9f90-6375b62c63ff",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName1}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ShareParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "fullFile"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\r\nThis operation uploads a single file to a shared folder in Edge Drive. The API is used for uploading files that are relatively small in size.\r\n\r\n<p>For larger files (greater than 4 MB), upload the files in multiple data chunks. For more information, see <a href=http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_upload_header_request.htm>Initiate an Upload Session</a>.</p>\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. For example: \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \r\n     </div> \r\n    </div> <p>When a conflict occurs,</p> \r\n    <ul> \r\n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;requestId=&quot;13213022088234198160108125214183230586134182&quot;</p> \r\n       </div> \r\n      </div></li> \r\n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/drive/file/action/upload?uploadType=chunkedFile&amp;forceRestart=true</p> \r\n       </div> \r\n      </div></li> \r\n    </ul> </td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_full_upload.htm)"
              },
              "response": [
                {
                  "id": "016b2b47-71ea-4f58-b2c6-f9e00bf06636",
                  "name": "POST Upload File to Share",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName1}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ShareParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/drive/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "fullFile"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "154"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"2201161032277392138012818058417418996155\",\"fileGUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "View Properties of File in Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "tests[\"Response Body contains DemoFile1\"] = responseBody.has(\"DemoFile1.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"versionId\", jsonData.fileResource.versionGUID);"
                    ],
                    "id": "a768e12b-81ae-4209-8960-ceeeac0a5d31"
                  }
                }
              ],
              "_postman_id": "a01b06f5-55a3-4eb0-a409-b5153605127a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/publicshare/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "publicshare",
                    "{{shareId}}",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with an Edge Drive file or folder in a public share based on the file or folder path.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_public_share_properties.htm)"
              },
              "response": [
                {
                  "id": "0217625f-795b-4a31-a5fc-a5cb5651907c",
                  "name": "GET View Properties of File in Public Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/drive/publicshare/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "drive",
                        "publicshare",
                        "{{shareId}}",
                        "action",
                        "metadata"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "887"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:18:17 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fdrive\\u002fpublicshare\\u002f580754\\u002ffile\\u002fe6ea9b3662c04765b2e8e01041547eab\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"e6ea9b3662c04765b2e8e01041547eab\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fdrive\\u002fpublicshare\\u002f580754\\u002ffile\\u002fe6ea9b3662c04765b2e8e01041547eab\\u002faction\\u002fdownload\",\"versionGUID\":\"dd0919909fa836ece7685510c03fb6be\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"65d6d0cd48854a2b9f4b4f58701301b4\",\"name\":\"DemoFile1.doc\",\"canUserEdit\":false,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"714151532\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T16:16:25.694Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572552993103937536\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Preview File in Public Share By ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "bc7b9af8-a958-4cc8-875c-0a45abfa98e4"
                  }
                }
              ],
              "_postman_id": "58a11fed-43f9-4c52-ad02-af21557aa70b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/html"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/preview",
                "description": "<h2>Description</h2>\r\nThis operation returns the preview for a public shared file or a file within a public shared folder in Edge Drive based on the file ID.\r\n\r\nPreview is currently supported for all images and Microsoft Office file types.\r\n\r\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm>Changing the File Size Limit for Preview</a>.</p>\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>204</td> \r\n   <td>No Content</td> \r\n   <td>Preview is not available for the file.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_publicshare_preview_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "79fde757-41b0-4502-b767-00ba5c7d342e",
                  "name": "GET Preview File Versions in Public Share By ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:11:01 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Preview File in Public Share By Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      ""
                    ],
                    "id": "3fecb069-50ea-4303-aee0-faf7a1a9645a"
                  }
                }
              ],
              "_postman_id": "51e5b330-5e9e-428b-baa2-11b9b1210f4d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/html"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/publicshare/{{shareId}}/action/preview?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "publicshare",
                    "{{shareId}}",
                    "action",
                    "preview"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation returns the preview for a public shared file or a file within a public shared folder in Edge Drive based on the file path.\n\nPreview is currently supported for all images and Microsoft Office file types.\n\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm>Changing the File Size Limit for Preview</a>.</p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_publicshare_preview_by_filepath.htm)"
              },
              "response": [
                {
                  "id": "2eb7f966-8768-4c94-bc94-1f93794431a0",
                  "name": "GET Preview File Versions in Public Share By ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:11:01 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Download a File in a Public Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "22f08852-2f0e-4a49-ade4-a148eaba379f"
                  }
                }
              ],
              "_postman_id": "6b2134c3-be96-4ebb-a251-9af43cefd23f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/plain"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/publicshare/{{shareId}}/action/download?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "publicshare",
                    "{{shareId}}",
                    "action",
                    "download"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation downloads a file from the Edge Drive public share based on the file path.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_publicshare_download_by_path.htm)"
              },
              "response": [
                {
                  "id": "7d58c9d0-5aee-44b6-9a98-aba60204cfe7",
                  "name": "GET Download a File in a Public Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:20:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download a File in a Public Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "4df1d09f-ce03-4106-ad7e-60150a95db96"
                  }
                }
              ],
              "_postman_id": "07a9994b-923a-4474-be27-2b7a335e00a8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/drive/publicshare/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "drive",
                    "publicshare",
                    "{{shareId}}",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation downloads a file in the Edge Drive public share based on the GUID of the file.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_publicshare_download_by_id.htm)"
              },
              "response": [
                {
                  "id": "d07e0822-98d3-41c3-98a2-724014cf6a56",
                  "name": "GET Download a File in a Public Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:20:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Public Share File Versions",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "7d324dac-1074-4a4f-b0cc-f0face9b7f87"
                  }
                }
              ],
              "_postman_id": "f9d81ebf-7010-4d93-9f1e-1fbcb648199b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/html"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/version/{{versionId}}/action/preview",
                "description": "<h2>Description</h2>\nThis operation returns the preview of a specific version of a public shared file or a file within a public shared folder in Edge Drive based on the GUID of the file version.\n\nPreview is currently supported for all images and Microsoft Office file types.\n\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm>Changing the File Size Limit for Preview</a>.</p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_publicshare_preview_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "8747250f-7ac8-4667-a318-a72ecc57d8f1",
                  "name": "GET Public Share File Versions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/version/{{versionId}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:17:53 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Download a File Version from a Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "5fc996d3-8c09-4e8e-9dc9-e9c132a45342"
                  }
                }
              ],
              "_postman_id": "6d7d661e-e935-4653-9791-292c9913135d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/version/{{versionId}}/action/download",
                "description": "<h2>Description</h2>\nThis operation downloads a specific version of a file in the Edge Drive public share based on the GUID of the file version.\n\n<b>Note:</b> Downloading a shared folder is currently not supported using this operation.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error cased due to one of the following reasons: \n    <ul> \n     <li>The user does not have access to the share </li> \n     <li>The file requested is not accessible inside the share </li> \n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_publicshare_download_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "3f1819e5-bce3-4142-9a18-7564dce6f678",
                  "name": "GET Download a File Version from a Public Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:20:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Add Custom Properties to File in a Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "0e4e6e32-c26e-4f73-844e-c3159103e339"
                  }
                }
              ],
              "_postman_id": "eba75cde-7bc1-4c36-86e0-13b1aa676d2b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to add new custom properties or modify existing custom properties to individual or multiple files and folders that are shared or resides within a shared folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or the custom property is not provided in the request body or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or User does not have access or editable rights to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_custom_prop_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "bac58979-4248-4e4f-a55f-b284ee02d2f3",
                  "name": "POST Move File in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFile1Renamed.doc\" parentPath=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "View Custom Properties of a File in Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "tests[\"Response Body contains testproperty\"] = responseBody.has(\"testproperty1\");",
                      "",
                      "tests[\"Response Body contains testvalue\"] = responseBody.has(\"testvalue1\");"
                    ],
                    "id": "01b9e49a-1519-4b1e-b9b7-161d4ddf058f"
                  }
                }
              ],
              "_postman_id": "37e8cca7-de56-4630-888b-07ef3157d4ed",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to list specific or all custom properties of a file or folder that is public shared or resides within a public shared folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or the user does not have access to this share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_public_share_custom_prop_filter_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "e162962e-d961-4abe-bd0f-dd075eeec02d",
                  "name": "GET View Custom Properties of a File in Public Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "268"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:07:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GetCustomPropertyResp><error errorCode=\"200\" /><props><customProps><nameValues name=\"testproperty1\"><values val=\"testvalue1\" /></nameValues><nameValues name=\"testproperty2\"><values val=\"testvalue2\" /></nameValues></customProps></props></App_GetCustomPropertyResp>"
                }
              ]
            },
            {
              "name": "Delete Custom Properties in a Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "b6e988f1-e98d-43d9-8f6b-fce4cf5ff015"
                  }
                }
              ],
              "_postman_id": "02cfa050-5f55-48fc-801f-0d026b93c7d1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{PUBLICSHAREFILE_GUID}}\"\r\n      }\r\n   ],\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to delete the custom properties of individual or multiple files and folders that are shared or resides within a shared folder in Edge Drive based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or the custom property is not provided in the request body or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or User does not have access or editable rights to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_share_custom_property.htm)"
              },
              "response": [
                {
                  "id": "426dd060-eace-4797-bd55-ab41ae06d719",
                  "name": "DELETE Delete Custom Properties",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_CustomPropertiesReq>\r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/>\r\n<customProps> \r\n  <nameValues name=\"testproperty1\" value=\"testvalue1\"/>\r\n  <nameValues name=\"testproperty2\" value=\"testvalue2\"/>\r\n</customProps> \r\n</Api_CustomPropertiesReq>"
                    },
                    "url": "{{ServerUrl}}/drive/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "32"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:11 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_CustomPropertiesRespList />"
                }
              ]
            },
            {
              "name": "Add Tags to File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "043ab3cb-7973-4308-bef3-5778dfd29f25"
                  }
                }
              ],
              "_postman_id": "cb0cedea-4661-45ce-856f-3d8517f363ec",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{PUBLICSHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags",
                "description": "<h2>Description</h2>\nUse this operation to add your own tags to one or more shared files and folders in Edge Drive based on the GUID of the file or folder.\n\nTag names can be a combination of letters and numbers. Letters are case-insensitive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Request is missing required request body or file and folder information is not provided in the request body.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_drive_share_tag_by_id.htm)"
              },
              "response": [
                {
                  "id": "e32f359b-46ff-408b-8799-8e3dd1867949",
                  "name": "POST Add Tags to File in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "List Tags for a File in Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200",
                      "",
                      "tests[\"Response Body contains test tag\"] = responseBody.has(\"test_tag\");"
                    ],
                    "id": "e1d2c0de-7af2-4110-a5d5-1fefca0693f5"
                  }
                }
              ],
              "_postman_id": "03d9829d-3a9c-4347-a787-87398dac37da",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/drive/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/tags",
                "description": "<h2>Description</h2>\nThis operation returns the list of tags assigned to a file or folder that is public shared or resides within a public shared folder in Edge Drive based on the GUID of the file or folder .\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The required parameters were not specified correctly or the GUID of the file or folder is not shared or not part of the shared folder.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or the share has expired or the user does not have access to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The GUID provided in the request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_drive_publicshare_tag_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "ef878266-3196-467c-be9e-08466a484884",
                  "name": "POST Add Tags to File in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Delete Tags in a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "7ace7d80-5384-450d-848d-72e47bb9af3c"
                  }
                }
              ],
              "_postman_id": "624d2f73-dda3-4955-a55a-923225087dae",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{PUBLICSHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags",
                "description": "<h2>Description</h2>\nUse this operation to delete tags from one or more shared files and folders in Edge Drive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required request body or the file or folder information is not provided in the request body or shareId is not specified correctly.</td> \n  </tr> \n  <tr> \n   <td>500</td> \n   <td>Internal Server Error</td> \n   <td>Failed to retrieve the share information.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error caused by one of the following reasons: \n    <ul> \n     <li>Input token does not match</li> \n     <li>Share expired</li> \n     <li>User does not have access to the share</li> \n     <li>User does not have editable rights to the share</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_share_tag.htm)"
              },
              "response": [
                {
                  "id": "fed70d44-6d0b-4c7c-9df1-cd2b8d98f2d9",
                  "name": "DELETE Delete Tags in a Share",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/drive/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:59:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Remove Sharing for Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "d59b3723-ed27-4d89-b0a1-c9d302949ca4"
                  }
                }
              ],
              "_postman_id": "6f6cb22d-3531-4719-a76e-ba3c98b284ca",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/ShareFolder/{{shareId}}",
                "description": "<h2>Description</h2>\nUse this operation to remove the sharing on a file or folder.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share.htm)"
              },
              "response": [
                {
                  "id": "cec3c381-112e-4841-a553-cb93f24e1f02",
                  "name": "DELETE Remove Sharing For Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "49"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:19:18 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GenericResp errorMessage=\"\" errorCode=\"0\" />"
                }
              ]
            },
            {
              "name": "Delete Share Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "e0832331-0477-40a4-87cb-3dd8bc590d7d"
                  }
                }
              ],
              "_postman_id": "246460a9-3f5d-425c-99a8-8fa2d956109e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/drive/file/{{PUBLICSHAREFOLDER_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in Edge Drive using the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_drive_folder.htm)"
              },
              "response": [
                {
                  "id": "f9f13727-4494-4f70-9ec9-f1ddef494d4b",
                  "name": "DELETE Delete Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/drive/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:25:27 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Logout",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200 "
                    ],
                    "id": "5f685752-059e-476c-92d9-6246e730268a"
                  }
                }
              ],
              "_postman_id": "e648afcd-d7cc-47a0-b106-634caf9801ba",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"mode\":4,\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Logout",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "a58e9fed-abbf-4514-bb14-238751202b3e",
                  "name": "POST Logout",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Logout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "plain",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "15"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 20:50:16 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "User logged out"
                }
              ]
            }
          ],
          "_postman_id": "3dcb0b33-c4d4-4b1e-84c4-be554f4630f8",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "b4498f1e-0414-4a13-ab8a-00c3cfa221b1"
    },
    {
      "name": "ObjectStore Operations",
      "item": [
        {
          "name": "File and Folder Operations",
          "item": [
            {
              "name": "Create an ObjectStore",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RootGuid\", jsonData.edgeDriveInfo.rootGUID);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "d0f72509-ca5a-4b10-8baa-e78ebfa10646"
                  }
                }
              ],
              "_postman_id": "d62bcb54-68fe-4a6e-8e6e-97e48310cff3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore?type=testcontentstore",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "testcontentstore"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\r\n\r\nUse this operation to create an ObjectStore.\r\n\r\nEach authorized user can create one ObjectStore.\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore.htm)"
              },
              "response": [
                {
                  "id": "a7990866-8c19-48e6-be56-d290c3d0d4c0",
                  "name": "Create an ObjectStore",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore?type=testcontentstore",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore"
                      ],
                      "query": [
                        {
                          "key": "type",
                          "value": "testcontentstore"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Length",
                      "value": "566",
                      "name": "Content-Length",
                      "description": ""
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8",
                      "name": "Content-Type",
                      "description": ""
                    },
                    {
                      "key": "Date",
                      "value": "Fri, 15 Sep 2017 15:49:06 GMT",
                      "name": "Date",
                      "description": ""
                    },
                    {
                      "key": "Server",
                      "value": "Microsoft-IIS/8.5",
                      "name": "Server",
                      "description": ""
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "ASP.NET",
                      "name": "X-Powered-By",
                      "description": ""
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Tue Jan 19 2038 03:14:07 GMT+0000 (Coordinated Universal Time)",
                      "httpOnly": true,
                      "domain": "greenvalley.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "930C162901E43496C2ED776C7233E414",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":{\r\"errorString\":\"\",\"errorCode\":0,\"entity\":{\r\"subclientPolicyId\":9,\"subclientId\":11,\"applicationId\":33,\"clientName\":\"GeneralObjectStore\",\"backupsetId\":12,\"clientId\":6,\"userId\":1,\"subclientName\":\"admin\",\"backupsetName\":\"admin\"\r}\r},\"edgeDriveInfo\":{\r\"contentIndexingEnabled\":true,\"hasSyncBlackListedLaptop\":false,\"capabilities\":549775216688,\"driveType\":1,\"cloudId\":1,\"dirDelim\":\"\\\\\",\"rootGUID\":\"ed81f682abd54c799fd568ded62ddf64\",\"hasEdgeDriveEnabledLaptop\":false\r},\"syncWebFolder\":{\r\"_type_\":111,\"syncWebFolderId\":345894,\"syncWebFolderName\":\"EdgeDrive\"\r}\r}"
                }
              ]
            },
            {
              "name": "Create Folder by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"FOLDER_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      ""
                    ],
                    "id": "263d3c78-0ded-4d70-924c-864d22bcafc4"
                  }
                }
              ],
              "_postman_id": "3dfb4e9b-8cf7-4674-9e9b-49f074a552f1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<App_FileResourceInfo name=\"{{FolderName}}\"/>",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{RootGuid}}",
                "description": "<h2>Description</h2>\nThis operation creates a new folder in the ObjectStore based on the GUID of the parent folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_folder_by_folderid.htm)"
              },
              "response": [
                {
                  "id": "68c5e979-2db7-4886-8180-1986047194fc",
                  "name": "POST Create Folder by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"{{FolderName}}\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{RootGuid}}"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:43:40 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"fdf49b9e9e5a4e0c8333fbaf47540be2\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Create Folder by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"FOLDER_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "795ae940-06cd-4911-9de1-f53fa22b758f"
                  }
                }
              ],
              "_postman_id": "dec5092d-e31d-4b31-be89-098982d081a8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"{{FolderName}}\",\n  \"parentPath\":\"\\\\\"\n}\n",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/action/createfolder",
                "description": "<h2>Description</h2>\nThis operation creates a new folder in the ObjectStore based on the path to the parent folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_folder_by_folderpath.htm)"
              },
              "response": [
                {
                  "id": "eb678856-46cd-4879-9de8-431459139e3c",
                  "name": "POST Create Folder by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"{{FolderName}}\" parentPath=\"\\\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/action/createfolder"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:45:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "View Folder Properties by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      ""
                    ],
                    "id": "ac93989b-0f90-4742-b019-93b059c37033"
                  }
                }
              ],
              "_postman_id": "f686a8d2-eb53-42bd-9611-b21a929373ae",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/file/{{FOLDER_GUID}}",
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with a file or folder in an ObjectStore based on the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_file_properties_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "c3438717-e219-4e69-a8d2-6d1b22d89fd8",
                  "name": "GET View Folder Properties by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "589"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:46:18 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View Folder Properties by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "e485720d-e48a-408d-86b0-ae1e752be6c3"
                  }
                }
              ],
              "_postman_id": "f954ff55-c7f5-4dec-bf60-ccb913778d99",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/action/metadata?path=\\{{FolderName}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\{{FolderName}}"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation returns the properties associated with a file or folder in an ObjectStore based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_file_properties_by_filepath.htm)"
              },
              "response": [
                {
                  "id": "1216f02d-12c4-4905-b2dd-b0a9ecdd06d8",
                  "name": "View Folder Properties By Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/action/metadata?path=\\{{FolderName}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "action",
                        "metadata"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\{{FolderName}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "589"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:47:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Upload a File",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"FILE1_GUID\", jsonData.fileGUID);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");",
                      "",
                      "tests[\"Response Body contains requestId\"] = responseBody.has(\"requestId\");"
                    ],
                    "id": "34609180-0136-4577-97a8-f520543129a9"
                  }
                }
              ],
              "_postman_id": "a687ae6d-41d3-480a-b683-f441e0884cf9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName1}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "1"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/file/action/upload?uploadType=fullFile",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "fullFile"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nThis operation uploads a single file to the ObjectStore. The API is used for uploading files that are relatively small in size.\n\n<p>For larger files (greater than 4 MB), upload the files in multiple data chunks. For more information, see <a href=http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_chunk_upload.htm>Upload a File in Chunks</a>.</p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. Example: \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \n     </div> \n    </div> <p>When a conflict occurs,</p> \n    <ul> \n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks.</li> \n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \n      <div class=\"cv-ui-codesnippet\"> \n       <div class=\"cv-text-codesnippet\"> \n        <p>/contentstore/file/action/upload?uploadType=fullFile&amp;forceRestart=true</p> \n       </div> \n      </div></li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>413</td> \n   <td>Request Entity Too Large</td> \n   <td>Upload attempted for a large file (greater than 4MB). For large files, upload the files in multiple data chunks. For more information, see <a href=\"article?p=features/rest_api/operations/post_contentstore_chunk_upload.htm\" data-internal=\"true\"> Upload a File in Chunks</a>.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_full_upload.htm)"
              },
              "response": [
                {
                  "id": "65a79482-f6e6-4cae-b7c8-7caeccff64c9",
                  "name": "POST Upload a File",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName1}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "1"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/file/action/upload?uploadType=fullFile",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "fullFile"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "155"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:48:02 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"15322342464093331661621517021214173118130\",\"fileGUID\":\"425a85d118e343f0b7119236f7552b97\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks (1)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RequestId\", jsonData.requestId);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains requestId\"] = responseBody.has(\"requestId\");"
                    ],
                    "id": "bd786b92-0e4f-4888-bfac-0c0d28714272"
                  }
                }
              ],
              "_postman_id": "edac52e7-9cb2-4d47-ae08-eb87ace77388",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName2}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{SecondFileSize}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "0"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "forceRestart",
                      "value": "true"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to initiate the upload session for uploading multiple file chunks to the ObjectStore. Optionally, you can also send the first file chunk along with the request.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. Example: \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \n     </div> \n    </div> <p>When a conflict occurs,</p> \n    <ul> \n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks.</li> \n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \n      <div class=\"cv-ui-codesnippet\"> \n       <div class=\"cv-text-codesnippet\"> \n        <p>/contentstore/file/action/upload?uploadType=fullFile&amp;forceRestart=true</p> \n       </div> \n      </div></li> \n    </ul> </td> \n  </tr> \n  </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_upload_header_request.htm)"
              },
              "response": [
                {
                  "id": "e0fa2d6c-aa79-49db-bdf1-bc690c4691c5",
                  "name": "POST Upload a File in Chunks (1)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName2}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{SecondFileSize}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "0"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "forceRestart",
                          "value": "true"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "109"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:49:52 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"16318591321498902423322210014311314149160\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks (2)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"FILE2_GUID\", jsonData.fileGUID);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");"
                    ],
                    "id": "c7c86ddc-5ec8-4051-97fe-37120bdcdc61"
                  }
                }
              ],
              "_postman_id": "f005ce1d-eaeb-479e-895b-6a207f8194ec",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "1"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/file/action/upload?uploadType=chunkedFile&requestId={{RequestId}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "requestId",
                      "value": "{{RequestId}}"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to upload a chunk or portion of the file data to the ObjectStore.\n\n<p>Before you run this operation, make sure to initiate the upload session to ObjectStore. For details, see <a href=http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_upload_header_request.htm>Initiate an Upload Session to ObjectStore</a>.</p>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_upload_chunk_request.htm)"
              },
              "response": [
                {
                  "id": "d375bd3e-0a36-4def-96d8-f7db3c4e5a38",
                  "name": "POST Upload a File in Chunks (2)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "1"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/file/action/upload?uploadType=chunkedFile&requestId={{RequestId}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "requestId",
                          "value": "{{RequestId}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "99"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:50:35 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":34,\"fileGUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Download a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "02575ed1-ef5c-4d10-ae64-b57fefa218f4"
                  }
                }
              ],
              "_postman_id": "cc8986b6-f2d6-4c86-9dbe-9fbdd4484efc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/action/download",
                "description": "This operation downloads a file in an ObjectStore based on the GUID of the file.\n\n<b>Note:</b> Downloading a folder is currently not supported using this operation.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Download operation is not allowed. This can happen if you attempt to download a folder.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_download_by_id.htm)"
              },
              "response": [
                {
                  "id": "45066c9f-0669-48cb-9a58-8e4f31bdc390",
                  "name": "GET Download a File By ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:52:39 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download a File by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "40095830-cb49-481c-8cb2-5c3f753eacad"
                  }
                }
              ],
              "_postman_id": "71bc087d-e508-482a-becd-8694d0d9c88c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/action/download?path=\\DemoFolder\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "action",
                    "download"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFolder\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\r\nThis operation downloads a file in an ObjectStore based on the file path.\r\n\r\n<b>Note:</b> Downloading a folder is currently not supported using this operation.\r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Download operation is not allowed. This can happen if you attempt to download a folder.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_download_by_path.htm)"
              },
              "response": [
                {
                  "id": "3d2c30ad-f1bb-4fc8-a7f3-a04cb9c766eb",
                  "name": "GET Download a File by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:53:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Preview a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "6de95625-7978-432d-93a4-45bf90a94d31"
                  }
                }
              ],
              "_postman_id": "f1b5aaf9-fe99-426c-9f62-19f039fe182f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/action/preview",
                "description": "<h2>Description</h2>\nThis operation returns the preview of a file in ObjectStore based on the file ID.\n\nPreview is currently supported for all images and Microsoft Office file types.\n\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see  <a href=http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm>Changing the File Size Limit for Preview</a>.</p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_preview_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "274820d9-6f90-420d-9bd4-4fcf3949d45e",
                  "name": "GET Preview a File by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Rename a File by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "93eb1433-acb8-491e-b278-0640b5a5e40a"
                  }
                }
              ],
              "_postman_id": "3d1c3dd5-51b1-49ef-93a4-6f417ba7cc07",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoFolder\\\\DemoFile1.doc\",\n  \"name\":\"DemoFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/action/rename",
                "description": "<h2>Description</h2>\nThis operation renames a file or a folder in the ObjectStore based on the file or folder path.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_folder_rename.htm)"
              },
              "response": [
                {
                  "id": "7fa94973-ea31-44ff-b9c9-b195303d8714",
                  "name": "POST Rename a File by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoFolder\\DemoFile1.doc\" name=\"DemoFile1Renamed.doc\" />"
                    },
                    "url": "{{ServerUrl}}/contentstore/action/rename"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:04:32 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Rename a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "bacfe506-8403-49d7-8358-b1529086b572"
                  }
                }
              ],
              "_postman_id": "94aabfaa-edcb-4b7d-bbe1-100a726bcbe7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/action/rename",
                "description": "<h2>Description</h2>\nThis operation renames a file or a folder in the ObjectStore based on the file or folder GUID.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore_folder_rename.htm)"
              },
              "response": [
                {
                  "id": "f871feb9-f4c3-44e8-ae7b-323165e724a7",
                  "name": "PUT Rename a File by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoFile1Renamed.doc\" />"
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/action/rename"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:55:29 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Add Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "e9bda688-ec5d-4a74-839c-edfdf4c4949a"
                  }
                }
              ],
              "_postman_id": "a27c4e54-2d8a-422b-8f70-776be52d524b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to add new custom properties or modify existing custom properties to individual or multiple files and folders in an ObjectStore based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the custom property is not provided in the request body or the GUID provided in request is not of the file or folder. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_custom_prop_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "cbf489ee-aa76-452c-bbff-35c354745f9d",
                  "name": "POST Add Custom Properties",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_CustomProperties>\r\n<customProps>\r\n  <nameValues name=\"testproperty1\" value=\"testvalue1\"/>\r\n  <nameValues name=\"testproperty2\" value=\"testvalue2\"/>\r\n</customProps>\r\n</App_CustomProperties>"
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:56:08 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GenericResp />"
                }
              ]
            },
            {
              "name": "View Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body Contains Custom Property\"] = responseBody.has(\"testproperty1\");",
                      "",
                      "tests[\"Response Body contains Property Value\"] = responseBody.has(\"testvalue1\");",
                      ""
                    ],
                    "id": "be1e49e0-48c5-4fa2-b790-8e02414abdd4"
                  }
                }
              ],
              "_postman_id": "0f13b8d6-3112-4077-9b1d-db43f05a3bc3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/properties?propertyFilter=testproperty1",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "file",
                    "{{FILE1_GUID}}",
                    "properties"
                  ],
                  "query": [
                    {
                      "key": "propertyFilter",
                      "value": "testproperty1"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to list specific or all custom properties of a file or a folder in an ObjectStore based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file or folder. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_custom_prop_filter_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "1e2e2282-3995-4722-8745-c650660bd1b2",
                  "name": "GET View Custom Properties",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/properties?propertyFilter=testproperty1",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "file",
                        "{{FILE1_GUID}}",
                        "properties"
                      ],
                      "query": [
                        {
                          "key": "propertyFilter",
                          "value": "testproperty1"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "131"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:57:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"error\":{\r\"errorCode\":200\r},\"props\":{\r\"customProps\":{\r\"nameValues\":[\r{\r\"name\":\"testproperty1\",\"values\":[\r\"testvalue1\"\r]\r}\r]\r}\r}\r}"
                }
              ]
            },
            {
              "name": "Delete Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "473912cd-af4c-4805-8da5-2ab8868ae70e"
                  }
                }
              ],
              "_postman_id": "6a825be4-e11e-4fda-81ba-4859280e9bef",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{FILE1_GUID}}\"\r\n      }\r\n   ],\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/properties",
                "description": "<h2>Description</h2>\nUse this operation to delete the custom properties of individual or multiple files and folders in an ObjectStore based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the custom property is not provided in the request body or the GUID provided in request is not of the file or folder. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_custom_property.htm)"
              },
              "response": [
                {
                  "id": "373fdaae-193c-4d61-9657-3b49791fe138",
                  "name": "DELETE Delete Custom Properties",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_CustomPropertiesReq>\r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/>\r\n<customProps> \r\n  <nameValues name=\"testproperty1\" value=\"testvalue1\"/>\r\n  <nameValues name=\"testproperty2\" value=\"testvalue2\"/>\r\n</customProps> \r\n</Api_CustomPropertiesReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "32"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:11 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_CustomPropertiesRespList />"
                }
              ]
            },
            {
              "name": "Add Tags",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "d67a963a-978a-4f64-9644-4d69f46b074e"
                  }
                }
              ],
              "_postman_id": "dc477158-1cd2-4628-8f74-e3a2e91f2923",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"gold,silver\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{FILE1_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/tags",
                "description": "<h2>Description</h2>\nUse this operation to add your own tags to one or more files and folders in an ObjectStore based on the GUID of the file or folder.\n\nTag names can be a combination of letters and numbers. Letters are case-insensitive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Request is missing required request body or file and folder information is not provided in the request body.</td> \n  </tr> \n  </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_tag_by_id.htm)"
              },
              "response": [
                {
                  "id": "48ba52aa-6369-47cc-b9cc-04a514df6e6d",
                  "name": "POST Add Tags",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"gold,silver\"> \r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "20"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_TagsRespList />"
                }
              ]
            },
            {
              "name": "List Tags",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body Contains Tags\"] = responseBody.has(\"tags\");"
                    ],
                    "id": "9aff1fbf-70b7-458e-884b-175b9e38310b"
                  }
                }
              ],
              "_postman_id": "cfe95b8c-43c4-4e29-8718-ef6aeb6f74f3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/tags",
                "description": "<h2>Description</h2>\nThis operation returns the list of tags assigned to a file or folder in an ObjectStore based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or GUID provided in request is not of the file or folder.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_tag_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "20477362-e519-44c5-84bb-61ce7a6184bc",
                  "name": "GET List Tags",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "52"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:59:25 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"tags\":\"gold,silver\",\"error\":{\r\"errorCode\":200\r}\r}"
                }
              ]
            },
            {
              "name": "Delete Tags",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "a53ecf89-fd0d-4a4f-b977-78af2fb2a9b4"
                  }
                }
              ],
              "_postman_id": "95aa43ea-73d8-456c-81fa-da581c091279",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"gold,silver\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{FILE1_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/tags",
                "description": "<h2>Description</h2>\nUse this operation to delete tags from one or more files and folders in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required request body or the file or folder information is not provided in the request body.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_tag.htm)"
              },
              "response": [
                {
                  "id": "ee1e89ab-d9b3-40d0-b4e1-935820cb33b1",
                  "name": "DELETE Delete Tags",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"gold,silver\"> \r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "20"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:00:08 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_TagsRespList />"
                }
              ]
            },
            {
              "name": "View File Versions by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"versionId\", jsonData.fileResources[0].versionGUID);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains parentPath\"] = responseBody.has(\"\\\\DemoFolder\");",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "e08eb3e3-dbeb-473f-9b6a-97a0ffd7c5d5"
                  }
                }
              ],
              "_postman_id": "68634d79-42c1-4590-88ef-964f6cd16496",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/versions",
                "description": "<h2>Description</h2>\nUse this operation to view the first 50 versions of a file in an ObjectStore based on the GUID of the file. The versions are listed in descending order so that the latest version is the top result.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_file_versions_by_id.htm)"
              },
              "response": [
                {
                  "id": "6b2f2ef8-0fa9-4872-81b5-4844ce66a126",
                  "name": "GET View File Versions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}/versions"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "529"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:01:29 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\DemoFolder\",\"GUID\":\"425a85d118e343f0b7119236f7552b97\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fdownload\",\"directory\":false,\"versionGUID\":\"b10b246aca4efefc399075373c0ec04f\",\"path\":\"\\\\DemoFolder\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"name\":\"DemoFile1.doc\"\r}\r]\r}"
                }
              ]
            },
            {
              "name": "View File Versions by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"versionId\", jsonData.fileResources[0].versionGUID);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains parentPath\"] = responseBody.has(\"\\\\DemoFolder\");",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "9690413d-69c2-4d45-9122-7b2e94e3444f"
                  }
                }
              ],
              "_postman_id": "0baca91a-20cb-433b-a2b8-8f3df8a0408f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/file/versions?path=\\{{FolderName}}\\DemoFile1Renamed.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "file",
                    "versions"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\{{FolderName}}\\DemoFile1Renamed.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to view the first 50 versions of a file in an ObjectStore based on the file path. The versions are listed in descending order so that the latest version is the top result.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the GUID provided in request is not of the file. </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_file_versions_by_path.htm)"
              },
              "response": [
                {
                  "id": "cbaf4e1d-8f24-41eb-a7f4-0c5cc05649f8",
                  "name": "GET View File Versions by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/file/versions?path=\\{{FolderName}}\\DemoFile1Renamed.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "file",
                        "versions"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\{{FolderName}}\\DemoFile1Renamed.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "529"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:02:43 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\DemoFolder\",\"GUID\":\"425a85d118e343f0b7119236f7552b97\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002ffile\\u002f425a85d118e343f0b7119236f7552b97\\u002faction\\u002fdownload\",\"directory\":false,\"versionGUID\":\"b10b246aca4efefc399075373c0ec04f\",\"path\":\"\\\\DemoFolder\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"name\":\"DemoFile1.doc\"\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Download a File Version",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "cb09e036-a04a-4170-a865-779b469f7436"
                  }
                }
              ],
              "_postman_id": "c2e41b15-8e88-4db2-ad4e-ae1b58b2f618",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/file/version/{{versionId}}/action/download",
                "description": "<h2>Description</h2>\nThis operation downloads a specific version of a file in an ObjectStore based on the GUID of the file version.\n\n<b>Note:</b> Downloading a folder is currently not supported using this operation.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Download operation is not allowed. This can happen if you attempt to download a folder.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_download_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "dbd2982f-224d-4425-9f75-db86a2fd83bf",
                  "name": "GET Download a File Version",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/file/version/{{versionId}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1Renamed.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:03:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Delete a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "a045bda1-c50b-40ea-977c-99562d7d7dee"
                  }
                }
              ],
              "_postman_id": "21862853-f1f0-480f-b308-55857f3c9d7e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "4b6bd0ab-fa19-4efd-8e4d-4213ede3c1b4",
                  "name": "DELETE Delete a File By ID",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE1_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:04:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Move a File by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "73f78518-0d28-404e-b0f4-6b425bf51ce4"
                  }
                }
              ],
              "_postman_id": "46053438-51c1-40b7-bf81-2915566f4909",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoFolder\\\\DemoFile2.doc\",\n  \"parentPath\":\"\\\\\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/action/move",
                "description": "<h2>Description</h2>\nThis operation moves a file or folder, based on the file/folder path, to another folder within the ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_folder_move.htm)"
              },
              "response": [
                {
                  "id": "5afef5ac-ce2c-48b6-978d-b3fde921fb30",
                  "name": "POST Move a File by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoFolder\\DemoFile2.doc\" parentPath=\"\\\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:18:10 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Move a File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "b8e7754f-c421-4d1d-acd8-9271fb8858a3"
                  }
                }
              ],
              "_postman_id": "69cf0d87-3e2d-4302-8b3c-fbb1bbab3bd2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parentGuid\":\"{{RootGuid}}\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{FILE2_GUID}}/action/move",
                "description": "<h2>Description</h2>\nThis operation moves a file or folder, based on the file or folder GUID, to another folder within the ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore_folder_move.htm)"
              },
              "response": [
                {
                  "id": "aa1ab832-570f-42c7-b7e0-47a0929ad545",
                  "name": "PUT Move a File by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo parentGuid=\"{{RootGuid}}\" />"
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE2_GUID}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:07:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Search Folder Contents by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "9e545daf-812a-4a3f-a227-a9c78f5c8d38"
                  }
                }
              ],
              "_postman_id": "4cce19e8-beae-4afa-b191-f96b5f5e2975",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "text/xml"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/folder/{{RootGuid}}/action/search",
                "description": "<h2>Description</h2>\nUse this operation to search the contents of a folder and its subfolders based on the folder GUID. The API returns the contents that match a specific search criteria.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>GUID is not provided in the request </li> \n     <li>GUID provided in the request is invalid</li> \n     <li>GUID provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_search_by_id.htm)"
              },
              "response": [
                {
                  "id": "3e5063c9-ef56-452c-8263-71e37685e395",
                  "name": "POST Search Folder Contents by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "text/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/folder/{{RootGuid}}/action/search"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:20:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Search Folder Contents by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "93ad512d-01a2-41ef-a11d-7d7c7e579e50"
                  }
                }
              ],
              "_postman_id": "833cbaa7-a299-4ff9-ba6f-d95362597876",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "text/xml"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/folder/{{RootGuid}}/action/search",
                "description": "<h2>Description</h2>\nUse this operation to search the contents of a folder and its subfolders based on the folder path. The API returns the contents that match a specific search criteria.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>Path is not provided in the request </li> \n     <li>Path provided in the request is invalid</li> \n     <li>Path provided in the request is for a file</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Path provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_search_by_path.htm)"
              },
              "response": [
                {
                  "id": "ae1eabdd-da0e-4c86-870c-640651d03d81",
                  "name": "POST Search Folder Contents by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "text/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/action/search?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "action",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:21:28 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "List Folder Contents by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "ac6b6e41-d459-4e5e-8be8-a882d11820f6"
                  }
                }
              ],
              "_postman_id": "40329943-ad4e-4707-aa55-37822789d2f2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/folder/{{RootGuid}}/action/list",
                "description": "<h2>Description</h2>\nUse this operation to list the contents of a folder based on the folder GUID. The result does not include the contents of subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>GUID is not provided in the request </li> \n     <li>GUID provided in the request is invalid</li> \n     <li>GUID provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_list_by_id.htm)"
              },
              "response": [
                {
                  "id": "29f17432-9ef0-4c13-8bcb-4a1f019f17f0",
                  "name": "POST List Folder Contents by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/folder/{{RootGuid}}/action/list"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:22:24 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "List Folder Contents by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains a File\"] = responseBody.has(\"DemoFile2.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "aa6e621e-afd5-44cb-8582-6e9e606a038c"
                  }
                }
              ],
              "_postman_id": "d3c680f4-030e-451e-890d-74e9878bf290",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/action/list?path=\\",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "action",
                    "list"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\nUse this operation to list the contents of a folder based on the folder path. The result does not include the contents of subfolders.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>Path is not provided in the request </li> \n     <li>Path provided in the request is invalid</li> \n     <li>Path provided in the request is for a file</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Path provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_list_by_path.htm)"
              },
              "response": [
                {
                  "id": "a2595792-e651-4bb4-95c8-6072d618bee3",
                  "name": "POST List Folder Contents by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/action/list?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "action",
                        "list"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1359"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:24:36 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499435147,\"parentPath\":\"\\\\\",\"GUID\":\"bc4e07ad25fa4e5d9b0e120b65adafaf\",\"directory\":true,\"versionGUID\":\"c71dc66161a520c63b78c33e527a8920\",\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"209360109\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:45:34.748Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499435147\"\r},{\r\"name\":\"_version_\",\"value\":\"1572271709702062080\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"8fd047f077c5451398aa06217ee8e4b6\",\"sizeinBytes\":34,\"downloadUrl\":\"\\u002fcontentstore\\u002ffile\\u002f8fd047f077c5451398aa06217ee8e4b6\\u002faction\\u002fdownload\",\"versionGUID\":\"f3882110c47fb55e7ab00c17b85ca262\",\"path\":\"\\\\DemoFile2.doc\",\"file\":true,\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFile2.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"142783927\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-07T13:50:35.029Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572277520767647744\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Delete a File by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "91f58917-1506-419a-bd55-069ff712bf16"
                  }
                }
              ],
              "_postman_id": "2e0e3945-f2e5-413f-abf0-b62ca6a2c466",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoFolder\\\\DemoFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/action/delete",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "3e3debb4-e292-4002-8733-fd7115d8c435",
                  "name": "POST Delete a File By Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoFolder\\DemoFile1Renamed.doc\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/action/delete"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:06:20 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete Folder2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "657d6194-0e95-4583-860f-39dcae2b8688"
                  }
                }
              ],
              "_postman_id": "9305d8e8-8049-4f88-940e-e50839c768f9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{SECONDFOLDER_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "7734c9e0-3431-47ad-9c2a-98cabf609894",
                  "name": "DELETE Delete Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:25:27 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "870d4884-b6d5-46ab-b993-93a184e63e76"
                  }
                }
              ],
              "_postman_id": "2d8c9899-85d7-4c4d-87a6-101dd6cf9ed6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{FOLDER_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "0a3ddc1b-b57c-4036-a259-decb38fe8101",
                  "name": "DELETE Delete Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:25:27 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete File2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "d7baab8f-e8fd-4a0c-9eec-2c9ea826cd2a"
                  }
                }
              ],
              "_postman_id": "10ff6310-c0df-4b0a-861a-97152f33efdf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{FILE2_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "40e35399-8aca-4bce-9643-be2ad3d05d26",
                  "name": "DELETE Delete File2",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FILE2_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:26:07 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"TOKEN\", jsonData.token);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains userGUID\"] = responseBody.has(\"userGUID\");",
                      "",
                      "tests[\"Response Body contains token\"] = responseBody.has(\"token\");"
                    ],
                    "id": "783a3944-f66f-46a7-aac4-baecb386938a"
                  }
                }
              ],
              "_postman_id": "bc3ca329-57a1-4c4a-807d-abcb6f7e4d23",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"mode\":4,\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "5d747ea6-e3b9-4d9b-a51d-b8e66ec471af",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Logout",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "847c6a0e-5b88-4b26-9fda-e1ae8fbe6b43"
                  }
                }
              ],
              "_postman_id": "ee960acf-0fc1-493c-8564-8895ed8d46ad",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Logout",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "fa1e0cb0-936c-4c25-bf23-c44f8952e978",
                  "name": "POST Logout",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Logout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "plain",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "15"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:26:33 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "User logged out"
                }
              ]
            }
          ],
          "_postman_id": "8d514787-e1c6-4747-b59d-dd53374f8bce",
          "_postman_isSubFolder": true
        },
        {
          "name": "File and Folder Operations for Shares",
          "item": [
            {
              "name": "Create an ObjectStore",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable(\"FolderName\", \"DemoFolder\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileData\", \"Demo File Content\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileSize\", \"17\");",
                      "",
                      "postman.setEnvironmentVariable(\"SecondFileSize\", \"34\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileModifiedtime\", \"1481595468\");",
                      "",
                      "postman.setEnvironmentVariable(\"ParentFolderPath\", \"XERlbW9Gb2xkZXI=\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName1\", \"RGVtb0ZpbGUxLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName2\", \"RGVtb0ZpbGUyLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"ShareParentFolderPath\", \"XA==\");"
                    ],
                    "id": "52f42807-f518-4bb8-afaf-4322647f0adb"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RootGuid\", jsonData.edgeDriveInfo.rootGUID);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200"
                    ],
                    "id": "e238ca1a-3185-4a2d-b1c5-0f637c9c25d8"
                  }
                }
              ],
              "_postman_id": "953b7d78-e226-4442-bf1b-231e3904adc2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore?type=testcontentstore",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "testcontentstore"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>Use this operation to create an ObjectStore.</p> \r\n<p>Each authorized user can create one ObjectStore. </p> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore.htm)"
              },
              "response": [
                {
                  "id": "aa5b079f-e3a8-4d60-96a3-544e453b7d35",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Create Folder by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"FOLDERSHARE_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "2182f2dc-5366-4071-b2a6-1e295a62373c"
                  }
                }
              ],
              "_postman_id": "32fd6607-22a8-4175-9646-539e594f44cf",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<App_FileResourceInfo name=\"DemoShareFolder\"/>",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{RootGuid}}",
                "description": "<h2>Description</h2>\n<p>This operation creates a new folder in the ObjectStore based on the GUID of the parent folder.</p>\n\n<h2> Supported Error Codes </h2>\n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=\"409\" /&gt; &lt;fileResource parentGuid=\"97409005317b4dbd9c138d2fd80a9e50\" GUID=\"be7d714583584307bf00f1de47212b94\" directory=\"1\" name=\"NewFolder\" path=\"\\Folder1\\NewFolder\" /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_folder_by_folderid.htm)"
              },
              "response": [
                {
                  "id": "d3d1c2ed-c876-467d-a47c-87e35a3c7610",
                  "name": "POST Create Folder by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": ""
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:43:40 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"fdf49b9e9e5a4e0c8333fbaf47540be2\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Share Folder by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"shareId\", jsonData.shareInfo.shareFolder.syncWebFolderId);",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderId\"] = responseBody.has(\"syncWebFolderId\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "8aad7594-534c-4c7a-a167-3a3689570511"
                  }
                }
              ],
              "_postman_id": "c9dfc480-7a16-4a82-805a-a5ea9dc3623c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"status\":0,\r\n   \"sharedToOperationType\":2,\r\n   \"sharedTo\":[\r\n      {\r\n         \"permission\":1,\r\n         \"userType\":1,\r\n         \"user\":{\r\n            \"userName\":\"admin\"\r\n         }\r\n      }\r\n   ],\r\n   \"shareFolder\":{\r\n      \"syncWebFolderName\":\"DemoShareFolder\"\r\n   },\r\n   \"browseInfo\":{\r\n      \"paths\":[\r\n         {\r\n            \"path\":\"\\\\DemoShareFolder\"\r\n         }\r\n      ],\r\n      \"emailInfo\":{\r\n         \"emailMessage\":\"\",\r\n         \"dontSendEmail\":true\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/action/share",
                "description": "<h2>Description</h2>\n<p>Use this operation to share a specific file or folder in an ObjectStore based on the file or folder path.</p>\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>The file or folder is already shared or the specified share name already exists. <p>The response body will have the shareID of the existing share if the file or folder is already shared. The shareID can be used to update the users/user groups to which the file or folder is already shared. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_SharedFoldersResp&gt; &lt;shareInfo&gt; &lt;shareFolder syncWebFolderName=&quot;Test&quot; syncWebFolderId=&quot;10&quot; /&gt; &lt;/shareInfo&gt; &lt;resp errorMessage=&quot;&quot; errorCode=&quot;409&quot; /&gt; &lt;/App_SharedFoldersResp&gt;</p> \n     </div> \n    </div></td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_by_path.htm)"
              },
              "response": [
                {
                  "id": "44244871-be91-4f1b-9697-6e1cb20619d1",
                  "name": "POST Share Folder by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_ShareInfo sharedToOperationType=\"2\" status=\"0\">\r\n    <browseInfo>\r\n    \t<paths path=\"\\DemoShareFolder\"></paths>\r\n        <emailInfo dontSendEmail=\"1\" emailMessage=\"\"/> \r\n    </browseInfo>\r\n    <shareFolder syncWebFolderName=\"DemoShareFolder\"/>\r\n    <sharedTo permission=\"1\" userType=\"1\"> \r\n        <user userName=\"admin\"/> \r\n    </sharedTo>  \r\n</App_ShareInfo>"
                    },
                    "url": "{{ServerUrl}}/contentstore/action/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "375"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:13:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shareInfo\":{\r\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r}\r},\"resp\":{\r\"errorMessage\":\"\",\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Shares",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains clientName\"] = responseBody.has(\"clientName\");",
                      "tests[\"Response Body contains shares\"] = responseBody.has(\"shares\");",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"syncWebFolderName\");",
                      ""
                    ],
                    "id": "78ab51f7-074b-4e50-ac8f-49a2d2cb1162"
                  }
                }
              ],
              "_postman_id": "c4ba0d36-b58f-4344-9f1f-47b60816db5a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share"
              },
              "response": [
                {
                  "id": "80bd9bb6-4c43-4aa5-a3db-dae7112c1136",
                  "name": "GET Shares",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "2233"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:03 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shares\":[\r{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499692414\"\r}\r},{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":827758,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"976968088ab24ab5abccd812e86c6da3\",\"directory\":false\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=CvxBps\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499456490\"\r}\r},{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":310816,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"a314e2dfb88f44218edbeeaa1bc32447\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=lQuH165\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499452896\"\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "View Shared Files and Folders",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains clientName\"] = responseBody.has(\"clientName\");",
                      "tests[\"Response Body contains shares\"] = responseBody.has(\"shares\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"syncWebFolderName\");"
                    ],
                    "id": "7593d9ed-459d-429c-8740-d92be1d45b37"
                  }
                }
              ],
              "_postman_id": "175d46cd-c14c-4ef3-8df1-b8ee227b3ab1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share?shareId={{shareId}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share"
                  ],
                  "query": [
                    {
                      "key": "shareId",
                      "value": "{{shareId}}"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \n<p>Use this operation to view the list of all or specific shared files and folders in one or more ObjectStores. </p> \n<p>To view all or specific shares for a user, see <a href=\"http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_view_shared_files.htm\" data-internal=\"true\">View Shared Files and Folders</a>.</p> \n<p>To remove the share on a folder, see <a href=\"http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share.htm\" data-internal=\"true\">Remove Sharing on a File or Folder</a>.</p> \n<p>To update the share settings, see <a href=\"http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_share_update.htm\" data-internal=\"true\">Change Share Settings</a>.</p> \n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_shares.htm)"
              },
              "response": [
                {
                  "id": "2e10f409-0440-4db5-b72d-fafb7e218b69",
                  "name": "GET View Shared Files and Folders",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share?shareId={{shareId}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share"
                      ],
                      "query": [
                        {
                          "key": "shareId",
                          "value": "{{shareId}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "755"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:07 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shares\":[\r{\r\"ciEnabled\":true,\"userPermission\":2,\"description\":\"\",\"isVisible\":true,\"shareType\":1,\"canReshare\":false,\"hasReshares\":0,\"canUserEdit\":true,\"isExpired\":false,\"status\":0,\"owner\":{\r\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"userName\":\"admin\",\"userId\":1\r},\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r},\"client\":{\r\"clientName\":\"nkatzedge\",\"backupsetId\":13,\"instanceId\":1,\"subclientId\":14,\"clientId\":6,\"applicationId\":33\r},\"lastModified\":{\r\"timeValue\":\"1499692414\"\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Create a Folder in a Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "684d15c4-de3f-424c-bcbb-efe15b6c5c11"
                  }
                }
              ],
              "_postman_id": "557f8ec4-2734-462e-9b02-06d8a1dcf212",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoShareFolder2\",\n  \"parentPath\":\"\\\\\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/createfolder",
                "description": "<h2>Description</h2> \n<p>Use this operation to create a new folder within a shared folder in the ObjectStore based on the shared parent folder path name.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_folder_by_path.htm)"
              },
              "response": [
                {
                  "id": "761ed7ea-760d-444a-a2d7-1afd844dab74",
                  "name": "POST Create a Folder in a Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoShareFolder2\" parentPath=\"\\\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/createfolder"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "209"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:07:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"31c05b2f8eda4edcab778cc2900397bd\",\"directory\":true,\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoShareFolder2\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Create a Folder in a Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"SHAREFOLDER2_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "16ce762d-89b3-4a3d-8e28-46a7c3d8b226"
                  }
                }
              ],
              "_postman_id": "5c0bd21a-5246-47fd-a95f-bc5c7a18d8f8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoShareFolder2\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{FOLDERSHARE_GUID}}",
                "description": "<h2>Description</h2> \n<p>Use this operation to create a new folder within a shared folder in the ObjectStore based on the GUID of the parent folder.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_folder_by_id.htm)"
              },
              "response": [
                {
                  "id": "db1139ea-4c32-4206-941d-94c5a80537b2",
                  "name": "POST Create a Folder in a Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFOLDER_GUID}}"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "209"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:12 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"98930cef06824b14a9b29c6f7192478f\",\"directory\":true,\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoShareFolder2\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Upload File to Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"SHAREFILE_GUID\", jsonData.fileGUID);",
                      "",
                      "tests[\"Validating error code\"] = jsonData.errorCode === 200;"
                    ],
                    "id": "87b20178-e04f-4d9f-93ec-b58820765c53"
                  }
                }
              ],
              "_postman_id": "52d6cd62-7566-4555-a3e1-27b94809456d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName1}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ShareParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "fullFile"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \n<p>Use this operation to create a new folder within a shared folder in the ObjectStore based on the shared parent folder path name.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified parent folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \n     </div> \n    </div> </td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_folder_by_path.htm)"
              },
              "response": [
                {
                  "id": "9ca9b0bb-e5ec-45f2-a7ff-3008f7fbaf87",
                  "name": "POST Upload File to Share",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName1}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ShareParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "fullFile"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "154"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"2201161032277392138012818058417418996155\",\"fileGUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks to Share (1)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"requestId\", jsonData.requestId);",
                      "",
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body Contains requestId\"] = responseBody.has(\"requestId\");"
                    ],
                    "id": "64849e3e-c177-4cda-a95d-5ec277e31b40"
                  }
                }
              ],
              "_postman_id": "73c75124-a5af-43bb-bd76-8d178dbd76c1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName2}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ShareParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "0"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "forceRestart",
                      "value": "true"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>Use this operation to initiate the upload session for uploading multiple file chunks to the shared folder in the ObjectStore. Optionally, you can also send the first file chunk along with the request. </p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. For example: \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \r\n     </div> \r\n    </div> <p>When a conflict occurs,</p> \r\n    <ul> \r\n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/contentstore/file/action/upload?uploadType=chunkedFile&amp;requestId=&quot;13213022088234198160108125214183230586134182&quot;</p> \r\n       </div> \r\n      </div></li> \r\n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/contentstore/file/action/upload?uploadType=chunkedFile&amp;forceRestart=true</p> \r\n       </div> \r\n      </div></li> \r\n    </ul> </td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_upload_header_request.htm)"
              },
              "response": [
                {
                  "id": "2115da08-39b9-461d-8870-3ca4eea13ddb",
                  "name": "POST Upload a File in Chunks to Share (1)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName2}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ShareParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "0"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&forceRestart=true",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "forceRestart",
                          "value": "true"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "110"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 17 Jul 2017 16:11:37 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":0,\"requestId\":\"1061148020523024814815637230331792426414766\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Upload a File in Chunks to Share (2)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      ""
                    ],
                    "id": "165ee31b-f0eb-4286-9bf4-7092b4df706b"
                  }
                }
              ],
              "_postman_id": "96996e40-bfc0-4b57-bfee-d88d132b6b83",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Name",
                    "value": "{{FileName2}}"
                  },
                  {
                    "key": "FileEOF",
                    "value": "1"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "Demo File Content",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&requestId={{requestId}}",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "chunkedFile"
                    },
                    {
                      "key": "requestId",
                      "value": "{{requestId}}"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>Use this operation to initiate the upload session for uploading multiple file chunks to the shared folder in the ObjectStore. Optionally, you can also send the first file chunk along with the request. </p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required headers or file content in the request body.<p>Make sure the parameter values and format in the header request are correct. For example, the header request for file modified time must be specified in UNIX timestamp format (in seconds). Specifying a millisecond value will return an error. Also, the name must be base64 encoded.</p></td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have rights to upload the file or the upload operation is disabled by the administrator by disabling backup activity from the CommCell Console.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>An upload operation is already in progress for the same file. The response body will have the existing requestId and the number of bytes that the web server has already received for the file. For example: \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;DM2ContentIndexing_UploadFileResp requestId=&quot;13213022088234198160108125214183230586134182&quot; chunkOffset=&quot;780830&quot; errorCode=&quot;409&quot; /&gt;</p> \r\n     </div> \r\n    </div> <p>When a conflict occurs,</p> \r\n    <ul> \r\n     <li>Use the same requestID to resume a chunk file upload from the byte offset sent from the server by sending data chunks. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/contentstore/file/action/upload?uploadType=chunkedFile&amp;requestId=&quot;13213022088234198160108125214183230586134182&quot;</p> \r\n       </div> \r\n      </div></li> \r\n     <li>Use the following URL parameter to force restart the upload of the file from the beginning. If this approach is used a new upload request session will be initiated and response will have the requestID.&nbsp; Using the new requestID, the file data can be sent from beginning. \r\n      <div class=\"cv-ui-codesnippet\"> \r\n       <div class=\"cv-text-codesnippet\"> \r\n        <p>/contentstore/file/action/upload?uploadType=chunkedFile&amp;forceRestart=true</p> \r\n       </div> \r\n      </div></li> \r\n    </ul> </td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_upload_header_request.htm)"
              },
              "response": [
                {
                  "id": "f6f9cc0a-2a62-4317-bb97-3a0bac49982a",
                  "name": "POST Upload a File in Chunks to Share (2)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Name",
                        "value": "{{FileName2}}"
                      },
                      {
                        "key": "FileEOF",
                        "value": "1"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "Demo File Content"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=chunkedFile&requestId={{requestId}}",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "chunkedFile"
                        },
                        {
                          "key": "requestId",
                          "value": "{{requestId}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "99"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 17 Jul 2017 16:11:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"fileGUID\":\"404567a386be4fc391a39a7b44ae5d64\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Share File by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderId\"] = responseBody.has(\"syncWebFolderId\");",
                      "tests[\"Response Body contains resp\"] = responseBody.has(\"resp\");",
                      "tests[\"Response Body contains shareInfo\"] = responseBody.has(\"shareInfo\");",
                      "",
                      ""
                    ],
                    "id": "6297afc9-e626-4cbe-a97a-627798be8f83"
                  }
                }
              ],
              "_postman_id": "c902e9ca-01a6-435e-b7e0-d0a97d23fcb3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"status\":0,\r\n   \"sharedToOperationType\":2,\r\n   \"sharedTo\":[\r\n      {\r\n         \"permission\":1,\r\n         \"userType\":1,\r\n         \"user\":{\r\n            \"userName\":\"admin\"\r\n         }\r\n      }\r\n   ],\r\n   \"shareFolder\":{\r\n      \"syncWebFolderName\":\"DemoShareFolder\"\r\n   },\r\n   \"browseInfo\":{\r\n      \"emailInfo\":{\r\n         \"emailMessage\":\"\",\r\n         \"dontSendEmail\":true\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{SHAREFILE_GUID}}/action/share",
                "description": "<h2>Description</h2> \n<p>Use this operation to share a specific file or folder in an ObjectStore based on the GUID of the file or folder.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>The file or folder is already shared or the specified share name already exists. <p>The response body will have the shareID of the existing share if the file or folder is already shared. The shareID can be used to update the users/user groups to which the file or folder is already shared. For example:</p> \n    <div class=\"cv-ui-codesnippet\"> \n     <div class=\"cv-text-codesnippet\"> \n      <p>&lt;App_SharedFoldersResp&gt; &lt;shareInfo&gt; &lt;shareFolder syncWebFolderName=&quot;Test&quot; syncWebFolderId=&quot;10&quot; /&gt; &lt;/shareInfo&gt; &lt;resp errorMessage=&quot;&quot; errorCode=&quot;409&quot; /&gt; &lt;/App_SharedFoldersResp&gt;</p> \n     </div> \n    </div></td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_by_id.htm)"
              },
              "response": [
                {
                  "id": "c4509746-d8cf-4670-9702-c063b496752e",
                  "name": "POST Share File by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_ShareInfo sharedToOperationType=\"2\" status=\"0\">\r\n    <browseInfo> \r\n        <emailInfo dontSendEmail=\"1\" emailMessage=\"\"/> \r\n    </browseInfo>\r\n    <shareFolder syncWebFolderName=\"DemoShareFolder\"/>\r\n    <sharedTo permission=\"1\" userType=\"1\"> \r\n        <user userName=\"admin\"/> \r\n    </sharedTo>  \r\n</App_ShareInfo>"
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{SHAREFILE_GUID}}/action/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "378"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:19:37 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shareInfo\":{\r\"shareFolder\":{\r\"syncWebFolderId\":987326,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"881e1017d258454caf9bce7b1eb1b62a\",\"directory\":false\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=iloXGdx7X\",\"dontSendEmail\":true\r}\r}\r},\"resp\":{\r\"errorMessage\":\"\",\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "List Contents of a Folder in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      ""
                    ],
                    "id": "5ce854bf-9b5b-45d3-80b3-51ab0aa3d007"
                  }
                }
              ],
              "_postman_id": "c6509105-5a66-4557-86b5-65ad6b32a854",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/folder/{{FOLDERSHARE_GUID}}/action/list",
                "description": "<h2>Description</h2> \n<p>Use this operation to list the contents of a shared folder or the contents of a folder within a shared folder based on the folder GUID. The result does not include the contents of subfolders.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>GUID is not provided in the request </li> \n     <li>GUID provided in the request is invalid</li> \n     <li>GUID provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_list_by_id.htm)"
              },
              "response": [
                {
                  "id": "b4012f08-ef84-49cf-9e2f-c9370d607861",
                  "name": "POST List Contents of a Folder in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/folder/{{SHAREFOLDER_GUID}}/action/list"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1462"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:16:25 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                },
                {
                  "id": "e202ac00-c91d-4584-89cd-befc11f98098",
                  "name": "POST List Contents of a Folder in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/folder/{{SHAREFOLDER_GUID}}/action/list"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1462"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:17:47 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "List Contents of a Folder in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "32d20ba9-c59b-4d32-83da-b293b3ac4aaa"
                  }
                }
              ],
              "_postman_id": "ccddacbd-edc4-4eb1-8932-fff549d51319",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/list?path=\\",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "action",
                    "list"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \n<p>Use this operation to list the contents of a shared folder or the contents of a folder within a shared folder based on the folder path. The result does not include the contents of subfolders.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Error caused due to one of the following reasons: \n    <ul> \n     <li>Path is not provided in the request </li> \n     <li>Path provided in the request is invalid</li> \n     <li>Path provided in the request is for a file.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Path provided in the request is not found.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_list_by_path.htm)"
              },
              "response": [
                {
                  "id": "10130cc2-068f-4313-930d-139d490b30c3",
                  "name": "POST List Contents of a Folder in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/list?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "action",
                        "list"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1462"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:30:48 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Search Contents of a Folder in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "",
                      ""
                    ],
                    "id": "b6a11080-8a12-41cd-bada-db5ec31e24a5"
                  }
                }
              ],
              "_postman_id": "cc7a668f-cfa0-4490-9a76-f73b55b483c4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/folder/{{FOLDERSHARE_GUID}}/action/search",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to search the contents of a shared folder or the contents of a folder within a shared folder based on the folder GUID. The API returns the contents that match a specific search criteria for the folder and its subfolders. </p> \r\n\r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>Error caused due to one of the following reasons: \r\n    <ul> \r\n     <li>GUID is not provided in the request </li> \r\n     <li>GUID provided in the request is invalid</li> \r\n     <li>GUID provided in the request is for a file.</li> \r\n    </ul> </td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>GUID provided in the request is not found.</td> \r\n  </tr> \r\n </tbody> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_search_by_id.htm)"
              },
              "response": [
                {
                  "id": "57c8d234-05e7-4816-b90e-74185b6f90cd",
                  "name": "POST Search Contents of a Folder in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/folder/{{SHAREFOLDER_GUID}}/action/search"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "2019"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:37:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698163,\"parentPath\":\"872129\",\"GUID\":\"71526c578c79490b8b3cf0cac315ef2c\",\"directory\":true,\"versionGUID\":\"3a8d4aa5a817456d19abf08295070c2e\",\"path\":\"\\\\\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoShareFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"770263453\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:49:11.281Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698163\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547501848788992\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Search Contents of a Folder in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 202;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoShareFolder\");",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      ""
                    ],
                    "id": "361b1f0c-5818-416f-a100-edf7a0e46f64"
                  }
                }
              ],
              "_postman_id": "ce637182-8a68-42fe-9c42-e8715f6d4575",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/search?path=\\",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "action",
                    "search"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>Use this operation to search the contents of a shared folder or the contents of a folder within a shared folder based on the folder GUID. The API returns the contents that match a specific search criteria for the folder and its subfolders. </p> \r\n\r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>Error caused due to one of the following reasons: \r\n    <ul> \r\n     <li>Path is not provided in the request </li> \r\n     <li>Path provided in the request is invalid</li> \r\n     <li>Path provided in the request is for a file.</li> \r\n    </ul> </td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>Path provided in the request is not found.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_search_by_path.htm)"
              },
              "response": [
                {
                  "id": "1fe6a956-e74f-4ac6-92ce-61487bb2a978",
                  "name": "POST Search Contents of a Folder in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/search?path=\\",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "action",
                        "search"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "2019"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:39:12 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResources\":[\r{\r\"modifiedTime\":1499698163,\"parentPath\":\"872129\",\"GUID\":\"71526c578c79490b8b3cf0cac315ef2c\",\"directory\":true,\"versionGUID\":\"3a8d4aa5a817456d19abf08295070c2e\",\"path\":\"\\\\\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoShareFolder\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"770263453\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:49:11.281Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698163\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547501848788992\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1499698229,\"parentPath\":\"\\\\\",\"GUID\":\"e8944b26d9b840a7964cee1672e1cd02\",\"directory\":true,\"versionGUID\":\"ebf426ef3cd6aea50502529c4e6c07f8\",\"path\":\"\\\\DemoShareFolder2\",\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoShareFolder2\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"1365525151\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:15.248Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499698229\"\r},{\r\"name\":\"_version_\",\"value\":\"1572547570448728064\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"c008ad609d9349858e3480ff69ebcc87\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fshare\\u002f606138\\u002ffile\\u002fc008ad609d9349858e3480ff69ebcc87\\u002faction\\u002fdownload\",\"versionGUID\":\"cbed29a343c2f75ce4b9ffb5fda3a65a\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"71526c578c79490b8b3cf0cac315ef2c\",\"name\":\"DemoFile1.doc\",\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"736594777\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T14:50:42.844Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"tags_custom\",\"value\":\"test_tag\"\r},{\r\"name\":\"_version_\",\"value\":\"1572548159382487040\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r}\r]\r}"
                }
              ]
            },
            {
              "name": "Shared Folder Properties By ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      ""
                    ],
                    "id": "8f6d829f-b482-4a70-8657-b8914fbe8898"
                  }
                }
              ],
              "_postman_id": "569804c6-794d-4a8b-8b4e-bc46c34c17fb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{FOLDERSHARE_GUID}}"
              },
              "response": [
                {
                  "id": "aacbd4df-6510-4186-ba29-02ae4216db51",
                  "name": "GET Shared Folder Properties by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "603"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:19:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1499692406,\"parentPath\":\"\\\\\",\"GUID\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true,\"versionGUID\":\"b1a80858edf939f7d5fb2a04dcb755cb\",\"path\":\"\\\\\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoShareFolder\",\"canUserEdit\":true,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"296170714\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T13:13:02.278Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1499692406\"\r},{\r\"name\":\"_version_\",\"value\":\"1572541465026887680\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Shared File Versions By ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains Demo File Content\"] = responseBody.has(\"Demo File Content\");",
                      ""
                    ],
                    "id": "6f1dfed6-e6a8-42e7-ad2d-42d619df11e3"
                  }
                }
              ],
              "_postman_id": "34c095f7-dd3a-4626-9b67-8c27751cc184",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/html"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/preview"
              },
              "response": []
            },
            {
              "name": "View File Properties in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "",
                      "tests[\"Reponse Body Contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body Contains File Name\"] = responseBody.has(\"DemoFile1.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "9f6b314c-59d0-4062-a526-e45d88f3c7a9"
                  }
                }
              ],
              "_postman_id": "5e4b5c60-a624-4898-b983-4c3c741f5599",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}",
                "description": "<h2>Description</h2> \r\n<p>This operation returns the properties associated with a file or folder within a shared folder in the ObjectStore based on the file or folder GUID.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have access to the share or the file/folder requested is not accessible inside the share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_properties_by_id.htm)"
              },
              "response": [
                {
                  "id": "9c6c8868-eae7-48ad-b920-e336f6555c33",
                  "name": "GET View File Properties in Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "874"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:19:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fdownload\",\"versionGUID\":\"2538013ac95dc2554e1d8e97d84b3bd9\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoFile1.doc\",\"canUserEdit\":true,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"714151532\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T13:14:48.381Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572541564311306240\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "View File Properties in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "",
                      "tests[\"Reponse Body Contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body Contains File Name\"] = responseBody.has(\"DemoFile1.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "3e4ecdf2-025b-4026-92e1-80c30964b29a"
                  }
                }
              ],
              "_postman_id": "b2d56936-2efe-42fe-bd40-9851dbb4c5a0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>This operation returns the properties associated with a file or folder within a shared folder in the ObjectStore based on the file or folder GUID.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have access to the share or the file/folder requested is not accessible inside the share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_properties_by_id.htm)"
              },
              "response": [
                {
                  "id": "596aa6b6-258c-408e-8ab6-220fc45d8fc6",
                  "name": "GET View File Properties in Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "action",
                        "metadata"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "874"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fshare\\u002f254769\\u002ffile\\u002f881e1017d258454caf9bce7b1eb1b62a\\u002faction\\u002fdownload\",\"versionGUID\":\"2538013ac95dc2554e1d8e97d84b3bd9\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"name\":\"DemoFile1.doc\",\"canUserEdit\":true,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"714151532\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T13:14:48.381Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572541564311306240\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Download File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains Demo File Content\"] = responseBody.has(\"Demo File Content\");",
                      ""
                    ],
                    "id": "3a929a2e-02ff-4397-b60a-06dd93eb8f0d"
                  }
                }
              ],
              "_postman_id": "545d0708-4425-4faf-a5d7-48b098e0da8c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/download",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to download a shared file in the ObjectStore based on the GUID of the file.</p> \r\n<p><b>Note</b>: Downloading a shared folder is currently not supported using this operation.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Error cased due to one of the following reasons: \r\n    <ul> \r\n     <li>The user does not have access to the share </li> \r\n     <li>The file requested is not accessible inside the share </li> \r\n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \r\n    </ul> </td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_download_by_id.htm)"
              },
              "response": [
                {
                  "id": "49b9ca6f-6ca0-4cd4-a572-851b31278263",
                  "name": "GET Download File in Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:22 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains Demo File Content\"] = responseBody.has(\"Demo File Content\");",
                      ""
                    ],
                    "id": "0f0e2cc1-312d-4132-ab25-0bc475352405"
                  }
                }
              ],
              "_postman_id": "8d4e2ae6-66a2-4896-9703-48ef8bea4d3a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/download?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "action",
                    "download"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \n<p>This operation downloads a shared file in an ObjectStore based on the file path.</p> \n<p><b>Note</b>: Downloading a folder is currently not supported using this operation.</p> \n\n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error cased due to one of the following reasons: \n    <ul> \n     <li>The user does not have access to the share </li> \n     <li>The file requested is not accessible inside the share </li> \n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_download_by_path.htm)"
              },
              "response": [
                {
                  "id": "092ec6f7-6406-4d42-a658-9dfd46673dde",
                  "name": "GET Download File in Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/download?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "action",
                        "download"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:26 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download File Version in Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains Demo File Content\"] = responseBody.has(\"Demo File Content\");",
                      ""
                    ],
                    "id": "a8095c63-fa72-468c-8622-405c3743e06d"
                  }
                }
              ],
              "_postman_id": "51a905f2-051e-4159-8a3c-c0578029c253",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/version/{{SHAREFILE_GUID}}/action/download",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to download a shared file in the ObjectStore based on the GUID of the file.</p> \r\n<p><b>Note</b>: Downloading a shared folder is currently not supported using this operation.</p> \r\n\r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Error cased due to one of the following reasons: \r\n    <ul> \r\n     <li>The user does not have access to the share </li> \r\n     <li>The file requested is not accessible inside the share </li> \r\n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \r\n    </ul> </td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_download_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "5dfc092f-da5c-4045-aecb-a546f9e37ff9",
                  "name": "GET Download File Version in Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/version/{{SHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:37 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Preview File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Reponse Body contains DemoFile1\"] = responseBody.has(\"DemoFile1.doc\");",
                      "",
                      "tests[\"Reponse Body contains timestamp\"] = responseBody.has(\"timestamp\");",
                      ""
                    ],
                    "id": "0c32dd83-590b-4553-9f66-d30317945d64"
                  }
                }
              ],
              "_postman_id": "6df60eb6-a6c4-4238-a26b-a71022f6f188",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}",
                "description": "<h2>Description</h2> \r\n<p>This operation returns the preview for a shared file or a file within a shared folder in an ObjectStore based on the file ID.</p> \r\n<p>Preview is currently supported for images and Microsoft Office file types. </p> \r\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=\"http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm\" data-internal=\"true\">Changing the File Size Limit for Preview</a>.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>The file or folder is already shared or the specified share name already exists. <p>The response body will have the shareID of the existing share if the file or folder is already shared. The shareID can be used to update the users/user groups to which the file or folder is already shared. For example:</p> \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;App_SharedFoldersResp&gt; &lt;shareInfo&gt; &lt;shareFolder syncWebFolderName=&quot;Test&quot; syncWebFolderId=&quot;10&quot; /&gt; &lt;/shareInfo&gt; &lt;resp errorMessage=&quot;&quot; errorCode=&quot;409&quot; /&gt; &lt;/App_SharedFoldersResp&gt;</p> \r\n     </div> \r\n    </div></td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_preview_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "2c91b82f-f1c2-49b7-8969-9a72ed300042",
                  "name": "GET Preview File in Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "919"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:43:29 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_FileResourceResponse><fileResource modifiedTime=\"1481595468\" previewUrl=\"/contentstore/share/606138/file/c008ad609d9349858e3480ff69ebcc87/action/preview\" parentPath=\"\\\" GUID=\"c008ad609d9349858e3480ff69ebcc87\" sizeinBytes=\"17\" downloadUrl=\"/contentstore/share/606138/file/c008ad609d9349858e3480ff69ebcc87/action/download\" versionGUID=\"cbed29a343c2f75ce4b9ffb5fda3a65a\" path=\"\\DemoFile1.doc\" file=\"1\" parentGuid=\"71526c578c79490b8b3cf0cac315ef2c\" name=\"DemoFile1.doc\" canUserEdit=\"1\"><customProperties><nameValues name=\"IS_VISIBLE\" value=\"true\" /><nameValues name=\"cvfsuniqueid\" value=\"736594777\" /><nameValues name=\"timestamp\" value=\"2017-07-10T14:50:42.844Z\" /><nameValues name=\"mtmstr\" value=\"1481595468\" /><nameValues name=\"tags_custom\" value=\"test_tag\" /><nameValues name=\"_version_\" value=\"1572548159382487040\" /><nameValues name=\"CI_STATUS\" value=\"0\" /></customProperties></fileResource><error /></App_FileResourceResponse>"
                }
              ]
            },
            {
              "name": "Preview File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Reponse Body contains DemoFile1\"] = responseBody.has(\"DemoFile1.doc\");",
                      "",
                      "tests[\"Reponse Body contains timestamp\"] = responseBody.has(\"timestamp\");"
                    ],
                    "id": "e675d4e1-3b6c-442f-a1bf-df380e7fdd3c"
                  }
                }
              ],
              "_postman_id": "850ce799-e2dd-4cd6-9702-d639131ad116",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}",
                "description": "<h2>Description</h2> \n<p>This operation returns the preview for a shared file or a file within a shared folder in an ObjectStore based on the file path.</p> \n<p>Preview is currently supported for all images and Microsoft Office file types. </p> \n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=\"article?p=products/web_console/t_wcnsl_admin_preview_size.htm\" data-internal=\"true\">Changing the File Size Limit for Preview</a>.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_preview_by_filepath.htm)"
              },
              "response": [
                {
                  "id": "8517fc8a-423d-45f9-b53b-c2de2728996b",
                  "name": "GET Preview File in Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/preview?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "action",
                        "preview"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 15:45:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Add Tags to File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains response\"] = responseBody.has(\"response\");"
                    ],
                    "id": "d1bf012a-ed6f-4e6a-881e-f70b84aff9ee"
                  }
                }
              ],
              "_postman_id": "e47d7ed6-3109-4941-a6aa-44ccb851065c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{SHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to add your own tags to one or more files and folders within a shared folder in an ObjectStore based on the GUID of the file or folder.</p> \r\n<p>Tag names can be a combination of letters and numbers. Letters are case-insensitive.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>Request is missing required request body or file and folder information is not provided in the request body.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_tag_by_id.htm)"
              },
              "response": [
                {
                  "id": "0807fd13-3692-413e-8aa2-fd4ed5c6942b",
                  "name": "POST Add Tags to File in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "List Tags in a Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains tag\"] = responseBody.has(\"test_tag\");"
                    ],
                    "id": "b1f4463f-86f7-4835-938b-588a29b1b361"
                  }
                }
              ],
              "_postman_id": "68945526-7990-439a-a86d-5d449a69dad2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/tags",
                "description": "<h2>Description</h2> \n<p>This operation returns the list of tags assigned to a file or folder that is shared or resides within a shared folder in ObjectStore based on the GUID of the file or folder.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The required parameters were not specified correctly or the GUID of the file or folder is not shared or not part of the shared folder.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or the share has expired or the user does not have access to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The GUID provided in the request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_tag_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "a77a85a5-e99a-40dc-9376-a7b3f9d9e5a5",
                  "name": "GET List Tags in a Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "49"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:59:53 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"tags\":\"test_tag\",\"error\":{\r\"errorCode\":200\r}\r}"
                }
              ]
            },
            {
              "name": "Delete Tags in a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains response\"] = responseBody.has(\"response\");"
                    ],
                    "id": "1b7238b2-de2e-4071-9ce6-52165340e7c5"
                  }
                }
              ],
              "_postman_id": "7e0cce6d-0491-4bf0-b948-2a1c2e9bee54",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{SHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags",
                "description": "<h2>Description</h2> \n<p>Use this operation to delete tags from one or more shared files and folders in an ObjectStore. </p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required request body or the file or folder information is not provided in the request body or shareId is not specified correctly.</td> \n  </tr> \n  <tr> \n   <td>500</td> \n   <td>Internal Server Error</td> \n   <td>Failed to retrieve the share information.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error caused by one of the following reasons: \n    <ul> \n     <li>Input token does not match</li> \n     <li>Share expired</li> \n     <li>User does not have access to the share</li> \n     <li>User does not have editable rights to the share</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_share_tag.htm)"
              },
              "response": [
                {
                  "id": "3a9d2351-15ca-4f8d-a109-e5bc5fd81a8e",
                  "name": "DELETE Delete Tags in a Share",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:59:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Rename File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "650340c1-b142-4738-a570-31b972255485"
                  }
                }
              ],
              "_postman_id": "a0b36e9a-29ec-4fef-8ccf-6f5b6e986d76",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoShareFile1.doc\",\n  \"name\":\"DemoShareFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/rename",
                "description": "<h2>Description</h2> \n<p>Use this operation to rename a file or a folder within a shared folder in the ObjectStore, based on the  file or folder path. </p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>The user does not have access to the share or the file/folder to be rename is not accessible inside the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n  <tr> \n   <td>409</td> \n   <td>Conflict</td> \n   <td>A file or folder with the specified new name already exists in the specified location.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_folder_rename.htm)"
              },
              "response": []
            },
            {
              "name": "Rename File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "6365c839-a655-44a7-98d4-b44e43b34076"
                  }
                }
              ],
              "_postman_id": "e3e1883d-1885-40fc-82e1-0033959742da",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\":\"DemoShareFile1Renamed.doc\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/rename",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to rename a file or a folder within a shared folder in the ObjectStore, based on the GUID of the file or folder.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have access to the share or the file/folder to be rename is not accessible inside the share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>A file or folder with the specified new name already exists in the specified location.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore_share_folder_rename.htm)"
              },
              "response": [
                {
                  "id": "a566b5c4-3e9d-473d-bcd7-d0cf29b42d37",
                  "name": "PUT Rename File in Share by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"DemoShareFile1Renamed.doc\" />"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/rename"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:41 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "Move File in Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "0356266e-fde7-4260-95c9-6e7e33b1b646"
                  }
                }
              ],
              "_postman_id": "a4d337fe-b090-43b5-a11d-ddfbe9fa17d4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoShareFile1Renamed.doc\",\n  \"parentPath\":\"\\\\DemoShareFolder2\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/move",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to rename a file or a folder within a shared folder in the ObjectStore, based on the GUID of the file or folder.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file/folder name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>The user does not have access to the share or the file/folder to be rename is not accessible inside the share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>A file or folder with the specified new name already exists in the specified location.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore_share_folder_move.htm)"
              },
              "response": [
                {
                  "id": "142080ab-c834-49b5-8d07-2d3ac47f48f7",
                  "name": "POST Move File in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFile1Renamed.doc\" parentPath=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Move File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "99c14995-76b4-48ae-bd6f-33ba0d54cf85"
                  }
                }
              ],
              "_postman_id": "34dd1182-24d0-47e4-bb42-6919fd5a6af7",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"parentGuid\":\"{{SHAREFOLDER2_GUID}}\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/move",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to rename a file or a folder within a shared folder in the ObjectStore, based on the GUID of the file or folder.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Error caused due to one of the following reasons: \r\n    <ul> \r\n     <li>The user lost access to the share </li> \r\n     <li>The file/folder to be moved is not part of the specified share. </li> \r\n     <li>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</li> \r\n    </ul> </td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>A file or folder with the specified new name already exists in the specified location.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore_share_folder_move.htm)"
              },
              "response": [
                {
                  "id": "23eec500-f178-4377-ad15-792e4c68edc2",
                  "name": "PUT Move File in Share by ID",
                  "originalRequest": {
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo parentGuid=\"{{SHAREFOLDER_GUID}}\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Add Custom Properties to File in a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "12d87ef6-8300-4225-ada1-aea32e598f6d"
                  }
                }
              ],
              "_postman_id": "5960df53-3bcc-414a-941d-9a1d384c2eb2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2> \n<p>Use this operation to add new custom properties or modify existing custom properties to individual or multiple files and folders that are shared or reside within a shared folder in an ObjectStore based on the GUID of the file or folder.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or the custom property is not provided in the request body or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or User does not have access or editable rights to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_custom_prop_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "c0ec23bd-3def-4306-98f8-ff03005178b0",
                  "name": "POST Move File in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFile1Renamed.doc\" parentPath=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "View Custom Properties of a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "a04eedf0-a44b-455d-86da-2ca0a5b8d60a"
                  }
                }
              ],
              "_postman_id": "8a5220b3-b90b-4cbb-ab0d-10c47111e94b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to list specific or all custom properties of a file or folder that is shared or resides within a shared folder in an ObjectStore based on the GUID of the file or folder.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>Required parameters were not specified correctly or invalid path inside share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Input token does not match or share has expired or the user does not have access to this share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_share_custom_prop_filter_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "955c6680-6c7d-4a64-b87a-d870775aff2a",
                  "name": "GET View Custom Properties of a Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFILE_GUID}}/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "110"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GetCustomPropertyResp><error errorCode=\"200\" /><props><customProps /></props></App_GetCustomPropertyResp>"
                }
              ]
            },
            {
              "name": "Delete Custom Properties",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "4c3b6bd8-6a36-4615-8dcd-3fa7defc8afe"
                  }
                }
              ],
              "_postman_id": "67fa5dc6-6826-4e02-ab71-c65801fdff54",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{SHAREFILE_GUID}}\"\r\n      }\r\n   ],\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/properties",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to delete the custom properties of individual or multiple files and folders that are shared or resides within a shared folder in an ObjectStore based on the GUID of the file or folder.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>Required parameters were not specified correctly or invalid path inside share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Input token does not match or share has expired or the user does not have access to this share.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_share_custom_property.htm)"
              },
              "response": [
                {
                  "id": "4989be78-d851-47cc-a9df-450918f443db",
                  "name": "DELETE Delete Custom Properties",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_CustomPropertiesReq>\r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/>\r\n<customProps> \r\n  <nameValues name=\"testproperty1\" value=\"testvalue1\"/>\r\n  <nameValues name=\"testproperty2\" value=\"testvalue2\"/>\r\n</customProps> \r\n</Api_CustomPropertiesReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "32"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:11 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_CustomPropertiesRespList />"
                }
              ]
            },
            {
              "name": "Change Share Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "26b22c92-207c-439c-92c4-bffff2137b1d"
                  }
                }
              ],
              "_postman_id": "48584bb7-fa32-4c6d-aca2-399d0e67111a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"shareInfo\":{\r\n      \"status\":0,\r\n      \"sharedToOperationType\":1,\r\n      \"sharedTo\":[\r\n         {\r\n            \"permission\":1,\r\n            \"userType\":1,\r\n            \"user\":{\r\n               \"userName\":\"{{userName}}\"\r\n            }\r\n         },\r\n         {\r\n            \"permission\":1,\r\n            \"userType\":2,\r\n            \"email\":\"\"\r\n         },\r\n         {\r\n            \"permission\":2,\r\n            \"userType\":3,\r\n            \"group\":{\r\n               \"userGroupName\":\"Testgroup\"\r\n            }\r\n         },\r\n         {\r\n            \"permission\":1,\r\n            \"userType\":1,\r\n            \"user\":{\r\n               \"userName\":\"admin\"\r\n            }\r\n         }\r\n      ],\r\n      \"shareFolder\":{\r\n         \"syncWebFolderName\":\"{{shareId}}\"\r\n      },\r\n      \"browseInfo\":{\r\n         \"emailInfo\":{\r\n            \"emailMessage\":\"\",\r\n            \"dontSendEmail\":true\r\n         }\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/ShareFolder/{{shareId}}",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to add, modify or delete users or change the share and user permissions on a shared file or folder.</p> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_share_update.htm)"
              },
              "response": []
            },
            {
              "name": "Delete Folder in a Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "790740a2-26cb-412d-921d-5756d50d6a46"
                  }
                }
              ],
              "_postman_id": "f0301c60-2476-43a5-949b-981a8b5c9ae8",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFOLDER2_GUID}}",
                "description": "<h2>Description</h2> \r\n<p>This operation deletes a file or a folder in an ObjectStore.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the specified new parent folder name is not valid.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>Error caused due to one of the following reasons: \r\n    <ul> \r\n     <li>The user lost access to the share </li> \r\n     <li>The file/folder to be moved is not part of the specified share. </li> \r\n     <li>Move operation is not allowed. This can happen if you attempt to move a folder to one of its child folders.</li> \r\n    </ul> </td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder or the specified new parent folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>A file or folder with the specified new name already exists in the specified location.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "3a13fbc8-d026-492c-b1e7-655f5170314f",
                  "name": "DELETE Delete Folder in a Share by ID",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{SHAREFOLDER2_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 20:46:14 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Delete Folder in a Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "29f87970-45bc-4237-83d0-d47fbe2fdb7d"
                  }
                }
              ],
              "_postman_id": "6890bd42-4442-4c03-9a0c-f1d064a07cbc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"path\":\"\\\\DemoShareFolder2\"\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/delete",
                "description": "<h2>Description</h2> \n<p>This operation returns the preview of a file in an ObjectStore based on the file path.</p> \n<p>Preview is currently supported for all images and Microsoft Office file types. </p> \n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=\"article?p=products/web_console/t_wcnsl_admin_preview_size.htm\" data-internal=\"true\">Changing the File Size Limit for Preview</a>.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_preview_by_filepath.htm)"
              },
              "response": [
                {
                  "id": "42f8fba1-eac3-42d0-9cf5-b187f802a736",
                  "name": "POST Delete Folder in a Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/delete"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 17:07:46 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Remove Sharing for Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "d86181fd-203b-407a-81e2-f534807a0f43"
                  }
                }
              ],
              "_postman_id": "57961313-4b80-4ac0-af7c-5757697e9598",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/ShareFolder/{{shareId}}",
                "description": "<h2>Description</h2> \n<p>This operation deletes a file or a folder in an ObjectStore.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "a4d688dd-50a8-456f-b1be-1e044545040b",
                  "name": "DELETE Remove Sharing For Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "49"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:19:18 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GenericResp errorMessage=\"\" errorCode=\"0\" />"
                }
              ]
            },
            {
              "name": "Delete Share Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "1618af5d-c933-4bc2-bbe6-83037c778e67"
                  }
                }
              ],
              "_postman_id": "ad623b28-1f76-45b7-9ed6-5ecbccc01778",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{FOLDERSHARE_GUID}}",
                "description": "<h2>Description</h2> \n<p>This operation deletes a file or a folder in an ObjectStore.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "3984dad0-786d-47e8-9ce5-63ae2472cda0",
                  "name": "DELETE Delete Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:25:27 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Logout",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "57c9f443-367a-4ca7-8954-f3567a64cae4"
                  }
                }
              ],
              "_postman_id": "60735856-f293-4b42-b248-ffc2a1e94cf1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Logout",
                "description": "<h2> Description </h2>\r\n<p>Commvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.</p> \r\n<p><b>Note:</b> The authentication token expires after 30 minutes of inactivity.</p> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "5ed96caf-df55-49b6-bd06-9f41cf1890b2",
                  "name": "POST Logout",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Logout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "plain",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "15"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 20:50:16 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "User logged out"
                }
              ]
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"TOKEN\", jsonData.token);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains userGUID\"] = responseBody.has(\"userGUID\");",
                      "",
                      "tests[\"Response Body contains token\"] = responseBody.has(\"token\");"
                    ],
                    "id": "ddf5cb3e-4372-4b62-93fb-c28e91861518"
                  }
                }
              ],
              "_postman_id": "4cfd5fc8-5295-4752-a197-a28e469d23f4",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"mode\":4,\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2> Description </h2>\r\n<p>Commvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.</p> \r\n<p><b>Note:</b> The authentication token expires after 30 minutes of inactivity.</p> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "788fa7aa-06fe-4cd7-ac5f-b5ffb892a7e3",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:12:06 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 3c16bbfd7b607e22009ff0f4ee637d8770dbd2cf8452fad545f2c5a4b9795fc306520582e6918e6ff550706909b2ab35c0a4d7bde6a052049ea91b9151e9bd18d7369c45073dd241aae0369842d95bcb7fca35e81456f087cf71b108357208e29dd93328a0ffd97cd786d02fef8c468d45f4465feec04799d79da40bc786d2dbae5ea9266fe213ac882604d34ec58efa27bc1fefe27438c66985e7234626728bc28e1caa2b85c4ef59afca4b5ca53ee7adf4d406298130a5ecba0a684d8e68f70d3d6cdd91f6ed596a32dbb5235b99d44fbdf8192dfc133649fec5249a79da498e0ce0f8e69f651ab2355d0bffa011360f7add5f0beab412eee12cf8546c6558dd92f71aedc4a0466e381ddd9e08c07191d6bff53158536d2\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            }
          ],
          "_postman_id": "07e13656-ada5-427b-839f-d23d72a93756",
          "_postman_isSubFolder": true
        },
        {
          "name": "File and Folder Operations for Public Shares",
          "item": [
            {
              "name": "Create Folder by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"PUBLICSHAREFOLDER_GUID\", jsonData.fileResource.GUID);",
                      "",
                      "tests[\"Status code is 201\"] = responseCode.code === 201;",
                      "",
                      "tests[\"Response Body contains GUID\"] = responseBody.has(\"GUID\");",
                      "",
                      "tests[\"Response Body contains folder name\"] = responseBody.has(\"name\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");"
                    ],
                    "id": "d3e38576-b515-4acd-88e5-b724ff2af036"
                  }
                }
              ],
              "_postman_id": "b6ac8369-3221-451a-995d-d4dc3af3ebdc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "<App_FileResourceInfo name=\"DemoPublicShare\"/>",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{RootGuid}}",
                "description": "<h2>Description</h2> \r\n<p>This operation creates a new folder in the ObjectStore based on the GUID of the parent folder.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified parent folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \r\n     </div> \r\n    </div> </td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_folder_by_folderid.htm)"
              },
              "response": [
                {
                  "id": "dd9de4b6-6f88-4203-bb0b-2274bcf2e669",
                  "name": "POST Create Folder by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo name=\"{{FolderName}}\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{RootGuid}}"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "197"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 13:43:40 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"GUID\":\"fdf49b9e9e5a4e0c8333fbaf47540be2\",\"directory\":true,\"path\":\"\\\\DemoFolder\",\"parentGuid\":\"d9fa1b7bc1c44a9ebc9237713997fcb7\",\"name\":\"DemoFolder\"\r},\"error\":{\r\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Share Folder by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains syncWebFolderName\"] = responseBody.has(\"DemoPublicShare\");",
                      "",
                      "tests[\"Response Body contains syncWebFolderId\"] = responseBody.has(\"syncWebFolderId\");",
                      "",
                      "postman.setEnvironmentVariable(\"shareId\", jsonData.shareInfo.shareFolder.syncWebFolderId);",
                      "tests[\"Response Body contains resp\"] = responseBody.has(\"resp\");",
                      "tests[\"Response Body contains shareInfo\"] = responseBody.has(\"shareInfo\");"
                    ],
                    "id": "bd97a8c7-f622-49d7-998b-3b582fda3c2b"
                  }
                }
              ],
              "_postman_id": "c43a33d8-95fb-4450-a739-1638c5832e1d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"status\":1,\r\n   \"sharedToOperationType\":2,\r\n   \"sharedTo\":[\r\n      {\r\n         \"permission\":2,\r\n         \"userType\":1,\r\n         \"user\":{\r\n            \"userName\":\"admin\"\r\n         }\r\n      }\r\n   ],\r\n   \"shareFolder\":{\r\n      \"syncWebFolderName\":\"DemoPublicShare\"\r\n   },\r\n   \"browseInfo\":{\r\n      \"paths\":[\r\n         {\r\n            \"path\":\"\\\\DemoPublicShare\"\r\n         }\r\n      ],\r\n      \"emailInfo\":{\r\n         \"emailMessage\":\"\",\r\n         \"dontSendEmail\":true\r\n      }\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/action/share",
                "description": "<h2>Description</h2> \r\n<p>Use this operation to share a specific file or folder in an ObjectStore based on the file or folder path.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file or folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>The file or folder is already shared or the specified share name already exists. <p>The response body will have the shareID of the existing share if the file or folder is already shared. The shareID can be used to update the users/user groups to which the file or folder is already shared. For example:</p> \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;App_SharedFoldersResp&gt; &lt;shareInfo&gt; &lt;shareFolder syncWebFolderName=&quot;Test&quot; syncWebFolderId=&quot;10&quot; /&gt; &lt;/shareInfo&gt; &lt;resp errorMessage=&quot;&quot; errorCode=&quot;409&quot; /&gt; &lt;/App_SharedFoldersResp&gt;</p> \r\n     </div> \r\n    </div></td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_by_path.htm)"
              },
              "response": [
                {
                  "id": "0425d38b-efca-4e7d-9e2f-162369c5689e",
                  "name": "POST Share Folder by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_ShareInfo sharedToOperationType=\"2\" status=\"0\">\r\n    <browseInfo>\r\n    \t<paths path=\"\\DemoShareFolder\"></paths>\r\n        <emailInfo dontSendEmail=\"1\" emailMessage=\"\"/> \r\n    </browseInfo>\r\n    <shareFolder syncWebFolderName=\"DemoShareFolder\"/>\r\n    <sharedTo permission=\"1\" userType=\"1\"> \r\n        <user userName=\"admin\"/> \r\n    </sharedTo>  \r\n</App_ShareInfo>"
                    },
                    "url": "{{ServerUrl}}/contentstore/action/share"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "375"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:13:34 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"shareInfo\":{\r\"shareFolder\":{\r\"syncWebFolderId\":254769,\"syncWebFolderName\":\"DemoShareFolder\"\r},\"browseInfo\":{\r\"edgeClient\":true,\"cloudId\":1,\"paths\":[\r{\r\"path\":\"0134c85a01cb4f9f810176fcc12d9cc4\",\"directory\":true\r}\r],\"emailInfo\":{\r\"emailMessage\":\"\",\"browseUrl\":\"\\u002fwebconsole\\u002fgtl.do?gid=Aqdhwvr\",\"dontSendEmail\":true\r}\r}\r},\"resp\":{\r\"errorMessage\":\"\",\"errorCode\":0\r}\r}"
                }
              ]
            },
            {
              "name": "Upload File to Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains chunkOffset\"] = responseBody.has(\"chunkOffset\");",
                      "",
                      "tests[\"Response Body contains fileGUID\"] = responseBody.has(\"fileGUID\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"PUBLICSHAREFILE_GUID\", jsonData.fileGUID);",
                      "tests[\"Validating error code\"] = jsonData.errorCode === 200;"
                    ],
                    "id": "5f5dc73a-4d8b-44a2-b281-292f4fc45b8b"
                  }
                }
              ],
              "_postman_id": "d350137d-efae-4efb-a019-8674f36b9c9b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "FileName",
                    "value": "{{FileName1}}"
                  },
                  {
                    "key": "FileSize",
                    "value": "{{FileSize}}"
                  },
                  {
                    "key": "ParentFolderPath",
                    "value": "{{ShareParentFolderPath}}"
                  },
                  {
                    "key": "FileModifiedtime",
                    "value": "{{FileModifiedtime}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{{FileData}}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "share",
                    "{{shareId}}",
                    "file",
                    "action",
                    "upload"
                  ],
                  "query": [
                    {
                      "key": "uploadType",
                      "value": "fullFile"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>Use this operation to create a new folder within a shared folder in the ObjectStore based on the shared parent folder path name.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the folder name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified parent folder does not exist.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>409</td> \r\n   <td>Conflict</td> \r\n   <td>A folder with the specified name already exists in the same location. <p>The response body will include the information of the folder that already exists. For example:</p> \r\n    <div class=\"cv-ui-codesnippet\"> \r\n     <div class=\"cv-text-codesnippet\"> \r\n      <p>&lt;App_FileResourceResponse&gt; &lt;error errorCode=&quot;409&quot; /&gt; &lt;fileResource parentGuid=&quot;97409005317b4dbd9c138d2fd80a9e50&quot; GUID=&quot;be7d714583584307bf00f1de47212b94&quot; directory=&quot;1&quot; name=&quot;NewFolder&quot; path=&quot;\\Folder1\\NewFolder&quot; /&gt; &lt;/App_FileResourceResponse&gt;</p> \r\n     </div> \r\n    </div> </td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_folder_by_path.htm)"
              },
              "response": [
                {
                  "id": "17921528-3589-44ae-8e8b-23dbbb2e3ddf",
                  "name": "POST Upload File to Share",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "FileName",
                        "value": "{{FileName1}}"
                      },
                      {
                        "key": "FileSize",
                        "value": "{{FileSize}}"
                      },
                      {
                        "key": "ParentFolderPath",
                        "value": "{{ShareParentFolderPath}}"
                      },
                      {
                        "key": "FileModifiedtime",
                        "value": "{{FileModifiedtime}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{{FileData}}"
                    },
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/action/upload?uploadType=fullFile",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "share",
                        "{{shareId}}",
                        "file",
                        "action",
                        "upload"
                      ],
                      "query": [
                        {
                          "key": "uploadType",
                          "value": "fullFile"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "154"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:14:49 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorString\":\"\",\"chunkOffset\":17,\"requestId\":\"2201161032277392138012818058417418996155\",\"fileGUID\":\"881e1017d258454caf9bce7b1eb1b62a\",\"errorCode\":200\r}"
                }
              ]
            },
            {
              "name": "View Properties of File in Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains DemoFile1\"] = responseBody.has(\"DemoFile1.doc\");",
                      "tests[\"Response Body contains fileResource\"] = responseBody.has(\"fileResource\");",
                      "tests[\"Response Body contains parentGuid\"] = responseBody.has(\"parentGuid\");",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "postman.setEnvironmentVariable(\"versionId\", jsonData.fileResource.versionGUID);"
                    ],
                    "id": "70cfc623-91f5-443a-b19a-5b605bc7b0e4"
                  }
                }
              ],
              "_postman_id": "57c7078e-14b2-4b64-a2e7-11df8b7667d0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "publicshare",
                    "{{shareId}}",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>This operation returns the properties associated with an ObjectStore file or folder in a public share based on the file or folder path.</p> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_public_share_properties.htm)"
              },
              "response": [
                {
                  "id": "1c2ab624-cf68-48bb-aec7-eb07f640577b",
                  "name": "GET View Properties of File in Public Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": {
                      "raw": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                      "host": [
                        "{{ServerUrl}}"
                      ],
                      "path": [
                        "contentstore",
                        "publicshare",
                        "{{shareId}}",
                        "action",
                        "metadata"
                      ],
                      "query": [
                        {
                          "key": "path",
                          "value": "\\DemoFile1.doc"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "887"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:18:17 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"fileResource\":{\r\"modifiedTime\":1481595468,\"previewUrl\":\"\\u002fcontentstore\\u002fpublicshare\\u002f580754\\u002ffile\\u002fe6ea9b3662c04765b2e8e01041547eab\\u002faction\\u002fpreview\",\"parentPath\":\"\\\\\",\"GUID\":\"e6ea9b3662c04765b2e8e01041547eab\",\"sizeinBytes\":17,\"downloadUrl\":\"\\u002fcontentstore\\u002fpublicshare\\u002f580754\\u002ffile\\u002fe6ea9b3662c04765b2e8e01041547eab\\u002faction\\u002fdownload\",\"versionGUID\":\"dd0919909fa836ece7685510c03fb6be\",\"path\":\"\\\\DemoFile1.doc\",\"file\":true,\"parentGuid\":\"65d6d0cd48854a2b9f4b4f58701301b4\",\"name\":\"DemoFile1.doc\",\"canUserEdit\":false,\"customProperties\":{\r\"nameValues\":[\r{\r\"name\":\"IS_VISIBLE\",\"value\":\"true\"\r},{\r\"name\":\"cvfsuniqueid\",\"value\":\"714151532\"\r},{\r\"name\":\"timestamp\",\"value\":\"2017-07-10T16:16:25.694Z\"\r},{\r\"name\":\"mtmstr\",\"value\":\"1481595468\"\r},{\r\"name\":\"_version_\",\"value\":\"1572552993103937536\"\r},{\r\"name\":\"CI_STATUS\",\"value\":\"0\"\r}\r]\r}\r},\"error\":{\r\r}\r}"
                }
              ]
            },
            {
              "name": "Download a File in a Public Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      ""
                    ],
                    "id": "e6e1bb6f-fbc7-498e-9600-920b8f6af9de"
                  }
                }
              ],
              "_postman_id": "da6701d4-ee15-4872-866b-64afc0895e42",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/download",
                "description": "<h2>Description</h2> \r\n<p>This operation downloads a file in the ObjectStore public share based on the GUID of the file.</p> \r\n<p><b>Note</b>: Downloading a shared folder is currently not supported using this operation.</p> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_publicshare_download_by_id.htm)"
              },
              "response": [
                {
                  "id": "2b80f205-ca19-48bb-9273-8ac043067b7e",
                  "name": "GET Download a File in a Public Share by ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:20:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download a File in a Public Share by Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "626fb56d-a402-42f5-9a6d-4930eb3796c9"
                  }
                }
              ],
              "_postman_id": "ccdba887-da99-4eaa-9007-70ad1a746bc3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/action/metadata?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "publicshare",
                    "{{shareId}}",
                    "action",
                    "metadata"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \r\n<p>This operation downloads a file from the ObjectStore public share based on the file path.</p> \r\n<p><b>Note</b>: Downloading a folder is currently not supported using this operation.</p> \r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_publicshare_download_by_path.htm)"
              },
              "response": [
                {
                  "id": "178c4075-9fe8-433e-8321-3e6560b457a9",
                  "name": "GET Download a File in a Public Share by Path",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:20:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Download a File Version from a Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "84574f25-a580-46f1-8d0d-9b15c312e00a"
                  }
                }
              ],
              "_postman_id": "be9c5049-2ea0-468d-9994-f2386d880fbd",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/version/{{versionId}}/action/download",
                "description": "<h2>Description</h2> \n<p>This operation downloads a specific version of a file in the ObjectStore public share based on the GUID of the file version.</p> \n<p><b>Note</b>: Downloading a shared folder is currently not supported using this operation.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error cased due to one of the following reasons: \n    <ul> \n     <li>The user does not have access to the share </li> \n     <li>The file requested is not accessible inside the share </li> \n     <li>Download operation is not allowed. This can happen if you attempt to download a folder.</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_publicshare_download_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "96005af6-7b28-4cec-8051-2325a5c95bce",
                  "name": "GET Download a File Version from a Public Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/download"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "raw",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/octet-stream"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "attachment; filename=DemoFile1.doc"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 16:20:15 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "Demo File Content"
                }
              ]
            },
            {
              "name": "Preview File in Public Share By ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains Demo File Content\"] = responseBody.has(\"Demo File Content\");"
                    ],
                    "id": "71ca2ca8-4a25-4aeb-bb68-4df1c7e19768"
                  }
                }
              ],
              "_postman_id": "d9d9da2b-1691-4ae7-a86a-0a772667a48b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/html"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/preview",
                "description": "<h2>Description</h2> \r\n<p>This operation returns the preview for a shared file or a file within a shared folder in an ObjectStore based on the file path.</p> \r\n<p>Preview is currently supported for all images and Microsoft Office file types. </p> \r\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=\"http://documentation.commvault.com/commvault/v11/article?p=products/web_console/t_wcnsl_admin_preview_size.htm\" data-internal=\"true\">Changing the File Size Limit for Preview</a>.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>204</td> \r\n   <td>No Content</td> \r\n   <td>Preview is not available for the file.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_publicshare_preview_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "8d75b191-b061-4b7d-8bb8-872d01a921bc",
                  "name": "GET Preview File Versions in Public Share By ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:11:01 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Preview File in Public Share By Path",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains Demo File Content\"] = responseBody.has(\"Demo File Content\");"
                    ],
                    "id": "2184cb6a-71bc-452b-82bb-bb3f178341d5"
                  }
                }
              ],
              "_postman_id": "6ad5c3d5-995d-49ef-9ba7-d07637649959",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/html"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": {
                  "raw": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/action/preview?path=\\DemoFile1.doc",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore",
                    "publicshare",
                    "{{shareId}}",
                    "action",
                    "preview"
                  ],
                  "query": [
                    {
                      "key": "path",
                      "value": "\\DemoFile1.doc"
                    }
                  ]
                },
                "description": "<h2>Description</h2> \n<p>This operation returns the preview for a public shared file or a file within a public shared folder in an ObjectStore based on the file path.</p> \n<p>Preview is currently supported for all images and Microsoft Office file types. </p> \n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=\"article?p=products/web_console/t_wcnsl_admin_preview_size.htm\" data-internal=\"true\">Changing the File Size Limit for Preview</a>.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \n  </tr> \n  <tr> \n   <td>204</td> \n   <td>No Content</td> \n   <td>Preview is not available for the file.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_publicshare_preview_by_filepath.htm)"
              },
              "response": [
                {
                  "id": "880cf95b-ab84-4827-9b89-5c8095c6204b",
                  "name": "GET Preview File Versions in Public Share By ID",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:11:01 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Public Share File Versions",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains Demo File Content\"] = responseBody.has(\"Demo File Content\");"
                    ],
                    "id": "028b74b3-dcdb-466e-bb0a-b5d1e1227ef2"
                  }
                }
              ],
              "_postman_id": "16b95d4c-0b0f-4643-b1d3-b502e9f542d1",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "text/html"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/version/{{versionId}}/action/preview",
                "description": "<h2>Description</h2> \r\n<p>This operation returns the preview of a specific version of a public shared file or a file within a public shared folder in an ObjectStore based on the GUID of the file version.</p> \r\n<p>Preview is currently supported for all images and Microsoft Office file types. </p> \r\n<p>By default, you can preview files that have a maximum file size limit of 10 MB. For instructions on changing the file size limit, see <a href=\"article?p=products/web_console/t_wcnsl_admin_preview_size.htm\" data-internal=\"true\">Changing the File Size Limit for Preview</a>.</p> \r\n\r\n<h2>Supported Error Codes</h2> \r\n<table width=\"100%\"> \r\n <tbody> \r\n  <tr> \r\n   <th width=\"20%\">Code</th> \r\n   <th width=\"20%\">Status</th> \r\n   <th width=\"60%\">Description</th> \r\n  </tr> \r\n  <tr> \r\n   <td>400</td> \r\n   <td>Bad Request</td> \r\n   <td>The request is missing required parameters or the file name has some unacceptable characters.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>204</td> \r\n   <td>No Content</td> \r\n   <td>Preview is not available for the file.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>403</td> \r\n   <td>Forbidden</td> \r\n   <td>User does not have permissions to preview or the preview is requested for a folder or an unsupported file type.</td> \r\n  </tr> \r\n  <tr> \r\n   <td>404</td> \r\n   <td>Not Found</td> \r\n   <td>The specified file does not exist.</td> \r\n  </tr> \r\n </tbody> \r\n</table>\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_publicshare_preview_version_by_id.htm)"
              },
              "response": [
                {
                  "id": "396d97af-eb05-4958-ba5f-36606f295a92",
                  "name": "GET Public Share File Versions",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "text/html"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/version/{{versionId}}/action/preview"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "492"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/html; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Content-disposition",
                      "name": "Content-disposition",
                      "value": "inline; filename="
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:17:53 GMT"
                    },
                    {
                      "description": "",
                      "key": "FileModifiedtime",
                      "name": "FileModifiedtime",
                      "value": "1481595468"
                    },
                    {
                      "description": "",
                      "key": "FileName",
                      "name": "FileName",
                      "value": "RGVtb0ZpbGUxLmRvYw=="
                    },
                    {
                      "description": "",
                      "key": "FileSize",
                      "name": "FileSize",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\r\n<head>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.DefaultParser\"/>\r\n\r\n<meta name=\"X-Parsed-By\" content=\"org.apache.tika.parser.txt.TXTParser\"/>\r\n\r\n<meta name=\"Content-Encoding\" content=\"ISO-8859-1\"/>\r\n\r\n<meta name=\"ext_name\" content=\"none\"/>\r\n\r\n<meta name=\"Content-Type\" content=\"text/plain; charset=ISO-8859-1\"/>\r\n\r\n\r\n</head>\r\n\r\n<body style=\"background:#fff;\" background=\"\" >\r\n<pre>Demo File Content</pre>\r\n</body>\r\n</html>\r\n\r\n"
                }
              ]
            },
            {
              "name": "Add Custom Properties to File in a Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Validating error code\"] = jsonData.response[0].errorCode === 0;"
                    ],
                    "id": "482d14e4-daef-4783-abe2-fcc506fd6de6"
                  }
                }
              ],
              "_postman_id": "7bbecde6-0b0f-4815-bbd2-9230b1a7fc8f",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2> \n<p>Use this operation to add new custom properties or modify existing custom properties to individual or multiple files and folders that are shared or reside within a shared folder in an ObjectStore based on the GUID of the file or folder.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or the custom property is not provided in the request body or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or User does not have access or editable rights to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_custom_prop_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "7281ad60-816f-4e0f-93b8-b3a496ce7d9a",
                  "name": "POST Move File in Share by Path",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<App_FileResourceInfo path=\"\\DemoShareFile1Renamed.doc\" parentPath=\"\\DemoShareFolder2\"/>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/action/move"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:20:51 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "View Custom Properties of a File in Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Response Body contains testproperty\"] = responseBody.has(\"testproperty1\");",
                      "",
                      "tests[\"Response Body contains testvalue\"] = responseBody.has(\"testvalue1\");"
                    ],
                    "id": "598d5a46-103c-4b25-bc28-b30f8cb581c5"
                  }
                }
              ],
              "_postman_id": "6a329720-d0ba-4fc1-82ff-271f1e3c7656",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/properties",
                "description": "<h2>Description</h2> \n<p>Use this operation to list specific or all custom properties of a file or folder that is public shared or resides within a public shared folder in an ObjectStore based on the GUID of the file or folder.</p> \n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or the user does not have access to this share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_public_share_custom_prop_filter_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "1fbcbed4-4ca2-4dfa-b249-681f04b43671",
                  "name": "GET View Custom Properties of a File in Public Share",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "268"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:07:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GetCustomPropertyResp><error errorCode=\"200\" /><props><customProps><nameValues name=\"testproperty1\"><values val=\"testvalue1\" /></nameValues><nameValues name=\"testproperty2\"><values val=\"testvalue2\" /></nameValues></customProps></props></App_GetCustomPropertyResp>"
                }
              ]
            },
            {
              "name": "Delete Custom Properties in a Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "ae7ded0a-6c3c-4f12-968a-efbbfd2b94c7"
                  }
                }
              ],
              "_postman_id": "e9a04b49-826e-4bc8-a6c3-a3d1ad195b6d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{PUBLICSHAREFILE_GUID}}\"\r\n      }\r\n   ],\r\n   \"customProps\":{\r\n      \"nameValues\":[\r\n         {\r\n            \"name\":\"testproperty1\",\r\n            \"value\":\"testvalue1\"\r\n         },\r\n         {\r\n            \"name\":\"testproperty2\",\r\n            \"value\":\"testvalue2\"\r\n         }\r\n      ]\r\n   }\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/properties",
                "description": "<h2>Description</h2>\nUse this operation to delete the custom properties of individual or multiple files and folders that are shared or resides within a shared folder in an ObjectStore based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Required parameters were not specified correctly or the custom property is not provided in the request body or invalid path inside share.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or share has expired or User does not have access or editable rights to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>GUID provided in request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_share_custom_property.htm)"
              },
              "response": [
                {
                  "id": "b56111da-d2b5-4c05-83bb-5ba6b15aa216",
                  "name": "DELETE Delete Custom Properties",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_CustomPropertiesReq>\r\n<fileFolderInfo fileGUID=\"{{FILE1_GUID}}\"/>\r\n<customProps> \r\n  <nameValues name=\"testproperty1\" value=\"testvalue1\"/>\r\n  <nameValues name=\"testproperty2\" value=\"testvalue2\"/>\r\n</customProps> \r\n</Api_CustomPropertiesReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/properties"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "32"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 14:58:11 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<Api_CustomPropertiesRespList />"
                }
              ]
            },
            {
              "name": "Add Tags to File in Share by ID",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "ea70f9d4-80cf-4fe8-af61-fb92a6aa24f2"
                  }
                }
              ],
              "_postman_id": "561f62f1-a230-42e4-863b-5cfe61b2945a",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{PUBLICSHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags",
                "description": "<h2>Description</h2>\nUse this operation to add your own tags to one or more files and folders within a shared folder in an ObjectStore based on the GUID of the file or folder.\n\nTag names can be a combination of letters and numbers. Letters are case-insensitive.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>Request is missing required request body or file and folder information is not provided in the request body.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/post_contentstore_share_tag_by_id.htm)"
              },
              "response": [
                {
                  "id": "f50d7a11-afb4-4d21-9991-b805331487bd",
                  "name": "POST Add Tags to File in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "List Tags for a File in Public Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains test tag\"] = responseBody.has(\"test_tag\");",
                      "tests[\"Response Body contains response\"] = responseBody.has(\"response\");"
                    ],
                    "id": "4681d81d-db05-4fc7-875f-5f7b6bc6d8d2"
                  }
                }
              ],
              "_postman_id": "fbcacb72-d3f8-455d-a466-3c7e93562d8b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "url": "{{ServerUrl}}/contentstore/publicshare/{{shareId}}/file/{{PUBLICSHAREFILE_GUID}}/tags",
                "description": "<h2>Description</h2>\nThis operation returns the list of tags assigned to a file or folder that is public shared or resides within a public shared folder in an ObjectStore based on the GUID of the file or folder.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The required parameters were not specified correctly or the GUID of the file or folder is not shared or not part of the shared folder.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Input token does not match or the share has expired or the user does not have access to the share.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The GUID provided in the request is not found or failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/get_contentstore_publicshare_tag_by_fileid.htm)"
              },
              "response": [
                {
                  "id": "c328c2bf-9260-480f-a7e6-63504f850736",
                  "name": "POST Add Tags to File in Share by ID",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:53:56 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Delete Tags in a Share",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "",
                      "tests[\"Response Body contains response\"] = responseBody.has(\"response\");"
                    ],
                    "id": "41a0fcd7-590d-41b4-b876-7c0c2e0adc70"
                  }
                }
              ],
              "_postman_id": "3df38903-d891-4903-99bd-b6f19aeb9e6d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"values\":\"test_tag\",\r\n   \"fileFolderInfo\":[\r\n      {\r\n         \"fileGUID\":\"{{PUBLICSHAREFILE_GUID}}\"\r\n      }\r\n   ]\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags",
                "description": "<h2>Description</h2>\nUse this operation to delete tags from one or more shared files and folders in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required request body or the file or folder information is not provided in the request body or shareId is not specified correctly.</td> \n  </tr> \n  <tr> \n   <td>500</td> \n   <td>Internal Server Error</td> \n   <td>Failed to retrieve the share information.</td> \n  </tr> \n  <tr> \n   <td>403</td> \n   <td>Forbidden</td> \n   <td>Error caused by one of the following reasons: \n    <ul> \n     <li>Input token does not match</li> \n     <li>Share expired</li> \n     <li>User does not have access to the share</li> \n     <li>User does not have editable rights to the share</li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>Failed to get share folder details. Share may no longer exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_share_tag.htm)"
              },
              "response": [
                {
                  "id": "598414ad-b323-4cca-9549-588aa35ae8b2",
                  "name": "DELETE Delete Tags in a Share",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      },
                      {
                        "key": "Content-Type",
                        "name": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<Api_TagsReq values=\"test_tag\"> \r\n<fileFolderInfo fileGUID=\"{{SHAREFILE_GUID}}\"/> \r\n</Api_TagsReq>"
                    },
                    "url": "{{ServerUrl}}/contentstore/share/{{shareId}}/tags"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "19"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 14:59:05 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"response\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Remove Sharing for Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "d40fe61e-77c1-461b-bdfe-d3104c68a49d"
                  }
                }
              ],
              "_postman_id": "cf8508e8-197a-469a-bbfa-ed4a7d4864dc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/xml"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/ShareFolder/{{shareId}}",
                "description": "<h2>Description</h2>\nUse this operation to remove the sharing on a file or folder.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_share.htm)"
              },
              "response": [
                {
                  "id": "c01f9cf0-ab03-4dbb-8cc9-da932afbe80c",
                  "name": "DELETE Remove Sharing For Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/ShareFolder/{{shareId}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "xml",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "49"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/xml; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 17:19:18 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "<App_GenericResp errorMessage=\"\" errorCode=\"0\" />"
                }
              ]
            },
            {
              "name": "Delete Share Folder",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200;",
                      "tests[\"Validating error code\"] = jsonData.response[0].errorCode === 0;"
                    ],
                    "id": "86fb487d-af9a-407a-a6b3-d2667e290a48"
                  }
                }
              ],
              "_postman_id": "bf8c0f6f-33d2-46bd-b4fe-4f69697bdd21",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/contentstore/file/{{PUBLICSHAREFOLDER_GUID}}",
                "description": "<h2>Description</h2>\nThis operation deletes a file or a folder in an ObjectStore.\n\n<h2>Supported Error Codes</h2> \n<table width=\"100%\"> \n <tbody> \n  <tr> \n   <th width=\"20%\">Code</th> \n   <th width=\"20%\">Status</th> \n   <th width=\"60%\">Description</th> \n  </tr> \n  <tr> \n   <td>400</td> \n   <td>Bad Request</td> \n   <td>The request is missing required parameters.</td> \n  </tr> \n  <tr> \n   <td>404</td> \n   <td>Not Found</td> \n   <td>The specified file or folder does not exist.</td> \n  </tr> \n </tbody> \n</table>\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/delete_contentstore_folder.htm)"
              },
              "response": [
                {
                  "id": "c25ff31c-6aec-43c8-b2e7-6386b6e32005",
                  "name": "DELETE Delete Folder",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": "{{ServerUrl}}/contentstore/file/{{FOLDER_GUID}}"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "17"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 15:25:27 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"errorCode\":0\r}"
                }
              ]
            },
            {
              "name": "Create an ObjectStore",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "postman.setEnvironmentVariable(\"FolderName\", \"DemoFolder\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileData\", \"Demo File Content\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileSize\", \"17\");",
                      "",
                      "postman.setEnvironmentVariable(\"SecondFileSize\", \"34\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileModifiedtime\", \"1481595468\");",
                      "",
                      "postman.setEnvironmentVariable(\"ParentFolderPath\", \"XERlbW9Gb2xkZXI=\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName1\", \"RGVtb0ZpbGUxLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"FileName2\", \"RGVtb0ZpbGUyLmRvYw==\");",
                      "",
                      "postman.setEnvironmentVariable(\"ShareParentFolderPath\", \"XA==\");"
                    ],
                    "id": "5a601140-36f0-47d2-a3ce-3a07ab44310b"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"RootGuid\", jsonData.edgeDriveInfo.rootGUID);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200;"
                    ],
                    "id": "f9132804-e74a-4f98-ae6c-61e98cf3f815"
                  }
                }
              ],
              "_postman_id": "5d44c148-1723-4744-a415-b143c1a87a0c",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {}
                  }
                },
                "url": {
                  "raw": "{{ServerUrl}}/contentstore?type=testcontentstore",
                  "host": [
                    "{{ServerUrl}}"
                  ],
                  "path": [
                    "contentstore"
                  ],
                  "query": [
                    {
                      "key": "type",
                      "value": "testcontentstore"
                    }
                  ]
                },
                "description": "<h2>Description</h2>\r\nUse this operation to create an ObjectStore.\r\n\r\nEach authorized user can create one ObjectStore.\r\n\r\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/operations/put_contentstore.htm)"
              },
              "response": [
                {
                  "id": "c6332c2d-5ac2-476a-9c7b-f612eb4756a1",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                },
                {
                  "id": "e7c94f66-7dc4-498c-85cf-af88d091a1b3",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Thu, 06 Jul 2017 20:10:13 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 33336078812121f12ed95e742d6e012163aba72d0d105e7b33aeeb3fccff24d6485d9f3892bf47c505daba14b24b9aa55a58b04481cced157c03158caa32e2a4af5c06516f3415fabfb9d0669d43da1516b27d379977ace848daa5d78e197689b67d981ca1ad342ba28704b18357496bb53d265f71d544f68e684eb343c0db1293be0643b157859e8e9990bbfd8a583ab7270082b6e5ae617fbaf64259ac7fa0dcbd7d26b805dafe2e37b173160d113a3752229a08e9410c72d71c1e6686eebc2a69f00ebc5f4f45c4d728b8dcd99920cce834b4dd1b19343e476704a3995b61880664ac2771276204ea711404d74ad13189c1c7857efda494299cfcc03697268b64eb311695ab66ed2a94ced70192d108d2fc3fc722388db\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            },
            {
              "name": "Logout",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 202;"
                    ],
                    "id": "5ed0b770-2a0f-4ac9-af42-54588e807fce"
                  }
                }
              ],
              "_postman_id": "2099a31e-7c7a-40d3-b3c7-856c09215170",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authtoken",
                    "value": "{{TOKEN}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"mode\":4,\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Logout",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "195af72e-de6b-40cd-84e3-8c193e8abc35",
                  "name": "POST Logout",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      },
                      {
                        "key": "Authtoken",
                        "value": "{{TOKEN}}"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Logout"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "plain",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "15"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Fri, 07 Jul 2017 20:50:16 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "User logged out"
                }
              ]
            },
            {
              "name": "Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "postman.setEnvironmentVariable(\"TOKEN\", jsonData.token);",
                      "",
                      "tests[\"Successful POST request\"] = responseCode.code === 200 || responseCode.code === 202;",
                      "",
                      "tests[\"Response Body contains userGUID\"] = responseBody.has(\"userGUID\");",
                      "",
                      "tests[\"Response Body contains token\"] = responseBody.has(\"token\");"
                    ],
                    "id": "a195c1e1-f1aa-4bf8-ba1f-5ea5329b17fc"
                  }
                }
              ],
              "_postman_id": "f1d78907-9d1c-48e6-aceb-d56e4244f943",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n   \"mode\":4,\r\n   \"password\":\"{{password}}\",\r\n   \"username\":\"{{userName}}\"\r\n}",
                  "options": {
                    "raw": {}
                  }
                },
                "url": "{{ServerUrl}}/Login",
                "description": "<h2>Description</h2>\nCommvault REST APIs support token-based authentication via the Authtoken request header. The POST Login API is used to retrieve the authentication token. Once obtained, the authentication token must be inserted into the Authtoken header for all requests.\n\n<b>Note:</b> The authentication token expires after 30 minutes of inactivity.\n\n[_More Details_](http://documentation.commvault.com/commvault/v11/article?p=features/rest_api/rest_api_authentication.htm)"
              },
              "response": [
                {
                  "id": "4bf0396e-a4f6-4462-8b25-2efce43c7556",
                  "name": "POST Login",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/xml"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "<DM2ContentIndexing_CheckCredentialReq mode=\"{{Mode}}\" username=\"{{userName}}\" password=\"{{password}}\" />"
                    },
                    "url": "{{ServerUrl}}/Login"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "description": "",
                      "key": "Content-Length",
                      "name": "Content-Length",
                      "value": "1021"
                    },
                    {
                      "description": "",
                      "key": "Content-Type",
                      "name": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "description": "",
                      "key": "Date",
                      "name": "Date",
                      "value": "Mon, 10 Jul 2017 13:12:06 GMT"
                    },
                    {
                      "description": "",
                      "key": "Server",
                      "name": "Server",
                      "value": "Microsoft-IIS/8.5"
                    },
                    {
                      "description": "",
                      "key": "X-Powered-By",
                      "name": "X-Powered-By",
                      "value": "ASP.NET"
                    }
                  ],
                  "cookie": [
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/webconsole",
                      "secure": false,
                      "value": "4FE369232CA3619ADE65DB55EF647A0F",
                      "key": "JSESSIONID"
                    },
                    {
                      "expires": "Invalid Date",
                      "httpOnly": true,
                      "domain": "nkatzvm2.testlab.commvault.com",
                      "path": "/",
                      "secure": false,
                      "value": "6EDBA28BC1616A91E344BED0ED45695C",
                      "key": "JSESSIONID"
                    }
                  ],
                  "responseTime": null,
                  "body": "{\r\"aliasName\":\"1\",\"userGUID\":\"DCA36E19-F907-42D2-BA40-BA0E7757180A\",\"loginAttempts\":0,\"remainingLockTime\":0,\"smtpAddress\":\"nkatz@commvault.com\",\"userName\":\"admin\",\"providerType\":1,\"ccn\":0,\"token\":\"QSDK 3c16bbfd7b607e22009ff0f4ee637d8770dbd2cf8452fad545f2c5a4b9795fc306520582e6918e6ff550706909b2ab35c0a4d7bde6a052049ea91b9151e9bd18d7369c45073dd241aae0369842d95bcb7fca35e81456f087cf71b108357208e29dd93328a0ffd97cd786d02fef8c468d45f4465feec04799d79da40bc786d2dbae5ea9266fe213ac882604d34ec58efa27bc1fefe27438c66985e7234626728bc28e1caa2b85c4ef59afca4b5ca53ee7adf4d406298130a5ecba0a684d8e68f70d3d6cdd91f6ed596a32dbb5235b99d44fbdf8192dfc133649fec5249a79da498e0ce0f8e69f651ab2355d0bffa011360f7add5f0beab412eee12cf8546c6558dd92f71aedc4a0466e381ddd9e08c07191d6bff53158536d2\",\"capability\":4328650366975,\"forcePasswordChange\":false,\"isAccountLocked\":false,\"ownerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"providerOrganization\":{\r\"providerId\":0,\"providerDomainName\":\"Qinetix Commcell\"\r},\"errList\":[\r\r]\r}"
                }
              ]
            }
          ],
          "_postman_id": "b2ae5a94-0459-4ad2-82e8-399a92174814",
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "bdeda6ea-b991-4f7c-bd38-5faa747d86fd"
    },
    {
      "name": "QCurl",
      "item": [
        {
          "name": "GET",
          "item": [],
          "_postman_id": "05396243-4213-48c3-a192-532530a13730",
          "description": "DESCRIPTION:\r\n\r\n    Examples to run GET Rest APIs\r\n\r\nEXAMPLE: Get all Users with JSON response\r\n\r\n    Sample Request:\r\n    C:\\Program Files\\Commvault\\ContentStore\\Base>QCURL.exe -url \"http://%WebConsoleHostName%/webconsole/api/User\" -op GET -header 'Accept: application/json' -tf \"F:\\Yash\\temp\\tokenfile\"\r\n\r\n    Sample Response:\r\n    {\"processinginstructioninfo\":{\"attributes\":[{\"name\":\"exitval\",\"value\":\"0\"}]},\"users\":[{\"idleTime\":0,\"loggedInMode\":0,\"userEntity\":{\"userGUID\":\"D34FAABE-2821-4345-9D31-3FF0878F9FF0\",\"userName\":\"admin\",\"userId\":1}}]}\r\n\r\nEXAMPLE: Get User Properties with XML response\r\n\r\n    Sample Request:\r\n    C:\\Program Files\\Commvault\\ContentStore\\Base>QCURL.exe -url \"http://%WebConsoleHostName%/webconsole/api/User/222\" -op GET -header 'Accept: application/xml' -tk 33680baf4d5620bb3c89748e51eecb3c036bb40dc797742b361099ab7ab8659c9ce26f8838d653f8704ffceacd6b1941e2313df4e92022e3defb4d6b895e321694a5804ff3211a6004988a17fa728b635fd97c0fffde1b413312a306877e53004f90fed6942f4a243b222782000dae6c4fa095994cd90a8ddf3fc39b310179e4942d988664a9275773d24340dfdc98a705f8b5528af731eaf96c038caf08fc014eac9439431aaa64f80934f2f3c7b2a87343bad451506660b79923595ddbd99eea6b4ac0c8de694f0506b8733b61429ca2c0749261da3962f3637e021e663815f31d1d819787f29c7144f676cd749debc939fc64e7aefd4fa341d6a56bf0cd93298f10fd411e9a0492325bea4260ae440\r\n\r\n    Sample Response:\r\n    <App_GetUserPropertiesResponse><processinginstructioninfo><attributes name=\"exitval\" value=\"0\" /></processinginstructioninfo><users enforceFSQuota=\"0\" idleTime=\"0\" agePasswordDays=\"10\" quotaLimitInGB=\"100\" loggedInMode=\"0\" enableUser=\"1\" description=\"Modifying description\" inheritGroupEdgeDriveQuotaSettings=\"1\" email=\"jdoe@company.com\" edgeDriveQuotaLimitInGB=\"100\" lastLogIntime=\"0\" enforceEdgeDriveQuota=\"0\" fullName=\"Jane Doe\" inheritGroupQuotaSettings=\"1\"><apiQuota APILimit=\"0\" APItimeFrame=\"0\" /><userEntity userGUID=\"E4B67151-EEEC-4EEC-822B-2A8AD641254F\" userName=\"jdoe\" userId=\"222\" /><LinkedCommvaultUser /></users></App_GetUserPropertiesResponse>",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "52368834-da9f-43e2-9809-3fdd2d41e54d",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d1d53f2b-3488-4bb8-8104-7ce19d302331",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "POST & PUT",
          "item": [],
          "_postman_id": "9f634c98-adc8-401f-ae9b-39fb4981c977",
          "description": "DESCRIPTION:\r\n\r\n    Examples to run POST and PUT Rest APIs\r\n\r\nEXAMPLE: POST request to create a User\r\n\r\n    Sample Request:\r\n    C:\\Program Files\\Commvault\\ContentStore\\Base>QCURL.exe -url \"http://%WebConsoleHostName%/webconsole/api/User\" -op POST -header 'Accept: application/json' -header 'Content-Type: application/json' -tf \"F:\\Yash\\temp\\tokenfile\" -reqFile \"F:\\Yash\\temp\\req.txt\"\r\n    \r\n    Sample Response:\r\n    {\"processinginstructioninfo\":{\"attributes\":[{\"name\":\"exitval\",\"value\":\"0\"}]},\"response\":[{\"errorString\":\"Successful\",\"errorCode\":0,\"warningMessage\":\"\",\"entity\":{\"userId\":222,\"userGUID\":\"E4B67151-EEEC-4EEC-822B-2A8AD641254F\",\"userName\":\"jdoe\"}}]}\r\n\r\nEXAMPLE: PUT request to disable a User\r\n\r\n    Sample Request:\r\n    C:\\Program Files\\Commvault\\ContentStore\\Base>QCURL.exe -url \"http://%WebConsoleHostName%/webconsole/api/User/222/Disable\" -op PUT -header 'Accept: application/json' -header 'Content-Type: application/json' -tf \"F:\\Yash\\temp\\tokenfile\" -reqFile \"F:\\Yash\\temp\\emptyFile.txt\"\r\n\r\n    Sample Response:\r\n    {\"processinginstructioninfo\":{\"attributes\":[{\"name\":\"exitval\",\"value\":\"0\"}]},\"response\":[{\"errorString\":\"\",\"errorCode\":0,\"warningMessage\":\"\",\"entity\":{\"userId\":222,\"userName\":\"jdoe\"}}]}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a75e4d7a-5355-4223-8cca-fb40968a56e3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ec49ce39-6a5b-4251-aa87-0fb20bb643c8",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "DELETE",
          "item": [],
          "_postman_id": "94245d4a-f6ad-4500-9bee-7948098ddae1",
          "description": "DESCRIPTION:\r\n\r\n    Example to run DELETE Rest APIs\r\n\r\nEXAMPLE: DELETE a User\r\n\r\n    Sample Request:\r\n    C:\\Program Files\\Commvault\\ContentStore\\Base>QCURL.exe -url \"http://%WebConsoleHostName%/webconsole/api/User/222\" -op DELETE -header 'Accept: application/json' -tf \"F:\\Yash\\temp\\tokenfile\"\r\n\r\n    Sample Response:\r\n    {\"processinginstructioninfo\":{\"attributes\":[{\"name\":\"exitval\",\"value\":\"0\"}]},\"response\":[{\"errorString\":\"Success\",\"errorCode\":0,\"warningMessage\":\"\",\"entity\":{\"userId\":222,\"userName\":\"jdoe\"}}]}",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bc01fd69-ecb6-404e-8abd-dc038e68d19a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "289545f6-d907-4d95-903b-ed959ee089c3",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        }
      ],
      "_postman_id": "a743e871-d38a-4799-8f93-ef70ed256202",
      "description": "<h2> Description </h2>\r\n<p>This explains how to use QCurl commands to run Commvault REST APIs from the command line.</p> \r\n\r\n<h2>Authentication</h2>\r\n<p>There are three ways to authenticate to run QCurl commands</p>\r\n<ol>\r\n<li>Run QLogin.exe to log on to the CommServe before running any QCurl.exe command</li>\r\n<li>Using -tk option: Authenticated token string could be obtained using \"QLogin.exe -gt\" option</li>\r\n<li>Using -tf option: Authenticated token File could be obtained using \"QLogin.exe -f\" option</li>\r\n</ol>\r\n<h2>Options</h2>\r\n<table class=\"tableintopic\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\">\r\n<tbody>\r\n<tr align=\"left\" valign=\"top\">\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">Name</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p class=\"tabletext\">Description</p>\r\n</td>\r\n</tr>\r\n<tr align=\"left\" valign=\"top\">\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">-url</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p class=\"tabletext\">Web Service URL</p>\r\n<p class=\"tabletext\">Sample values are:</p>\r\n<ul class=\"listbullet\">\r\n<li class=\"listbullet\">https://WebConsoleHostName/webconsole/api</li>\r\n<li class=\"listbullet\">http://WebServerHostName:81/SearchSvc/CVWebService.svc</li>\r\n</ul>\r\n</td>\r\n</tr>\r\n<tr align=\"left\" valign=\"top\">\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">-header</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p class=\"tabletext\">Rest API Headers. Could send multiple headers by using the option twice. For Example, to send json payload and return json respnose: -header 'Accept: application/json' -header 'Content-Type: application/json'</p>\r\n<p class=\"tabletext\">Sample values are:</p>\r\n<ul class=\"listbullet\">\r\n<li class=\"listbullet\">'Accept: application/json'</li>\r\n<li class=\"listbullet\">'Accept: application/xml'</li>\r\n<li class=\"listbullet\">'Content-Type: application/json'</li>\r\n<li class=\"listbullet\">'Content-Type: application/json'</li>\r\n</ul>\r\n</td>\r\n</tr>\r\n<tr align=\"left\" valign=\"top\">\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">-reqFile</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p class=\"tabletext\">File location that contains rest api payload data. Format depends on the Content-Type header being sent</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">-op</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p>Supported HTTP Methods</p>\r\n<p class=\"tabletext\">Sample values are:</p>\r\n<ul class=\"listbullet\">\r\n<li class=\"listbullet\">GET</li>\r\n<li class=\"listbullet\">POST</li>\r\n<li class=\"listbullet\">PUT</li>\r\n<li class=\"listbullet\">DELETE</li>\r\n</ul>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">-tk</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p>Authenticated Token String. Token String could be obtained using \"QLogin.exe -gt\" option</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">-tf</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p>Reads authenticated token from a given file path. Token File could be obtained using \"QLogin.exe -f\" option</p>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td style=\"width: 91px;\">\r\n<p class=\"tabletext\">-h</p>\r\n</td>\r\n<td style=\"width: 479px;\">\r\n<p>Displays help</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n\r\nFor a list of all available rest apis, see [_Rest API Library_](https://documentation.commvault.com/11.24/expert/45619_rest_api_api_library.html)\r\n\r\n[_More Details About QCurl_](https://documentation.commvault.com/11.24/expert/134805_executing_rest_apis_using_qcurl.html)",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "45567f98-601f-43a7-91af-a91ed9e8aa5c",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "747f9aea-4523-4f11-be2d-b254ab9d0516",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ]
}